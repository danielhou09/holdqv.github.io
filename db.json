{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/asset/daniel.jpeg","path":"asset/daniel.jpeg","modified":0,"renderable":0},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.otf","path":"fonts/BreeSerif-Regular.otf","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.ttf","path":"fonts/BreeSerif-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.woff2","path":"fonts/BreeSerif-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.eot","path":"fonts/opensans-regular-webfont.eot","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.svg","path":"fonts/opensans-regular-webfont.svg","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.ttf","path":"fonts/opensans-regular-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.woff","path":"fonts/opensans-regular-webfont.woff","modified":0,"renderable":1},{"_id":"themes/crisp/source/js/ga.js","path":"js/ga.js","modified":0,"renderable":1},{"_id":"themes/crisp/source/styles/crisp.css","path":"styles/crisp.css","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1679557727468},{"_id":"source/.DS_Store","hash":"6974ddb0953597b845d10c3aec9016f9ed161fbb","modified":1621308770554},{"_id":"source/CNAME","hash":"ef0d04455637caf573260057930f1f69f59d625f","modified":1676450631932},{"_id":"source/_drafts/3.md","hash":"c99384ba0401f11e438b4c67899833a668413e54","modified":1679557727451},{"_id":"source/_drafts/4.md","hash":"1e8c9ea2ef3b9b0a280f1b1bce6d3d3f8f1cc635","modified":1676450631932},{"_id":"source/_posts/0216-restart.md","hash":"68d77ece013dc64214d92409a2d30ca91beb2ad0","modified":1679557727452},{"_id":"source/_drafts/xxx.md","hash":"07f00eab9837ce9e7a3e50a31a258cf16ced9624","modified":1676972482247},{"_id":"source/_posts/1-1.md","hash":"6dd78537aa31fa5c2c21c31eadc46e66adcff1e6","modified":1679557727452},{"_id":"source/_posts/1.md","hash":"66d1895641b79fb64c7b5b47d2157f7929a55c8b","modified":1679557727453},{"_id":"source/_posts/2.md","hash":"82cefdadb427df408a3e63eb1e19ae94cfd40aa3","modified":1679557727453},{"_id":"source/_posts/3.md","hash":"6e1c6f9485f42c0cd4f3961466ca43e575d5fcfc","modified":1677199858261},{"_id":"source/_posts/anxiety.md","hash":"4a35577643292a2417e0f52687a55e6ee803b4b7","modified":1676619793694},{"_id":"source/_posts/cache.md","hash":"6e3e71c340a91a0664ed12600820631b9e5d30af","modified":1677324366296},{"_id":"source/_posts/cachecompare.md","hash":"29133339e50db1df4c064b959760eac50a8f099c","modified":1677216792304},{"_id":"source/_posts/dm_task_set_cookie.md","hash":"a95fc66112f5f1c18a5f29e39693bf1a3fce87d4","modified":1676972410042},{"_id":"source/_posts/gdcm.md","hash":"2b9ac4f6a0d492d50e46749d557f0e666ab7079f","modified":1679557727454},{"_id":"source/_posts/hello-world.md","hash":"1a0c146b31cc17f67d78acaa69d4dd323ede2bb4","modified":1679557727454},{"_id":"source/_posts/hello-springboot.md","hash":"7ab08120fd3cd5e8efd7316d24c89255bc598b1d","modified":1676702538471},{"_id":"source/_posts/hexo-generator-search.md","hash":"163b81db5a2d4cdedb158ffb4bbe9ef51797f4ef","modified":1677131765568},{"_id":"source/_posts/idea always Update Indices.md","hash":"d01c7a938a47a131e1417b451be4e621710a0493","modified":1679557727455},{"_id":"source/_posts/index.md","hash":"bd9cc0e563264690e12a79997e56b61e99c2ba79","modified":1677564844562},{"_id":"source/_posts/java-中的锁解决什么问题.md","hash":"05afbd6c3323901921ae6b0c915abc3df3954961","modified":1679557727456},{"_id":"source/_posts/java-thread.md","hash":"314345ab50b3fdc3031fcd4ecbb5411e1b67d63d","modified":1678783514536},{"_id":"source/_posts/java怎找工作.md","hash":"1ed0816a786436bf84a0bd97bde771b6749f5652","modified":1679557727457},{"_id":"source/_posts/juc.md","hash":"95a9fb1f967c8ef1100fe9e0059ea5b12a2eb9db","modified":1679557727457},{"_id":"source/_posts/jc.md","hash":"65ad82086dd93f1587cdf2394eb8f8efa932d50a","modified":1679557727457},{"_id":"source/_posts/money.md","hash":"d23c0c652b79a2662a84b3345800b650316a8e3e","modified":1679557727458},{"_id":"source/_posts/liquidate.md","hash":"52417e947616ac0fee14750526198371b6b3cf8a","modified":1676858693435},{"_id":"source/_posts/one-day.md","hash":"b2ee9a917cd9168329f8b22a5e07d7afa9738e4b","modified":1679557727459},{"_id":"source/_posts/redisabout.md","hash":"fe929f2a4b2b279eac27f4706972670aa395d0f3","modified":1679557727463},{"_id":"source/_posts/restart.md","hash":"836dd2e7de502bf0abdacc97f1a8ef134197f4e1","modified":1679557727463},{"_id":"source/_posts/psotgresvsmysql.md","hash":"559f45cb0171f24c12559aabc3aee6dec213c9f7","modified":1678262032371},{"_id":"source/_posts/springboot-docker-demo.md","hash":"402648a57d50395264445e62610ac3d64948b65b","modified":1679557727464},{"_id":"source/_posts/springboot-docker.md","hash":"0fbb4517d925be0eb9c9f7e9f969b232af97d765","modified":1676560850704},{"_id":"source/_posts/spinlock.md","hash":"cfc825aacb0d9e258e96cfe92faef08bba513145","modified":1677403396539},{"_id":"source/_posts/springmvcvswebflux.md","hash":"f5cd97c189c0f0c79e2e3c5c14eb1bb22eeb4ae5","modified":1679557727465},{"_id":"source/_posts/springdoc.md","hash":"96bed7e572b9f9857ceb63bf23406ff0d444909f","modified":1678155751622},{"_id":"source/_posts/studyformdiffrence.md","hash":"047d0cb79beeb4cfb1e44a805c8909eea9594524","modified":1676722953383},{"_id":"source/_posts/studywhat.md","hash":"f9bce1b39f34302c04e7967915b8fb06d4324d59","modified":1677214564280},{"_id":"source/_posts/target.md","hash":"bd46c464f48a4f4f40cd2a1081b616f252d6a10f","modified":1676603980854},{"_id":"source/_posts/test.md","hash":"44ffc01cac165722f57b803ee1834330808a76e2","modified":1679557727465},{"_id":"source/_posts/testdatas.md","hash":"3c9564b34a96db9a4cf6db00574a22f558dc7dec","modified":1676971728586},{"_id":"source/_posts/towthings.md","hash":"82cefdadb427df408a3e63eb1e19ae94cfd40aa3","modified":1676560850698},{"_id":"source/_posts/tips.md","hash":"5983eed900d087603bab6530c32dd081027718a8","modified":1677553073635},{"_id":"source/_posts/xxb.md","hash":"b005f73a497cf877962a70c7d6ddb33962ce099c","modified":1679557727466},{"_id":"source/_posts/分布式事务.md","hash":"9f84846550805a4429b679f5d719cb4443a1ab6e","modified":1679557727466},{"_id":"source/_posts/whynotstaet.md","hash":"be862fe1bc36e9576591c7b027a32cf02ef273cf","modified":1677045327558},{"_id":"source/_posts/我的反思.md","hash":"f03bcc4c33e69030d8f3d37830b304de36631fe1","modified":1679557727466},{"_id":"source/_posts/搬运内容挣钱怎么了.md","hash":"b8906f02c5a6df6f903e6b9f693e6deab665796a","modified":1679557727467},{"_id":"source/about/index-1.md","hash":"03ab399cc8d81c84740a13952e09840c40954c7c","modified":1676450631933},{"_id":"source/about/index.md","hash":"18237a78ccf234a4c746135a9289edefe8353e88","modified":1679557727468},{"_id":"source/asset/daniel.jpeg","hash":"84140d99a0adf4f49fbb7f5b01cd7d49478294ed","modified":1676560850709},{"_id":"source/tag/index.md","hash":"cd170b2f938a46750e51161a86d9032c6dd14142","modified":1676560850710},{"_id":"source/categories/index.md","hash":"565e6c7c0ffa2740321f39da6a46cf0544857e13","modified":1679557727468},{"_id":"source/tags/index.md","hash":"1d6cf4a69c9d5f72c8c001eb5ab095d10c98de03","modified":1676560850711},{"_id":"themes/crisp/.gitignore","hash":"854da42f35444ed19a8164cb7c213f66ae0e178c","modified":1676452223138},{"_id":"themes/crisp/LICENSE","hash":"7bc66e9632b475079619f585722930b551c3c081","modified":1676452223139},{"_id":"themes/crisp/README.md","hash":"5df65fb6d4c854289509f5389e7380ce4b23ce09","modified":1676452223141},{"_id":"themes/crisp/_config.yml","hash":"7fc7371e411c756599f81d26a7fca0fcc30f16de","modified":1676454105026},{"_id":"themes/crisp/layout/archive.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1676452223143},{"_id":"themes/crisp/layout/category.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1676452223143},{"_id":"themes/crisp/layout/index.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1676452223145},{"_id":"themes/crisp/layout/page.ejs","hash":"e1c5903079fc342915025cfad9cf9e70a5cd83cc","modified":1676452223145},{"_id":"themes/crisp/layout/layout.ejs","hash":"1e0a5b30e7d5088b61a1263eddf2355bb5654bde","modified":1676621974480},{"_id":"themes/crisp/layout/post.ejs","hash":"ae761feddc98f4d3260e7591ed9fc91d9a49d0ab","modified":1676452223145},{"_id":"themes/crisp/layout/tag.ejs","hash":"5d8f22da9d3662c647599faaf21f02477432d556","modified":1676452223146},{"_id":"themes/crisp/layout/_partial/index.ejs","hash":"0cc9becdde690a8b66ae5e1809f0c8bf660840ab","modified":1676452223142},{"_id":"themes/crisp/layout/_partial/follow.ejs","hash":"21d54afed53c579fc823382af7f746136d4cf1e8","modified":1676452223142},{"_id":"themes/crisp/layout/_partial/page.ejs","hash":"3c4a7f68dcf7c205512069c9da99c9ff9d6ac3ef","modified":1676452223142},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.ttf","hash":"9e42f8b3aa1e670934ecaab1a4060a00f17fa2ed","modified":1676452223157},{"_id":"themes/crisp/layout/_partial/post.ejs","hash":"6f7a6730c11300af14b9caf451c3ceb8dc810ea3","modified":1676452223143},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.otf","hash":"f982b73492d5d6c82aa684f6bce894c63f6b2c79","modified":1676452223156},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.woff2","hash":"9407e77734344a53e33ef703dc40024d941f6280","modified":1676452223157},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.eot","hash":"606c985eaaef071488c12e5ea0a985d5b545eae7","modified":1676452223158},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.svg","hash":"dce2b68dd6b6c28b773994e35e4fc3e0e539ffdf","modified":1676452223159},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.woff","hash":"d6f86451bee7c843a0c23e61995e25927abb176a","modified":1676452223161},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.ttf","hash":"6d72a9e751414873228dd1c43ec7b16da1c2a285","modified":1676452223160},{"_id":"themes/crisp/source/styles/crisp.css","hash":"5dfff8b3964c633c65f7ba60d2246a3aeab57183","modified":1676452223162},{"_id":"themes/crisp/source/js/ga.js","hash":"a96d26c095fac491b4d48a32d60e4ee46a208a19","modified":1676452223162},{"_id":"themes/crisp/screenshot.png","hash":"d0ea355c7da51f97ae0781f0ccaa7cea3ca6268e","modified":1676452223152},{"_id":"public/baidusitemap.xml","hash":"90cfb3941e13f711ac5215e84dde85bb4155f051","modified":1679558070158},{"_id":"public/search.xml","hash":"026f50d1d276d5529ac9a04e8e688f966a56d42c","modified":1679558070158},{"_id":"public/sitemap.xml","hash":"b44566dd5257552ce04cf0d6de4799a126433e57","modified":1679558070158},{"_id":"public/leancloud_counter_security_urls.json","hash":"1bc794b0df865bf50501609816c113e8c07e8646","modified":1679558070158},{"_id":"public/tag/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1679558070158},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1679558070158},{"_id":"public/index.html","hash":"2a77371e050a30c9454a04807d1f7b3789c3d496","modified":1679558070158},{"_id":"public/about/index-1.html","hash":"8f8f4aaa3ad556d82b26b5b474d5f568fb4e1787","modified":1679558070158},{"_id":"public/about/index.html","hash":"7e7da8251fdfc29e4640b66c336911dc8d908489","modified":1679558070158},{"_id":"public/categories/index.html","hash":"144b1352c82102c86390af6aba7373c75455df9f","modified":1679558070158},{"_id":"public/2023/03/23/我的反思/index.html","hash":"5fc8b84129722d4539f2f328f043ae5299116296","modified":1679558070158},{"_id":"public/2023/03/23/test/index.html","hash":"45c7b4db2fc9fea7990d38c94e1e8de14d5661c8","modified":1679558070158},{"_id":"public/2023/03/23/juc/index.html","hash":"a67f6beab238dcf285406b9ccf921bd3182744b4","modified":1679558070158},{"_id":"public/2023/03/23/idea always Update Indices/index.html","hash":"16c0791e1a03082b1e037c7d3e114f1ba791c410","modified":1679558070158},{"_id":"public/2023/03/14/java-thread/index.html","hash":"5abac1283713ef777b2253750dd7bbe1fbedb612","modified":1679558070158},{"_id":"public/2023/03/07/springdoc/index.html","hash":"77eb589a16fd7b90c832a4c7bdbae235d1a0d3e5","modified":1679558070158},{"_id":"public/2023/02/28/index/index.html","hash":"c24b5d13740ec23641a0e4f3b70a21ba8514f85a","modified":1679558070158},{"_id":"public/2023/02/28/psotgresvsmysql/index.html","hash":"4009ba7cc48dd98e13641db96ec3f9f9a457d842","modified":1679558070158},{"_id":"public/2023/02/28/tips/index.html","hash":"b38c07f177b0bf152c809a43026757fafd599eaa","modified":1679558070158},{"_id":"public/2023/02/25/spinlock/index.html","hash":"62731f2bd3d7591d4c42c9f4a4a34e01a120b349","modified":1679558070158},{"_id":"public/2023/02/24/cachecompare/index.html","hash":"2ed3844593606776198cf36ac1f29dbd134777e9","modified":1679558070158},{"_id":"public/2023/02/24/studywhat/index.html","hash":"8d7563665c57e6e18e442a911e297ed4fa064cd4","modified":1679558070158},{"_id":"public/2023/02/23/3/index.html","hash":"c1fd8bbd69897ef0d6e1c8e450276f8bf0129ce1","modified":1679558070158},{"_id":"public/2023/02/22/whynotstaet/index.html","hash":"7d0af3a9c5d83b5b8fe9afcccd14b4e37c4ca3be","modified":1679558070158},{"_id":"public/2023/02/21/testdatas/index.html","hash":"56399c64f0e14cd1e069cef570568f3d447f8398","modified":1679558070158},{"_id":"public/2023/02/20/cache/index.html","hash":"db75470107ddded7061fa0e137d75b6749008b83","modified":1679558070158},{"_id":"public/2023/02/20/liquidate/index.html","hash":"60fa600ba040088bebc2987080c43ba4931be76f","modified":1679558070158},{"_id":"public/2023/02/18/studyformdiffrence/index.html","hash":"9f7a0619171767ed7c12a1e169c131583085980d","modified":1679558070158},{"_id":"public/2023/02/17/anxiety/index.html","hash":"094b4a226f28927f50b4806a776f035c458c01c6","modified":1679558070158},{"_id":"public/2023/02/17/restart/index.html","hash":"539951b94a765807243b39af81294099101f6a17","modified":1679558070158},{"_id":"public/2023/02/16/target/index.html","hash":"173e82a31f8556a6477e6e6f6e8052e5543fb1ed","modified":1679558070158},{"_id":"public/2023/02/16/0216-restart/index.html","hash":"f87d91a4e6a075334dd2bcc4c99abacf33b047d2","modified":1679558070158},{"_id":"public/2023/02/15/java-中的锁解决什么问题/index.html","hash":"86a5c02d548c942292c63fd384a0d9fb3fade457","modified":1679558070158},{"_id":"public/2023/02/15/java怎找工作/index.html","hash":"358284febfbc555b47eec4b6a30f669542a09440","modified":1679558070158},{"_id":"public/2023/01/07/springboot-docker/index.html","hash":"b6a3932e1d4daa0658052abe4305bed8693bd0fd","modified":1679558070158},{"_id":"public/2023/01/06/springmvcvswebflux/index.html","hash":"890f577d386e14902a678383436e63fbee4fe591","modified":1679558070158},{"_id":"public/2023/01/06/xxb/index.html","hash":"ad7e677d5e8218270d8ec736ac10a860e071a7fc","modified":1679558070158},{"_id":"public/2023/01/06/hexo-generator-search/index.html","hash":"8d51f86d57d5a01355f8887785267a631c601b46","modified":1679558070158},{"_id":"public/2023/01/05/springboot-docker-demo/index.html","hash":"6cf9286df7d82b14a59ad4d48cddc7ea45112126","modified":1679558070158},{"_id":"public/2022/11/04/one-day/index.html","hash":"e56ceda2b54bd0a849da3c8e58f3aed3770fe106","modified":1679558070158},{"_id":"public/2021/05/18/money/index.html","hash":"e7c9ad4bc5be9b3f3392168ec885b7821ff490a4","modified":1679558070158},{"_id":"public/2021/02/18/hello-springboot/index.html","hash":"4288fafdaf3dc00926d79967cf2b1ce698e80419","modified":1679558070158},{"_id":"public/2020/12/18/redisabout/index.html","hash":"56aa3b78f162ced193af0c23713b2c1dd964f503","modified":1679558070158},{"_id":"public/2020/12/05/分布式事务/index.html","hash":"715c68477c688260b1ee8f5bcfc444af1fa230fc","modified":1679558070158},{"_id":"public/2020/12/05/搬运内容挣钱怎么了/index.html","hash":"fe7b98c5955bfbd02ba1f86416c389d9e40df7d4","modified":1679558070158},{"_id":"public/2020/11/27/jc/index.html","hash":"0f21fccd26d66dd178f4658b225b31967bcd738b","modified":1679558070158},{"_id":"public/2020/11/26/gdcm/index.html","hash":"b08318c1b699ea5bf9bba11482fcdc57a73c63d5","modified":1679558070158},{"_id":"public/2020/11/26/hello-world/index.html","hash":"eeae21129500c7ba4fcd898c376679bc00c4489e","modified":1679558070158},{"_id":"public/2020/11/25/1-1/index.html","hash":"7b9e6c27abf4e32307aa45520958af6c0b23e41e","modified":1679558070158},{"_id":"public/2020/11/25/2/index.html","hash":"3be154ff107e953220779169811f2c3242e592e4","modified":1679558070158},{"_id":"public/2020/11/25/towthings/index.html","hash":"fe339cd17e41d295aa64d7b36ebf402a50e43234","modified":1679558070158},{"_id":"public/2020/11/25/1/index.html","hash":"7758906ed726f0072d05d15aa6cfabff25e1072e","modified":1679558070158},{"_id":"public/2020/11/25/dm_task_set_cookie/index.html","hash":"b7a6b5cb38a249434945f75673de299186f7287d","modified":1679558070158},{"_id":"public/archives/index.html","hash":"ac9b663d3f15155f4d484df5fd5ba8e9ed1ff7c1","modified":1679558070158},{"_id":"public/archives/page/2/index.html","hash":"f0c389e59ff5a43d4d700af39789ed7291da7053","modified":1679558070158},{"_id":"public/archives/page/3/index.html","hash":"6a7d3dd6f728d021b1b9f439007996fd6c5a8ca5","modified":1679558070158},{"_id":"public/archives/page/4/index.html","hash":"8e3b9ce956f07cd0493176f7d97653658d7c789d","modified":1679558070158},{"_id":"public/archives/page/5/index.html","hash":"c76e2e73aa90177871cbed7497ad50ba76c3a10e","modified":1679558070158},{"_id":"public/archives/2020/index.html","hash":"1e02419126740712beb45dd80ba1be45d2b7543e","modified":1679558070158},{"_id":"public/archives/2020/page/2/index.html","hash":"0934b1c165a6155d8f5f4528fac91e53e55d633a","modified":1679558070158},{"_id":"public/archives/2020/11/index.html","hash":"36bec9001b2c95a1fa924429ed29b6f82d17721a","modified":1679558070158},{"_id":"public/archives/2020/12/index.html","hash":"2ae35661cb628e2d672da828a4694e6b28bdf346","modified":1679558070158},{"_id":"public/archives/2021/index.html","hash":"862c4e69b1e662e55188c881cd49a894a2de0ac7","modified":1679558070158},{"_id":"public/archives/2021/02/index.html","hash":"6c3cf18c1b3be2455407ca62d881041eba72ca9b","modified":1679558070158},{"_id":"public/archives/2021/05/index.html","hash":"56de56ea0dbb61db734366229b1c7b04b542a718","modified":1679558070158},{"_id":"public/archives/2022/index.html","hash":"5dd62bcd27316558472fa18921904004c3b442b6","modified":1679558070158},{"_id":"public/archives/2022/11/index.html","hash":"a75e271f307306921d1a7482e064bb8cd853a30b","modified":1679558070158},{"_id":"public/archives/2023/index.html","hash":"12ab15e0883451ac528ace52f60a6a1c60109274","modified":1679558070158},{"_id":"public/archives/2023/page/2/index.html","hash":"7436329261fc8754a1d6a0877373fab0f470a0cd","modified":1679558070158},{"_id":"public/archives/2023/page/3/index.html","hash":"a3b26bc98215cfdfdd08ea8bcfddc050989bb240","modified":1679558070158},{"_id":"public/archives/2023/01/index.html","hash":"d9abd84d7c52f88c2176ece08bb2e82bd3b5d2de","modified":1679558070158},{"_id":"public/archives/2023/02/index.html","hash":"d4255ea215ab94e4d5e9b6c84d9425d9aa87111c","modified":1679558070158},{"_id":"public/archives/2023/02/page/2/index.html","hash":"1be09fbf9b558bb3d330a2248418358953705161","modified":1679558070158},{"_id":"public/archives/2023/03/index.html","hash":"d7dd3e9988e90c4301c384e690fe65a307b0c909","modified":1679558070158},{"_id":"public/categories/技术/index.html","hash":"e4678f38dc0330c4741700ddac4dd2cd1c5b7f62","modified":1679558070158},{"_id":"public/categories/技术/page/2/index.html","hash":"8c54325947bcf33b5ecb84730d726a208e3af796","modified":1679558070158},{"_id":"public/categories/study/index.html","hash":"37102d654642efa1f8e0b6f7fa97dbb5685efaab","modified":1679558070158},{"_id":"public/categories/work/index.html","hash":"02e846f10a85c97e9bce4444bfcd59bf2b849805","modified":1679558070158},{"_id":"public/categories/idea/index.html","hash":"629722b0fa819826d2c0526216d5d07ed19d54b8","modified":1679558070158},{"_id":"public/categories/学习/index.html","hash":"1ebeae13052042d1274e5478860473a60f4ef47c","modified":1679558070158},{"_id":"public/categories/工具/index.html","hash":"97017a14217b35a873377c5bd750ceb09d96780b","modified":1679558070158},{"_id":"public/categories/tips/index.html","hash":"b09dd8348a85dd239a9e71af8185417ea04fa9aa","modified":1679558070158},{"_id":"public/page/2/index.html","hash":"e34cc4ca1b3d8941caa98ffdb27da1591d6929f6","modified":1679558070158},{"_id":"public/page/3/index.html","hash":"6221d31e11130355b6ac8b4ed0663038cdaf9154","modified":1679558070158},{"_id":"public/page/4/index.html","hash":"fde1d26950536b75abd49a52f8bceb3f66cb5bd9","modified":1679558070158},{"_id":"public/page/5/index.html","hash":"8cfbe296ea1a5b3b7921c63179a464e7e1dae87d","modified":1679558070158},{"_id":"public/tags/100/index.html","hash":"0a04d180623dd94c93b330b73836fccd53b346a1","modified":1679558070158},{"_id":"public/tags/diary/index.html","hash":"6286fdde33ffbc04f9822be6c6fadaede04d42fc","modified":1679558070158},{"_id":"public/tags/吐槽/index.html","hash":"9250ce09d0a8cb4a8b8908e198541a724e4694b1","modified":1679558070158},{"_id":"public/tags/docker/index.html","hash":"ab438053770f0b1883d219d6f42ba91f654398d6","modified":1679558070158},{"_id":"public/tags/bug/index.html","hash":"983f68fa345e313af2ff1db4f6344c84afceea92","modified":1679558070158},{"_id":"public/tags/Grow-up/index.html","hash":"fe64a6ddf3f9d50ab9ffc6dbc896bcc8b810c453","modified":1679558070158},{"_id":"public/tags/life/index.html","hash":"4b0002428663e625bac80ee8e9955002d6298c96","modified":1679558070158},{"_id":"public/tags/锁/index.html","hash":"42cb02e499930e0a99409a1698cceae84f186562","modified":1679558070158},{"_id":"public/tags/多线程/index.html","hash":"86c9cdd916f519bbaa16aeba99f9b09cc88b00c4","modified":1679558070158},{"_id":"public/tags/焦虑/index.html","hash":"a310504bede5563fd170f6358385874b45cb07fe","modified":1679558070158},{"_id":"public/tags/cache/index.html","hash":"5033df0863f26e6df3cff78cdf8b7005847151f4","modified":1679558070158},{"_id":"public/tags/缓存/index.html","hash":"9e184ceb0e89eac8ad135b4450e1306d5be4f9d4","modified":1679558070158},{"_id":"public/tags/关灯吃面/index.html","hash":"bd3af377c534b8b0d93704b3a8141043fec95e09","modified":1679558070158},{"_id":"public/tags/理财/index.html","hash":"71883199c9d519bf95499b28463eab79e0c15f3a","modified":1679558070158},{"_id":"public/tags/springboot/index.html","hash":"279b56654174fc0e56eddaa2db4e7b36aa9c1582","modified":1679558070158},{"_id":"public/tags/hexo/index.html","hash":"01de10cac61623385c5e5fa02bbab311f5d05cc4","modified":1679558070158},{"_id":"public/tags/性能测试/index.html","hash":"8bbdd30af44cb7876c2b349a8e507b7a78ac7863","modified":1679558070158},{"_id":"public/tags/idea/index.html","hash":"cadd7cf235def5909dffb4d493dff2bbe59c8c00","modified":1679558070158},{"_id":"public/tags/数据库/index.html","hash":"99f8714cd6ed5f0ad1fbc290b72948eb0c4a7f94","modified":1679558070158},{"_id":"public/tags/索引/index.html","hash":"60b544865310c2d81bdeb1e99066116edfdb4505","modified":1679558070158},{"_id":"public/tags/java-锁/index.html","hash":"232cbed0012c426967030129d55139b0ba902963","modified":1679558070158},{"_id":"public/tags/java/index.html","hash":"1fca5990c925a1dff128d46f5636f55eaa18c5e2","modified":1679558070158},{"_id":"public/tags/juc/index.html","hash":"a83ed8c7d15c77dd054a4e0ea961cf4a5b63ac18","modified":1679558070158},{"_id":"public/tags/知识变现/index.html","hash":"0c2c5c16d9bb665733b82bde70de23abb5c11ce4","modified":1679558070158},{"_id":"public/tags/挣钱/index.html","hash":"03dd83c55c1c59381561168e22b6ffa96e1e75fa","modified":1679558070158},{"_id":"public/tags/内容/index.html","hash":"5d7ae051f9b80d78d72d87a903a22de9a965200a","modified":1679558070158},{"_id":"public/tags/redis，缓存/index.html","hash":"1e85eed7871ca9a651547f2fab9e62dbee426030","modified":1679558070158},{"_id":"public/tags/并发编程/index.html","hash":"f13aeddc17143f87b686ced048141402fdebcdf4","modified":1679558070158},{"_id":"public/tags/openapi/index.html","hash":"fd59b9a2463828a1f9c2abe66290646f3c240c01","modified":1679558070158},{"_id":"public/tags/swagger3/index.html","hash":"a6b816e884bf85253476b1e04a59bcf7af0e699b","modified":1679558070158},{"_id":"public/tags/springmvc/index.html","hash":"8f2ceab84e6d05d8782f80ee11b9e5b9a30afb85","modified":1679558070158},{"_id":"public/tags/weblux/index.html","hash":"00f04a6d122b7c0fda38a35c73038cb1fa4d3e72","modified":1679558070158},{"_id":"public/tags/study/index.html","hash":"421f298ec113cfb23e9f76e264d1f5b270e9aee1","modified":1679558070158},{"_id":"public/tags/学习/index.html","hash":"93be8a3ec85d891a8dcce9713997e0f267033315","modified":1679558070158},{"_id":"public/tags/测试/index.html","hash":"6061ac51951bec6e8d5f3bc6ad54ce76f494f4f8","modified":1679558070158},{"_id":"public/tags/tips/index.html","hash":"c75966e4be6c0377c3e7ac5b9170665403780a85","modified":1679558070158},{"_id":"public/tags/mysql/index.html","hash":"74ed394e81ae976ec05cb5bad27d9e0ce2c5f12b","modified":1679558070158},{"_id":"public/tags/疫情-xbb-人间清醒/index.html","hash":"6c8bbf8b288c8a265a7e4b24906edecfddf57d3e","modified":1679558070158},{"_id":"public/CNAME","hash":"ef0d04455637caf573260057930f1f69f59d625f","modified":1679558070158},{"_id":"public/asset/daniel.jpeg","hash":"84140d99a0adf4f49fbb7f5b01cd7d49478294ed","modified":1679558070158},{"_id":"public/fonts/BreeSerif-Regular.otf","hash":"f982b73492d5d6c82aa684f6bce894c63f6b2c79","modified":1679558070158},{"_id":"public/fonts/BreeSerif-Regular.ttf","hash":"9e42f8b3aa1e670934ecaab1a4060a00f17fa2ed","modified":1679558070158},{"_id":"public/fonts/BreeSerif-Regular.woff2","hash":"9407e77734344a53e33ef703dc40024d941f6280","modified":1679558070158},{"_id":"public/fonts/opensans-regular-webfont.eot","hash":"606c985eaaef071488c12e5ea0a985d5b545eae7","modified":1679558070158},{"_id":"public/fonts/opensans-regular-webfont.svg","hash":"dce2b68dd6b6c28b773994e35e4fc3e0e539ffdf","modified":1679558070158},{"_id":"public/fonts/opensans-regular-webfont.ttf","hash":"6d72a9e751414873228dd1c43ec7b16da1c2a285","modified":1679558070158},{"_id":"public/fonts/opensans-regular-webfont.woff","hash":"d6f86451bee7c843a0c23e61995e25927abb176a","modified":1679558070158},{"_id":"public/styles/crisp.css","hash":"5dfff8b3964c633c65f7ba60d2246a3aeab57183","modified":1679558070158},{"_id":"public/js/ga.js","hash":"a96d26c095fac491b4d48a32d60e4ee46a208a19","modified":1679558070158},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1679558038094},{"_id":"themes/next/.eslintrc.json","hash":"9c0762486f24a8c5e60f8b6c875e4c4728942649","modified":1679558038095},{"_id":"themes/next/.gitattributes","hash":"ec43734985e1cafd53d88ded3020103f7416123c","modified":1679558038095},{"_id":"themes/next/.gitignore","hash":"417520c4dbbeab9c7e3ab10d944da0886366a0ee","modified":1679558038101},{"_id":"themes/next/.stylelintrc","hash":"dedb8dd4d454cb1bb6aba594ef2cbd05ec2427d8","modified":1679558038101},{"_id":"themes/next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1679558038102},{"_id":"themes/next/README.md","hash":"36c4b25587ca494102323dab5a38de5490451a64","modified":1679558038102},{"_id":"themes/next/_config.yml","hash":"3205799fc6f50b2093e02bae9b70aa96ba0d2901","modified":1679558038103},{"_id":"themes/next/_vendors.yml","hash":"463e3097d6e245105f6612994215ab5c637cae28","modified":1679558038104},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1679558038104},{"_id":"themes/next/package.json","hash":"a192fe2e0904b490c885e8545a409536b41ef46e","modified":1679558038151},{"_id":"themes/next/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1679558038151},{"_id":"themes/next/.githooks/install.js","hash":"0977cb57c8b91ea166b5bbc481e4ddeaf77e9b18","modified":1679558038095},{"_id":"themes/next/.githooks/pre-commit","hash":"f473eac1aaaa96c947d67988bbed140bbab1a821","modified":1679558038095},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"21cbff565a0445d3a880fff1ee417e309740a9ab","modified":1679558038096},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"330656d93b6c03df9fb1f2f0e3534c971969473b","modified":1679558038097},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"fa76760856429b6421abc54e63b2d3c815372900","modified":1679558038098},{"_id":"themes/next/.github/config.yml","hash":"7984e665e9de481a0e0e51fca5668337713f810b","modified":1679558038098},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1679558038098},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"1097fc47beeacfc1edb0248c27b17bf64bde3565","modified":1679558038098},{"_id":"themes/next/.github/labeler.yml","hash":"5c4bc2bd561e6d9b33ee118cc12218c5de46f72d","modified":1679558038099},{"_id":"themes/next/.github/release.yml","hash":"112310b81f959747f8eaafc2ca2150e1dcf916d8","modified":1679558038099},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1679558038104},{"_id":"themes/next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1679558038105},{"_id":"themes/next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1679558038106},{"_id":"themes/next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1679558038108},{"_id":"themes/next/languages/ar.yml","hash":"46026e98fe279a9db5d68bf91afa5d8e41f9ccfb","modified":1679558038108},{"_id":"themes/next/languages/bn.yml","hash":"74133a827c104d1d84509177f283947fe9327a80","modified":1679558038109},{"_id":"themes/next/languages/de.yml","hash":"c4fc18c338309271d1afe737e6c404a6fa313bbc","modified":1679558038109},{"_id":"themes/next/languages/default.yml","hash":"4bbdb4284afe495437cf7817b97b45f60e12d1e4","modified":1679558038110},{"_id":"themes/next/languages/en.yml","hash":"4bbdb4284afe495437cf7817b97b45f60e12d1e4","modified":1679558038110},{"_id":"themes/next/languages/es.yml","hash":"8b6d4a8a056df4362d20ae1f6ac7a590dd7246e5","modified":1679558038110},{"_id":"themes/next/languages/fa.yml","hash":"1e256c8df039ddeba66526c5eb2d6c79177a7fc6","modified":1679558038111},{"_id":"themes/next/languages/fr.yml","hash":"2436942610e38b73b175cb0f8ed1f8f23d42a7ce","modified":1679558038111},{"_id":"themes/next/languages/id.yml","hash":"c4bad93b23c7eefa730fd7fec5b05ace3ce9ca4d","modified":1679558038111},{"_id":"themes/next/languages/it.yml","hash":"4d6efcdaea89dfe751b7707d91858bf33d3538b7","modified":1679558038112},{"_id":"themes/next/languages/ja.yml","hash":"a0906702d3c87d0e1661e300ad0bdf7e679a3d91","modified":1679558038113},{"_id":"themes/next/languages/ko.yml","hash":"25ee0d5b9a0464a91af7d2efb33293c09ad5abdf","modified":1679558038114},{"_id":"themes/next/languages/nl.yml","hash":"8a4da307b4a19e3c96b90a07a2da8dc5d50e5d9e","modified":1679558038114},{"_id":"themes/next/languages/pt-BR.yml","hash":"10d80915c41328f31a4f2d8ac736bba020f373d8","modified":1679558038115},{"_id":"themes/next/languages/pt.yml","hash":"fa7c43ec872aee2739b25dd7260e0764ea9e26fd","modified":1679558038115},{"_id":"themes/next/languages/ru.yml","hash":"16b96783ba363255b4c8156c3e1efebdb37676f8","modified":1679558038116},{"_id":"themes/next/languages/si.yml","hash":"034c5a0df49144e8f16ae2300dba9fde58b9329e","modified":1679558038116},{"_id":"themes/next/languages/th.yml","hash":"4fac74a39d3906c4a727476be4750530a505933a","modified":1679558038117},{"_id":"themes/next/languages/tk.yml","hash":"37d9af426b040004841273d163059cd49cd67d65","modified":1679558038117},{"_id":"themes/next/languages/tr.yml","hash":"890f87f6a33ad8452b771607d4c3ff14810b35fa","modified":1679558038117},{"_id":"themes/next/languages/uk.yml","hash":"fbaed3039ed8605b81422003a4ecb2a6514e339d","modified":1679558038118},{"_id":"themes/next/languages/vi.yml","hash":"a6ba04c743a5b494ac56612ce6b858d9ae3ae1bd","modified":1679558038118},{"_id":"themes/next/languages/zh-CN.yml","hash":"5cebea74f3198a4a20cacf23069c3b91e4f03d85","modified":1679558038118},{"_id":"themes/next/languages/zh-HK.yml","hash":"8ab7219563dab13885840207a86055000d173465","modified":1679558038119},{"_id":"themes/next/languages/zh-TW.yml","hash":"9fdce9d316e205fc132b2181254ef3b04007a97d","modified":1679558038119},{"_id":"themes/next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1679558038119},{"_id":"themes/next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1679558038149},{"_id":"themes/next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1679558038149},{"_id":"themes/next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1679558038150},{"_id":"themes/next/layout/page.njk","hash":"b0660b2af0ac7d3fda14ca4d9f2c9e79ef06c6f9","modified":1679558038150},{"_id":"themes/next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1679558038150},{"_id":"themes/next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1679558038150},{"_id":"themes/next/test/index.js","hash":"6bf0289846538be3e9a63809af98f00e1fbdd90b","modified":1679558038212},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"3f19cbf0c2b2fee6bf3788870b842c9ccc1425ca","modified":1679558038097},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"c40ae7903b6cc99f94c9d45ac7ba8c2850bb1309","modified":1679558038097},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"fbc3062cd4591c8329fab9db72803746f0d11920","modified":1679558038097},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.yml","hash":"10eca518b91a19984f6a5a912d41222042f61d63","modified":1679558038098},{"_id":"themes/next/.github/workflows/codeql.yml","hash":"8da13d7c325addb6b7c1d9ac3683dafd43e3709a","modified":1679558038099},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"434cc0674290958b1e9bbc46c3486f073c0722db","modified":1679558038100},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"e9d51e93f239a2d4b69722c69db3463b4baf0f4c","modified":1679558038100},{"_id":"themes/next/.github/workflows/linter.yml","hash":"2ab8720e4b9534e48ba324b73b0b58cb54df689f","modified":1679558038100},{"_id":"themes/next/.github/workflows/lock.yml","hash":"f1bf7f86c11419b63323bd21e388e6bdaf24d27d","modified":1679558038100},{"_id":"themes/next/.github/workflows/pr-reminder.yml","hash":"3ab3e8d9dc0e1d9bd54f44fba476792fb1ee190d","modified":1679558038101},{"_id":"themes/next/.github/workflows/tester.yml","hash":"80a20c3a7522249f051a48239db41d1317e9b552","modified":1679558038101},{"_id":"themes/next/docs/ru/README.md","hash":"ac3c4a7616ea80f0d32d68d6e53233952ba756dc","modified":1679558038106},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1679558038106},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1679558038107},{"_id":"themes/next/docs/zh-CN/README.md","hash":"9bbdbb0656505acceef9b9895a576164175fe888","modified":1679558038108},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1679558038120},{"_id":"themes/next/layout/_macro/post.njk","hash":"7e8268fd5cbd552322b276f52459fd187c2453d2","modified":1679558038120},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1679558038120},{"_id":"themes/next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1679558038121},{"_id":"themes/next/layout/_partials/footer.njk","hash":"c40760b559c516677c8b11a00ba50c011f2079fd","modified":1679558038121},{"_id":"themes/next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1679558038124},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1679558038129},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"e7f988ecddb2159313699a00827a45eca5622bd4","modified":1679558038136},{"_id":"themes/next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1679558038136},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1679558038136},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1679558038144},{"_id":"themes/next/layout/_third-party/index.njk","hash":"aa37f8e98208177b63e3328d6e53b022c6edf3b2","modified":1679558038144},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1679558038145},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1679558038146},{"_id":"themes/next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1679558038152},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1679558038158},{"_id":"themes/next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1679558038160},{"_id":"themes/next/scripts/filters/minify.js","hash":"ce8477e7fb226525bae5872cd68a1c2c23ad50c8","modified":1679558038160},{"_id":"themes/next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1679558038160},{"_id":"themes/next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1679558038161},{"_id":"themes/next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1679558038161},{"_id":"themes/next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1679558038161},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1679558038161},{"_id":"themes/next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1679558038162},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"fd24abfaba4d91923ddb6aecf0268b216678c8bd","modified":1679558038162},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1679558038162},{"_id":"themes/next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1679558038162},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1679558038163},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1679558038163},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1679558038163},{"_id":"themes/next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1679558038163},{"_id":"themes/next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1679558038164},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1679558038164},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1679558038164},{"_id":"themes/next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1679558038164},{"_id":"themes/next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1679558038165},{"_id":"themes/next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1679558038165},{"_id":"themes/next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1679558038165},{"_id":"themes/next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1679558038166},{"_id":"themes/next/source/css/_mixins.styl","hash":"83647a6207333b9609ba90b0946b3fa9548e6381","modified":1679558038190},{"_id":"themes/next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1679558038199},{"_id":"themes/next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1679558038200},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1679558038200},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1679558038200},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1679558038200},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1679558038201},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1679558038202},{"_id":"themes/next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1679558038202},{"_id":"themes/next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1679558038202},{"_id":"themes/next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1679558038203},{"_id":"themes/next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1679558038203},{"_id":"themes/next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1679558038204},{"_id":"themes/next/source/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1679558038204},{"_id":"themes/next/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1679558038204},{"_id":"themes/next/source/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1679558038204},{"_id":"themes/next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1679558038205},{"_id":"themes/next/source/js/utils.js","hash":"5e1cf39de050964e97fb3ba0825aeec7f4bc36dd","modified":1679558038211},{"_id":"themes/next/test/helpers/font.js","hash":"342ef3c6fd2dcca2a8802a516ed6d7f389fd2ca2","modified":1679558038212},{"_id":"themes/next/test/helpers/index.js","hash":"63ba28afed697f7b3574436b1133b8ecc9c0c357","modified":1679558038212},{"_id":"themes/next/test/helpers/next-url.js","hash":"a91d880cb75e0a8e65a7be4c7362b2c8ebfb7c4f","modified":1679558038212},{"_id":"themes/next/test/tags/button.js","hash":"48f2aa4c513e9e24bd6a811410520b74cd7ea88b","modified":1679558038212},{"_id":"themes/next/test/tags/caniuse.js","hash":"aa5e728445caeaf7c2ccd0f3fcb2cad0c93ca6d1","modified":1679558038213},{"_id":"themes/next/test/tags/center-quote.js","hash":"7667342fd1a1417eaf6a254012b84ae40e8d13dd","modified":1679558038213},{"_id":"themes/next/test/tags/group-pictures.js","hash":"5c68ae0184f9da6e00ba199f2554d503d8e6da71","modified":1679558038213},{"_id":"themes/next/test/tags/index.js","hash":"e8779e54f0979b221858f8bb74dd081bb503b910","modified":1679558038213},{"_id":"themes/next/test/tags/label.js","hash":"4ebf3698c258ca978b997acbdd0dece44069c09d","modified":1679558038213},{"_id":"themes/next/test/tags/link-grid.js","hash":"43d298fafb7c45a874b766d443843bd26346e689","modified":1679558038213},{"_id":"themes/next/test/tags/mermaid.js","hash":"ab77be5f3c6d9a57c7b9dda6decf1906a736fef9","modified":1679558038214},{"_id":"themes/next/test/tags/note.js","hash":"3dcfcd65bf9f326972ea7571fdb1444200f5d07e","modified":1679558038214},{"_id":"themes/next/test/tags/pdf.js","hash":"fd6ea5123560a90f7e7c1eface23dbe1455db25f","modified":1679558038214},{"_id":"themes/next/test/tags/tabs.js","hash":"d63722919f9da2e44d6b952801e10a2915ea9c12","modified":1679558038214},{"_id":"themes/next/test/tags/video.js","hash":"b796fc4dceb20a30e730c322bb5474c0162464cc","modified":1679558038214},{"_id":"themes/next/test/validate/index.js","hash":"5a95ccc8598667535bd022e988055c0e019f3670","modified":1679558038214},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1679558038122},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1679558038122},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1679558038123},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1679558038123},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1679558038123},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1679558038124},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1679558038124},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1679558038125},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1679558038126},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1679558038126},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1679558038127},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1679558038128},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1679558038130},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1679558038131},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1679558038132},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1679558038132},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1679558038132},{"_id":"themes/next/layout/_partials/post/post-share.njk","hash":"3f28cc4411c0ffc0e41b7970d5ab329c7e46f497","modified":1679558038133},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1679558038134},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1679558038134},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1679558038135},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"70342218473a6e6aa9148de06bfffe121afb8548","modified":1679558038135},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1679558038137},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1679558038137},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1679558038137},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1679558038138},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1679558038138},{"_id":"themes/next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1679558038139},{"_id":"themes/next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1679558038139},{"_id":"themes/next/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1679558038140},{"_id":"themes/next/layout/_third-party/analytics/umami.njk","hash":"181f69b6718c7a8642a88652260cc0a26084a3ee","modified":1679558038140},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1679558038140},{"_id":"themes/next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1679558038141},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1679558038141},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1679558038141},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1679558038142},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1679558038142},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1679558038142},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1679558038143},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1679558038143},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1679558038143},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1679558038144},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1679558038145},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1679558038145},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1679558038147},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1679558038147},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1679558038147},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1679558038148},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1679558038148},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1679558038148},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1679558038148},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1679558038149},{"_id":"themes/next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1679558038152},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1679558038152},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1679558038153},{"_id":"themes/next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1679558038153},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"ec996d0673f766167c86df0966e9da1ae036e103","modified":1679558038153},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1679558038154},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1679558038154},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1679558038154},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1679558038155},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1679558038155},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1679558038155},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1679558038155},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1679558038156},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1679558038156},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1679558038157},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1679558038197},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a1418c9dc8c0f1a0ad4ded0f4627c45bf0db1a10","modified":1679558038198},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1679558038198},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"48f4f277946a168d0db1ea02804e85c22ca2c7db","modified":1679558038199},{"_id":"themes/next/source/css/_variables/base.styl","hash":"c4fc4e862d09221265ab1466085f057be2ad2e4d","modified":1679558038199},{"_id":"themes/next/source/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1679558038205},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1679558038208},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1679558038210},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1679558038210},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1679558038167},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1679558038167},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1679558038175},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1679558038180},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1679558038180},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1679558038183},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1679558038185},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1679558038185},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1679558038186},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1679558038187},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1679558038187},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1679558038187},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"782ee1fc5e669d3ddbfeb82b73ad7fe561f1a4fb","modified":1679558038190},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1679558038191},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"77b85d4de5ab747e04008ab31200311b29748740","modified":1679558038191},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1679558038192},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1679558038192},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1679558038193},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1679558038193},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"d856127cd7e0a28a88edf0b2eb860ede9c3fdb60","modified":1679558038193},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"7fecfb76420f786d6bf60218a81705bb48fb1d18","modified":1679558038193},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1679558038194},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"547c0b5cd5e7ea10d21863d13a6b16579a49396c","modified":1679558038194},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1679558038194},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1679558038195},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"ac2dc0ce9c775a83ef7132ae957b54539366ac9c","modified":1679558038195},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"4266eed6f75625bb30ef0280dc5d4093e7c3beb1","modified":1679558038195},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1679558038196},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"91dbf3ca5c3a613d4e30618c120da535bf2d0336","modified":1679558038196},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1679558038196},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1679558038196},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1679558038205},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1679558038206},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1679558038206},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1679558038206},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1679558038206},{"_id":"themes/next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1679558038206},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1679558038206},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1679558038207},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1679558038207},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1679558038207},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1679558038207},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1679558038207},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1679558038208},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1679558038208},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1679558038209},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1679558038209},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1679558038210},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1679558038210},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1679558038211},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1679558038211},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1679558038211},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1679558038211},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1679558038168},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1679558038168},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1679558038169},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1679558038169},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1679558038169},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1679558038170},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1679558038170},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1679558038170},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1679558038171},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1679558038171},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1679558038172},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1679558038173},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1679558038173},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1679558038174},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"40c9839d3288c3b7de0bf38ac2e18f6c8eba6227","modified":1679558038175},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1679558038176},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1679558038176},{"_id":"themes/next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1679558038176},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"77550e0d3e029b7458e35d8c5ae1fbd612c9673b","modified":1679558038177},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1679558038177},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1679558038177},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1679558038177},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1679558038178},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1679558038178},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1679558038179},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1679558038179},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"b750af2fb833c10c4313b5a4258237161a7833d7","modified":1679558038179},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1679558038179},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1679558038180},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"da5e88f8debd5ac8d7af5c6ba6240df66104955f","modified":1679558038181},{"_id":"themes/next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1679558038181},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1679558038181},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1679558038181},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1679558038182},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1679558038182},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1679558038182},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1679558038182},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"9a7c71560fbdc936ad4e736fe15063ea3e8a644b","modified":1679558038182},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1679558038183},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1679558038186},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"9056be572ec1cfa429abb22be4b45a662d5b0fb1","modified":1679558038186},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1679558038188},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1679558038188},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1679558038188},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1679558038189},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1679558038189},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1679558038189},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1679558038189},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1679558038190},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1679558038190}],"Category":[{"name":"技术","_id":"clfktie1q000kr7jd2l0zg92e"},{"name":"study","_id":"clfktie1v000qr7jddiqm6qlt"},{"name":"工作","_id":"clfktie220014r7jd8eth3lxq"},{"name":"idea","_id":"clfktie27001br7jdhwfh4n0j"},{"name":"学习","_id":"clfktie2i001wr7jdgci5e0yh"},{"name":"工具","_id":"clfktie35002wr7jdbcvxhplc"},{"name":"tips","_id":"clfktie390035r7jd5b2c24g9"}],"Data":[],"Page":[{"_content":"","source":"index.html","raw":"","date":"2023-03-23T07:48:47.468Z","updated":"2023-03-23T07:48:47.468Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"clfktie0l0000r7jdbmdq8wbx","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"about","date":"2020-11-25T14:33:23.000Z","_content":"","source":"about/index-1.md","raw":"---\ntitle: about\ndate: 2020-11-25 22:33:23\n---\n","updated":"2023-02-15T08:43:51.933Z","path":"about/index-1.html","comments":1,"layout":"page","_id":"clfktie110001r7jd8d363e4k","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"about","date":"2020-11-25T09:24:17.000Z","_content":"\nHello.\nI am  Daniel Hou,a full stack developer live in China.\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-11-25 17:24:17\n---\n\nHello.\nI am  Daniel Hou,a full stack developer live in China.\n","updated":"2023-03-23T07:48:47.468Z","path":"about/index.html","comments":1,"layout":"page","_id":"clfktie170003r7jdgp9ph6li","content":"<p>Hello.<br>I am  Daniel Hou,a full stack developer live in China.</p>\n","site":{"data":{}},"length":50,"excerpt":"","more":"<p>Hello.<br>I am  Daniel Hou,a full stack developer live in China.</p>\n"},{"title":"'categories'","date":"2020-11-25T13:25:39.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: '''categories'''\ndate: 2020-11-25 21:25:39\ntype: categories\n---\n","updated":"2023-03-23T07:48:47.468Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clfktie1b0006r7jd6hfe3ij4","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tag","date":"2023-02-16T15:00:47.000Z","layout":"tag","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2023-02-16 23:00:47\nlayout: tag\n---\n","updated":"2023-02-16T15:20:50.710Z","path":"tag/index.html","comments":1,"_id":"clfktie1e0008r7jdawxscmq2","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2020-11-25T13:26:46.000Z","type":"tags","layout":"tag","_content":"xxxx ","source":"tags/index.md","raw":"---\ntitle: 'tags'\ndate: 2020-11-25 21:26:46\ntype: tags\nlayout: tag\n---\nxxxx ","updated":"2023-02-16T15:20:50.711Z","path":"tags/index.html","comments":1,"_id":"clfktie1g000ar7jd7w6g6z2c","content":"<p>xxxx </p>\n","site":{"data":{}},"length":4,"excerpt":"","more":"<p>xxxx </p>\n"}],"Post":[{"title":"3","date":"2020-11-26T06:06:07.000Z","_content":"\n","source":"_drafts/3.md","raw":"---\ntitle: 3\ndate: 2020-11-26 14:06:07\ntags: 100\n---\n\n","slug":"3","published":0,"updated":"2023-03-23T07:48:47.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie130002r7jdg10k3yfz","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"4","_content":"","source":"_drafts/4.md","raw":"---\ntitle: 4\ntags:\n---\n","slug":"4","published":0,"date":"2023-02-15T08:43:51.932Z","updated":"2023-02-15T08:43:51.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie170004r7jd2ycc2uub","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"xxx","_content":"","source":"_drafts/xxx.md","raw":"---\ntitle: xxx\ntags:\ncategories:\n---\n","slug":"xxx","published":0,"date":"2023-02-21T09:41:22.246Z","updated":"2023-02-21T09:41:22.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1c0007r7jd46lddhyd","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"0216 restart","date":"2023-02-16T14:53:11.000Z","_content":"# restart\nxxxx","source":"_posts/0216-restart.md","raw":"---\ntitle: 0216 restart\ndate: 2023-02-16 22:53:11\ntags: [diary]\n---\n# restart\nxxxx","slug":"0216-restart","published":1,"updated":"2023-03-23T07:48:47.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1f0009r7jd4tasg7j9","content":"<h1 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h1><p>xxxx</p>\n","site":{"data":{}},"length":11,"excerpt":"","more":"<h1 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h1><p>xxxx</p>\n"},{"title":"996是福报?","date":"2020-11-25T14:51:00.000Z","_content":"> 996是福报？还是送命福？\n\n\n","source":"_posts/1-1.md","raw":"---\ntitle: 996是福报?\ndate: 2020-11-25 22:51:00\ntags: [100,吐槽]\n---\n> 996是福报？还是送命福？\n\n\n","slug":"1-1","published":1,"updated":"2023-03-23T07:48:47.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1h000br7jdbe7117ih","content":"<blockquote>\n<p>996是福报？还是送命福？</p>\n</blockquote>\n","site":{"data":{}},"length":13,"excerpt":"","more":"<blockquote>\n<p>996是福报？还是送命福？</p>\n</blockquote>\n"},{"title":"Can't set cookie dm_task_set_cookie failed 错误处理","date":"2020-11-25T07:13:35.000Z","toc":true,"_content":"\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","source":"_posts/1.md","raw":"---\ntitle: Can't set cookie dm_task_set_cookie failed 错误处理\ndate: 2020-11-25 15:13:35\ntags: [docker,bug]\ntoc: true\n\n---\n\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","slug":"1","published":1,"updated":"2023-03-23T07:48:47.453Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1j000er7jdbpgz6tjy","content":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n","site":{"data":{}},"length":185,"excerpt":"","more":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n"},{"title":"两件小事","date":"2020-11-25T07:16:52.000Z","toc":true,"_content":"本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","source":"_posts/2.md","raw":"---\ntitle: 两件小事\ndate: 2020-11-25 15:16:52\ntags: [Grow up ,生活,100]\ntoc: true\n\n---\n本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","slug":"2","published":1,"updated":"2023-03-23T07:48:47.453Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1l000fr7jddkhv533k","content":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n","site":{"data":{}},"length":306,"excerpt":"","more":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n"},{"title":"一文搞懂 synchronized","date":"2023-02-23T00:55:07.000Z","_content":"\n","source":"_posts/3.md","raw":"---\ntitle: 一文搞懂 synchronized\ndate: 2023-02-23 8:55:07\ntags: [锁,多线程]\ncategories: 技术\n---\n\n","slug":"3","published":1,"updated":"2023-02-24T00:50:58.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1m000gr7jd60pu31zc","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"35岁程序员如何摆脱焦虑?","date":"2023-02-17T07:39:43.000Z","toc":true,"_content":"###  关注自己的发展\n把时间花在提升专业技能和知识上，不断完善自己。\n### 调整好心态\n经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。\n### 扩大自己的社交圈\n多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。\n### 找出自己的兴趣\n可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。\n### 健康生活\n要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。","source":"_posts/anxiety.md","raw":"---\ntitle: 35岁程序员如何摆脱焦虑?\ndate: 2023-02-17 15:39:43\ntags: 焦虑\ncategories: study\ntoc: true\n---\n###  关注自己的发展\n把时间花在提升专业技能和知识上，不断完善自己。\n### 调整好心态\n经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。\n### 扩大自己的社交圈\n多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。\n### 找出自己的兴趣\n可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。\n### 健康生活\n要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。","slug":"anxiety","published":1,"updated":"2023-02-17T07:43:13.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1o000jr7jd1ftm7ud6","content":"<h3 id=\"关注自己的发展\"><a href=\"#关注自己的发展\" class=\"headerlink\" title=\"关注自己的发展\"></a>关注自己的发展</h3><p>把时间花在提升专业技能和知识上，不断完善自己。</p>\n<h3 id=\"调整好心态\"><a href=\"#调整好心态\" class=\"headerlink\" title=\"调整好心态\"></a>调整好心态</h3><p>经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。</p>\n<h3 id=\"扩大自己的社交圈\"><a href=\"#扩大自己的社交圈\" class=\"headerlink\" title=\"扩大自己的社交圈\"></a>扩大自己的社交圈</h3><p>多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。</p>\n<h3 id=\"找出自己的兴趣\"><a href=\"#找出自己的兴趣\" class=\"headerlink\" title=\"找出自己的兴趣\"></a>找出自己的兴趣</h3><p>可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。</p>\n<h3 id=\"健康生活\"><a href=\"#健康生活\" class=\"headerlink\" title=\"健康生活\"></a>健康生活</h3><p>要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。</p>\n","site":{"data":{}},"length":213,"excerpt":"","more":"<h3 id=\"关注自己的发展\"><a href=\"#关注自己的发展\" class=\"headerlink\" title=\"关注自己的发展\"></a>关注自己的发展</h3><p>把时间花在提升专业技能和知识上，不断完善自己。</p>\n<h3 id=\"调整好心态\"><a href=\"#调整好心态\" class=\"headerlink\" title=\"调整好心态\"></a>调整好心态</h3><p>经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。</p>\n<h3 id=\"扩大自己的社交圈\"><a href=\"#扩大自己的社交圈\" class=\"headerlink\" title=\"扩大自己的社交圈\"></a>扩大自己的社交圈</h3><p>多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。</p>\n<h3 id=\"找出自己的兴趣\"><a href=\"#找出自己的兴趣\" class=\"headerlink\" title=\"找出自己的兴趣\"></a>找出自己的兴趣</h3><p>可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。</p>\n<h3 id=\"健康生活\"><a href=\"#健康生活\" class=\"headerlink\" title=\"健康生活\"></a>健康生活</h3><p>要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。</p>\n"},{"title":"缓存的本质和缓存实践","date":"2023-02-20T06:04:35.000Z","toc":true,"_content":"\n## 为什么要用缓存?\n### 缓存的本质\n> 通俗理解计算机缓存,可以比喻成水库.\n\n\n\n### CPU缓存和系统机构缓存\n\n## 缓存编程实现\n### 编程法\n采用各种reis 客户端和 API.比如Jredis api\n\n### Spring 注入\n\nSpring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。\n- 添加依赖\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n\n```\n\n- RedisTemplate源码\n```\n@Autowired\nprivate RedisTemplate<String, Object> redisTemplate;\n\npublic void setValue(String key, Object value) {\n    redisTemplate.opsForValue().set(key, value);\n}\n\npublic Object getValue(String key) {\n    return redisTemplate.opsForValue().get(key);\n}\n\n```\n-注入RedisTemplate\n```\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class RedisService {\n\n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n\n    public void setValue(String key, String value) {\n        redisTemplate.opsForValue().set(key, value);\n    }\n\n    public String getValue(String key) {\n        return redisTemplate.opsForValue().get(key);\n    }\n}\n```\n\n### 注解法\n如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：\n\n1. 添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。\n\n2. 配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。\n\n3. 创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。\n\n4. 使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。\n下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：\n\n\n```\n@Service\npublic class UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Cacheable(value = \"user\", key = \"#id\")\n    public User getUserById(Long id) {\n        return userRepository.findById(id).orElse(null);\n    }\n\n    // 其他业务方法...\n}\n```\n## 访问缓存的模式\n\n### 双读双写\n一般采用这种写法\n![image](https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png)\n## 异步更新\n![image](https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png)\n## 串联模式\n![image](https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png)\n\n<!--  -->\n## 分片模式\n\n### 客户端分片\n\n### 代理分片\n\n### 集群分片\n\n## 迁移方案\n\n### 平滑迁移\n\n### 一致性哈希","source":"_posts/cache.md","raw":"---\ntitle: 缓存的本质和缓存实践\ndate: 2023-02-20 14:04:35\ntags: [cache,缓存]\ncategories: 技术\ntoc: true\n---\n\n## 为什么要用缓存?\n### 缓存的本质\n> 通俗理解计算机缓存,可以比喻成水库.\n\n\n\n### CPU缓存和系统机构缓存\n\n## 缓存编程实现\n### 编程法\n采用各种reis 客户端和 API.比如Jredis api\n\n### Spring 注入\n\nSpring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。\n- 添加依赖\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n\n```\n\n- RedisTemplate源码\n```\n@Autowired\nprivate RedisTemplate<String, Object> redisTemplate;\n\npublic void setValue(String key, Object value) {\n    redisTemplate.opsForValue().set(key, value);\n}\n\npublic Object getValue(String key) {\n    return redisTemplate.opsForValue().get(key);\n}\n\n```\n-注入RedisTemplate\n```\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class RedisService {\n\n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n\n    public void setValue(String key, String value) {\n        redisTemplate.opsForValue().set(key, value);\n    }\n\n    public String getValue(String key) {\n        return redisTemplate.opsForValue().get(key);\n    }\n}\n```\n\n### 注解法\n如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：\n\n1. 添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。\n\n2. 配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。\n\n3. 创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。\n\n4. 使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。\n下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：\n\n\n```\n@Service\npublic class UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Cacheable(value = \"user\", key = \"#id\")\n    public User getUserById(Long id) {\n        return userRepository.findById(id).orElse(null);\n    }\n\n    // 其他业务方法...\n}\n```\n## 访问缓存的模式\n\n### 双读双写\n一般采用这种写法\n![image](https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png)\n## 异步更新\n![image](https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png)\n## 串联模式\n![image](https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png)\n\n<!--  -->\n## 分片模式\n\n### 客户端分片\n\n### 代理分片\n\n### 集群分片\n\n## 迁移方案\n\n### 平滑迁移\n\n### 一致性哈希","slug":"cache","published":1,"updated":"2023-02-25T11:26:06.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1r000lr7jdh7rgfjxm","content":"<h2 id=\"为什么要用缓存\"><a href=\"#为什么要用缓存\" class=\"headerlink\" title=\"为什么要用缓存?\"></a>为什么要用缓存?</h2><h3 id=\"缓存的本质\"><a href=\"#缓存的本质\" class=\"headerlink\" title=\"缓存的本质\"></a>缓存的本质</h3><blockquote>\n<p>通俗理解计算机缓存,可以比喻成水库.</p>\n</blockquote>\n<h3 id=\"CPU缓存和系统机构缓存\"><a href=\"#CPU缓存和系统机构缓存\" class=\"headerlink\" title=\"CPU缓存和系统机构缓存\"></a>CPU缓存和系统机构缓存</h3><h2 id=\"缓存编程实现\"><a href=\"#缓存编程实现\" class=\"headerlink\" title=\"缓存编程实现\"></a>缓存编程实现</h2><h3 id=\"编程法\"><a href=\"#编程法\" class=\"headerlink\" title=\"编程法\"></a>编程法</h3><p>采用各种reis 客户端和 API.比如Jredis api</p>\n<h3 id=\"Spring-注入\"><a href=\"#Spring-注入\" class=\"headerlink\" title=\"Spring 注入\"></a>Spring 注入</h3><p>Spring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。</p>\n<ul>\n<li><p>添加依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RedisTemplate源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Autowired</span><br><span class=\"line\">private RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setValue(String key, Object value) &#123;</span><br><span class=\"line\">    redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public Object getValue(String key) &#123;</span><br><span class=\"line\">    return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>注入RedisTemplate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\">import org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component</span><br><span class=\"line\">public class RedisService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setValue(String key, String value) &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getValue(String key) &#123;</span><br><span class=\"line\">        return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"注解法\"><a href=\"#注解法\" class=\"headerlink\" title=\"注解法\"></a>注解法</h3><p>如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：</p>\n<ol>\n<li><p>添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。</p>\n</li>\n<li><p>配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。</p>\n</li>\n<li><p>创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。</p>\n</li>\n<li><p>使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。<br>下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Cacheable(value &#x3D; &quot;user&quot;, key &#x3D; &quot;#id&quot;)</span><br><span class=\"line\">    public User getUserById(Long id) &#123;</span><br><span class=\"line\">        return userRepository.findById(id).orElse(null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F; 其他业务方法...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问缓存的模式\"><a href=\"#访问缓存的模式\" class=\"headerlink\" title=\"访问缓存的模式\"></a>访问缓存的模式</h2><h3 id=\"双读双写\"><a href=\"#双读双写\" class=\"headerlink\" title=\"双读双写\"></a>双读双写</h3><p>一般采用这种写法<br><img src=\"https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png\" alt=\"image\"></p>\n<h2 id=\"异步更新\"><a href=\"#异步更新\" class=\"headerlink\" title=\"异步更新\"></a>异步更新</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png\" alt=\"image\"></p>\n<h2 id=\"串联模式\"><a href=\"#串联模式\" class=\"headerlink\" title=\"串联模式\"></a>串联模式</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png\" alt=\"image\"></p>\n<!--  -->\n<h2 id=\"分片模式\"><a href=\"#分片模式\" class=\"headerlink\" title=\"分片模式\"></a>分片模式</h2><h3 id=\"客户端分片\"><a href=\"#客户端分片\" class=\"headerlink\" title=\"客户端分片\"></a>客户端分片</h3><h3 id=\"代理分片\"><a href=\"#代理分片\" class=\"headerlink\" title=\"代理分片\"></a>代理分片</h3><h3 id=\"集群分片\"><a href=\"#集群分片\" class=\"headerlink\" title=\"集群分片\"></a>集群分片</h3><h2 id=\"迁移方案\"><a href=\"#迁移方案\" class=\"headerlink\" title=\"迁移方案\"></a>迁移方案</h2><h3 id=\"平滑迁移\"><a href=\"#平滑迁移\" class=\"headerlink\" title=\"平滑迁移\"></a>平滑迁移</h3><h3 id=\"一致性哈希\"><a href=\"#一致性哈希\" class=\"headerlink\" title=\"一致性哈希\"></a>一致性哈希</h3>","site":{"data":{}},"length":1940,"excerpt":"","more":"<h2 id=\"为什么要用缓存\"><a href=\"#为什么要用缓存\" class=\"headerlink\" title=\"为什么要用缓存?\"></a>为什么要用缓存?</h2><h3 id=\"缓存的本质\"><a href=\"#缓存的本质\" class=\"headerlink\" title=\"缓存的本质\"></a>缓存的本质</h3><blockquote>\n<p>通俗理解计算机缓存,可以比喻成水库.</p>\n</blockquote>\n<h3 id=\"CPU缓存和系统机构缓存\"><a href=\"#CPU缓存和系统机构缓存\" class=\"headerlink\" title=\"CPU缓存和系统机构缓存\"></a>CPU缓存和系统机构缓存</h3><h2 id=\"缓存编程实现\"><a href=\"#缓存编程实现\" class=\"headerlink\" title=\"缓存编程实现\"></a>缓存编程实现</h2><h3 id=\"编程法\"><a href=\"#编程法\" class=\"headerlink\" title=\"编程法\"></a>编程法</h3><p>采用各种reis 客户端和 API.比如Jredis api</p>\n<h3 id=\"Spring-注入\"><a href=\"#Spring-注入\" class=\"headerlink\" title=\"Spring 注入\"></a>Spring 注入</h3><p>Spring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。</p>\n<ul>\n<li><p>添加依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RedisTemplate源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Autowired</span><br><span class=\"line\">private RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setValue(String key, Object value) &#123;</span><br><span class=\"line\">    redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public Object getValue(String key) &#123;</span><br><span class=\"line\">    return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>注入RedisTemplate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\">import org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component</span><br><span class=\"line\">public class RedisService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setValue(String key, String value) &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getValue(String key) &#123;</span><br><span class=\"line\">        return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"注解法\"><a href=\"#注解法\" class=\"headerlink\" title=\"注解法\"></a>注解法</h3><p>如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：</p>\n<ol>\n<li><p>添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。</p>\n</li>\n<li><p>配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。</p>\n</li>\n<li><p>创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。</p>\n</li>\n<li><p>使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。<br>下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Cacheable(value &#x3D; &quot;user&quot;, key &#x3D; &quot;#id&quot;)</span><br><span class=\"line\">    public User getUserById(Long id) &#123;</span><br><span class=\"line\">        return userRepository.findById(id).orElse(null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F; 其他业务方法...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问缓存的模式\"><a href=\"#访问缓存的模式\" class=\"headerlink\" title=\"访问缓存的模式\"></a>访问缓存的模式</h2><h3 id=\"双读双写\"><a href=\"#双读双写\" class=\"headerlink\" title=\"双读双写\"></a>双读双写</h3><p>一般采用这种写法<br><img src=\"https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png\" alt=\"image\"></p>\n<h2 id=\"异步更新\"><a href=\"#异步更新\" class=\"headerlink\" title=\"异步更新\"></a>异步更新</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png\" alt=\"image\"></p>\n<h2 id=\"串联模式\"><a href=\"#串联模式\" class=\"headerlink\" title=\"串联模式\"></a>串联模式</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png\" alt=\"image\"></p>\n<!--  -->\n<h2 id=\"分片模式\"><a href=\"#分片模式\" class=\"headerlink\" title=\"分片模式\"></a>分片模式</h2><h3 id=\"客户端分片\"><a href=\"#客户端分片\" class=\"headerlink\" title=\"客户端分片\"></a>客户端分片</h3><h3 id=\"代理分片\"><a href=\"#代理分片\" class=\"headerlink\" title=\"代理分片\"></a>代理分片</h3><h3 id=\"集群分片\"><a href=\"#集群分片\" class=\"headerlink\" title=\"集群分片\"></a>集群分片</h3><h2 id=\"迁移方案\"><a href=\"#迁移方案\" class=\"headerlink\" title=\"迁移方案\"></a>迁移方案</h2><h3 id=\"平滑迁移\"><a href=\"#平滑迁移\" class=\"headerlink\" title=\"平滑迁移\"></a>平滑迁移</h3><h3 id=\"一致性哈希\"><a href=\"#一致性哈希\" class=\"headerlink\" title=\"一致性哈希\"></a>一致性哈希</h3>"},{"title":"Redis 相比 Memcached 有哪些优势？","date":"2023-02-24T05:31:26.000Z","_content":"\nRedis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：\n\n1. 数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。\n\n2. 更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。\n\n3. 更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。\n\n更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。","source":"_posts/cachecompare.md","raw":"---\ntitle: Redis 相比 Memcached 有哪些优势？\n\ndate: 2023-02-24 13:31:26\ntags: 缓存\ncategories: 技术\n---\n\nRedis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：\n\n1. 数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。\n\n2. 更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。\n\n3. 更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。\n\n更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。","slug":"cachecompare","published":1,"updated":"2023-02-24T05:33:12.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1t000nr7jd6tqm5mi7","content":"<p>Redis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：</p>\n<ol>\n<li><p>数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。</p>\n</li>\n<li><p>更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。</p>\n</li>\n<li><p>更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。</p>\n</li>\n</ol>\n<p>更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。</p>\n","site":{"data":{}},"length":440,"excerpt":"","more":"<p>Redis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：</p>\n<ol>\n<li><p>数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。</p>\n</li>\n<li><p>更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。</p>\n</li>\n<li><p>更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。</p>\n</li>\n</ol>\n<p>更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。</p>\n"},{"title":"Can't set cookie dm_task_set_cookie failed 错误处理","date":"2020-11-25T07:13:35.000Z","toc":true,"_content":"\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","source":"_posts/dm_task_set_cookie.md","raw":"---\ntitle: Can't set cookie dm_task_set_cookie failed 错误处理\ndate: 2020-11-25 15:13:35\ntags: [docker,bug]\ncategories: 技术\ntoc: true\n\n---\n\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","slug":"dm_task_set_cookie","published":1,"updated":"2023-02-21T09:40:10.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1u000pr7jde29g0lwj","content":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n","site":{"data":{}},"length":185,"excerpt":"","more":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n"},{"title":"安安稳稳吃碗面","date":"2020-11-26T02:53:35.000Z","_content":"\n\n> 下跌是一面照妖镜\n\n\n基金赚了钱应不应该拿来消费？\n我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。\n我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。\n下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。\n好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由","source":"_posts/gdcm.md","raw":"---\ntitle: 安安稳稳吃碗面\ndate: 2020-11-26 10:53:35\ntags: [关灯吃面,理财]\n---\n\n\n> 下跌是一面照妖镜\n\n\n基金赚了钱应不应该拿来消费？\n我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。\n我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。\n下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。\n好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由","slug":"gdcm","published":1,"updated":"2023-03-23T07:48:47.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1w000tr7jd532r5cdy","content":"<blockquote>\n<p>下跌是一面照妖镜</p>\n</blockquote>\n<p>基金赚了钱应不应该拿来消费？<br>我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。<br>我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。<br>下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。<br>好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由</p>\n","site":{"data":{}},"length":371,"excerpt":"","more":"<blockquote>\n<p>下跌是一面照妖镜</p>\n</blockquote>\n<p>基金赚了钱应不应该拿来消费？<br>我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。<br>我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。<br>下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。<br>好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由</p>\n"},{"title":"用springboot写一个 demo","date":"2021-02-18T06:36:28.000Z","toc":true,"_content":"\n## 添加依赖\n1. 创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：\n\n```\n    <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n```\n## 创建主程序\n2. 创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n\n```\n## 创建 controller\n3. 创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：\n\n```\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @RequestMapping(\"/hello\")\n    public String hello() {\n        return \"Hello World!\";\n    }\n}\n\n```\n\n4. 运行应用程序，访问 http://localhost:8080/hello，你应该能看到浏览器显示 \"Hello World!\"。\n\n```\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    @RestController\n    public class HelloController {\n        @RequestMapping(\"/hello\")\n        public String hello() {\n            return \"Hello World!\";\n        }\n    }\n    ```","source":"_posts/hello-springboot.md","raw":"---\ntitle: 用springboot写一个 demo\ndate: 2021-02-18 14:36:28\ntags: springboot\ncategories: 技术\ntoc: true\n---\n\n## 添加依赖\n1. 创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：\n\n```\n    <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n```\n## 创建主程序\n2. 创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n\n```\n## 创建 controller\n3. 创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：\n\n```\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @RequestMapping(\"/hello\")\n    public String hello() {\n        return \"Hello World!\";\n    }\n}\n\n```\n\n4. 运行应用程序，访问 http://localhost:8080/hello，你应该能看到浏览器显示 \"Hello World!\"。\n\n```\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    @RestController\n    public class HelloController {\n        @RequestMapping(\"/hello\")\n        public String hello() {\n            return \"Hello World!\";\n        }\n    }\n    ```","slug":"hello-springboot","published":1,"updated":"2023-02-18T06:42:18.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1x000ur7jda0xyaf1p","content":"<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><ol>\n<li>创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\"> &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\"> &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建主程序\"><a href=\"#创建主程序\" class=\"headerlink\" title=\"创建主程序\"></a>创建主程序</h2><ol start=\"2\">\n<li>创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class App &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(App.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-controller\"><a href=\"#创建-controller\" class=\"headerlink\" title=\"创建 controller\"></a>创建 controller</h2></li>\n<li>创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>运行应用程序，访问 <a href=\"http://localhost:8080/hello%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E8%83%BD%E7%9C%8B%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BA\">http://localhost:8080/hello，你应该能看到浏览器显示</a> “Hello World!”。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1288,"excerpt":"","more":"<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><ol>\n<li>创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\"> &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\"> &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建主程序\"><a href=\"#创建主程序\" class=\"headerlink\" title=\"创建主程序\"></a>创建主程序</h2><ol start=\"2\">\n<li>创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class App &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(App.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-controller\"><a href=\"#创建-controller\" class=\"headerlink\" title=\"创建 controller\"></a>创建 controller</h2></li>\n<li>创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>运行应用程序，访问 <a href=\"http://localhost:8080/hello%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E8%83%BD%E7%9C%8B%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BA\">http://localhost:8080/hello，你应该能看到浏览器显示</a> “Hello World!”。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Hello Hexo","date":"2020-11-26T02:53:35.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo\ntags: [hexo,性能测试]\ncategories: 工作\ndate: 2020-11-26 10:53:35\n\n# toc: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2023-03-23T07:48:47.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie1z000yr7jd7ioqcp4l","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"length":367,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"hexo-generator-search","toc":true,"_content":"\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","source":"_posts/hexo-generator-search.md","raw":"---\ntitle: hexo-generator-search\ntags: [hexo]\ntoc: true\ncategories: 技术\n\n---\n\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","slug":"hexo-generator-search","published":1,"date":"2023-01-06T07:27:53.743Z","updated":"2023-02-23T05:56:05.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie210011r7jdet0z8i7d","content":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":406,"excerpt":"","more":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>"},{"title":"Hello Hexo","toc":true,"_content":"\n# idea always Update Indices\n\n## Open IntelliJ IDEA.\n1. Select the File menu.\n1. Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.\n1. Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.","source":"_posts/idea always Update Indices.md","raw":"---\ntitle: Hello Hexo\ntags: [idea]\ncategories: idea\ntoc: true\n---\n\n# idea always Update Indices\n\n## Open IntelliJ IDEA.\n1. Select the File menu.\n1. Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.\n1. Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.","slug":"idea always Update Indices","published":1,"date":"2023-03-23T07:48:47.455Z","updated":"2023-03-23T07:48:47.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie220015r7jdfw394b5t","content":"<h1 id=\"idea-always-Update-Indices\"><a href=\"#idea-always-Update-Indices\" class=\"headerlink\" title=\"idea always Update Indices\"></a>idea always Update Indices</h1><h2 id=\"Open-IntelliJ-IDEA\"><a href=\"#Open-IntelliJ-IDEA\" class=\"headerlink\" title=\"Open IntelliJ IDEA.\"></a>Open IntelliJ IDEA.</h2><ol>\n<li>Select the File menu.</li>\n<li>Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.</li>\n<li>Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.</li>\n</ol>\n","site":{"data":{}},"length":253,"excerpt":"","more":"<h1 id=\"idea-always-Update-Indices\"><a href=\"#idea-always-Update-Indices\" class=\"headerlink\" title=\"idea always Update Indices\"></a>idea always Update Indices</h1><h2 id=\"Open-IntelliJ-IDEA\"><a href=\"#Open-IntelliJ-IDEA\" class=\"headerlink\" title=\"Open IntelliJ IDEA.\"></a>Open IntelliJ IDEA.</h2><ol>\n<li>Select the File menu.</li>\n<li>Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.</li>\n<li>Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.</li>\n</ol>\n"},{"title":"一文搞定 数据库索引","date":"2023-02-28T04:41:46.000Z","toc":true,"_content":"## 什么是索引\n数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。\n### 索引越多越好吗?\n可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。\n## 索引分类\n### 按用途分\n\n1. 普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。\n\n2. 唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。\n\n3. 主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。\n\n4. 组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。\n\n5. 全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。\n\n底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。\n### 按数据结构分\n\n索引分类从数据结构上分为：\n\n1. 线性索引：按照顺序存储数据，比如数组、链表等；\n\n2. 树形索引：按照树形结构存储数据，比如二叉树、B树等；\n\n3. 哈希索引：按照哈希函数存储数据，比如哈希表等；\n\n4. 全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。\n## 作用\n## 索引规则\n\n## 索引失效\n### 索引失效原因\n\n\n1. **索引被删除**：当索引被删除时，索引就会失效。\n\n2. 索引被修改：当索引被修改时，索引也会失效。\n\n3. 数据发生变化：当数据发生变化时，索引也会失效。\n\n4. 索引字段被**修改**：当索引字段被修改时，索引也会失效。\n\n5. 索引被**禁用**：当索引被禁用时，索引也会失效。\n\n\n### 避免索引失效\n\n1. 尽量减少索引的**更新操作**，因为更新操作会导致索引失效。\n\n2. **尽量使用唯一索引**，因为唯一索引可以避免重复记录，从而避免索引失效。\n\n3. 尽量使用**复合索引**，复合索引可以提高查询效率，也可以避免索引失效。\n\n4. 尽量使用**覆盖索引**，覆盖索引可以减少查询操作，从而避免索引失效。\n\n5. 尽量使用稳定的索引，稳定的索引可以**避免数据变动**，从而避免索引失效。","source":"_posts/index.md","raw":"---\ntitle: 一文搞定 数据库索引 \ndate: 2023-02-28 12:41:46\ntags: [数据库,索引]\ncategories: 技术\ntoc: true\n---\n## 什么是索引\n数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。\n### 索引越多越好吗?\n可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。\n## 索引分类\n### 按用途分\n\n1. 普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。\n\n2. 唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。\n\n3. 主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。\n\n4. 组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。\n\n5. 全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。\n\n底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。\n### 按数据结构分\n\n索引分类从数据结构上分为：\n\n1. 线性索引：按照顺序存储数据，比如数组、链表等；\n\n2. 树形索引：按照树形结构存储数据，比如二叉树、B树等；\n\n3. 哈希索引：按照哈希函数存储数据，比如哈希表等；\n\n4. 全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。\n## 作用\n## 索引规则\n\n## 索引失效\n### 索引失效原因\n\n\n1. **索引被删除**：当索引被删除时，索引就会失效。\n\n2. 索引被修改：当索引被修改时，索引也会失效。\n\n3. 数据发生变化：当数据发生变化时，索引也会失效。\n\n4. 索引字段被**修改**：当索引字段被修改时，索引也会失效。\n\n5. 索引被**禁用**：当索引被禁用时，索引也会失效。\n\n\n### 避免索引失效\n\n1. 尽量减少索引的**更新操作**，因为更新操作会导致索引失效。\n\n2. **尽量使用唯一索引**，因为唯一索引可以避免重复记录，从而避免索引失效。\n\n3. 尽量使用**复合索引**，复合索引可以提高查询效率，也可以避免索引失效。\n\n4. 尽量使用**覆盖索引**，覆盖索引可以减少查询操作，从而避免索引失效。\n\n5. 尽量使用稳定的索引，稳定的索引可以**避免数据变动**，从而避免索引失效。","slug":"index","published":1,"updated":"2023-02-28T06:14:04.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie240018r7jd76o57va7","content":"<h2 id=\"什么是索引\"><a href=\"#什么是索引\" class=\"headerlink\" title=\"什么是索引\"></a>什么是索引</h2><p>数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。</p>\n<h3 id=\"索引越多越好吗\"><a href=\"#索引越多越好吗\" class=\"headerlink\" title=\"索引越多越好吗?\"></a>索引越多越好吗?</h3><p>可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。</p>\n<h2 id=\"索引分类\"><a href=\"#索引分类\" class=\"headerlink\" title=\"索引分类\"></a>索引分类</h2><h3 id=\"按用途分\"><a href=\"#按用途分\" class=\"headerlink\" title=\"按用途分\"></a>按用途分</h3><ol>\n<li><p>普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。</p>\n</li>\n<li><p>唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。</p>\n</li>\n<li><p>主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。</p>\n</li>\n<li><p>组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。</p>\n</li>\n<li><p>全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。</p>\n</li>\n</ol>\n<p>底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。</p>\n<h3 id=\"按数据结构分\"><a href=\"#按数据结构分\" class=\"headerlink\" title=\"按数据结构分\"></a>按数据结构分</h3><p>索引分类从数据结构上分为：</p>\n<ol>\n<li><p>线性索引：按照顺序存储数据，比如数组、链表等；</p>\n</li>\n<li><p>树形索引：按照树形结构存储数据，比如二叉树、B树等；</p>\n</li>\n<li><p>哈希索引：按照哈希函数存储数据，比如哈希表等；</p>\n</li>\n<li><p>全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><h2 id=\"索引规则\"><a href=\"#索引规则\" class=\"headerlink\" title=\"索引规则\"></a>索引规则</h2></li>\n</ol>\n<h2 id=\"索引失效\"><a href=\"#索引失效\" class=\"headerlink\" title=\"索引失效\"></a>索引失效</h2><h3 id=\"索引失效原因\"><a href=\"#索引失效原因\" class=\"headerlink\" title=\"索引失效原因\"></a>索引失效原因</h3><ol>\n<li><p><strong>索引被删除</strong>：当索引被删除时，索引就会失效。</p>\n</li>\n<li><p>索引被修改：当索引被修改时，索引也会失效。</p>\n</li>\n<li><p>数据发生变化：当数据发生变化时，索引也会失效。</p>\n</li>\n<li><p>索引字段被<strong>修改</strong>：当索引字段被修改时，索引也会失效。</p>\n</li>\n<li><p>索引被<strong>禁用</strong>：当索引被禁用时，索引也会失效。</p>\n</li>\n</ol>\n<h3 id=\"避免索引失效\"><a href=\"#避免索引失效\" class=\"headerlink\" title=\"避免索引失效\"></a>避免索引失效</h3><ol>\n<li><p>尽量减少索引的<strong>更新操作</strong>，因为更新操作会导致索引失效。</p>\n</li>\n<li><p><strong>尽量使用唯一索引</strong>，因为唯一索引可以避免重复记录，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>复合索引</strong>，复合索引可以提高查询效率，也可以避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>覆盖索引</strong>，覆盖索引可以减少查询操作，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用稳定的索引，稳定的索引可以<strong>避免数据变动</strong>，从而避免索引失效。</p>\n</li>\n</ol>\n","site":{"data":{}},"length":995,"excerpt":"","more":"<h2 id=\"什么是索引\"><a href=\"#什么是索引\" class=\"headerlink\" title=\"什么是索引\"></a>什么是索引</h2><p>数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。</p>\n<h3 id=\"索引越多越好吗\"><a href=\"#索引越多越好吗\" class=\"headerlink\" title=\"索引越多越好吗?\"></a>索引越多越好吗?</h3><p>可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。</p>\n<h2 id=\"索引分类\"><a href=\"#索引分类\" class=\"headerlink\" title=\"索引分类\"></a>索引分类</h2><h3 id=\"按用途分\"><a href=\"#按用途分\" class=\"headerlink\" title=\"按用途分\"></a>按用途分</h3><ol>\n<li><p>普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。</p>\n</li>\n<li><p>唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。</p>\n</li>\n<li><p>主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。</p>\n</li>\n<li><p>组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。</p>\n</li>\n<li><p>全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。</p>\n</li>\n</ol>\n<p>底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。</p>\n<h3 id=\"按数据结构分\"><a href=\"#按数据结构分\" class=\"headerlink\" title=\"按数据结构分\"></a>按数据结构分</h3><p>索引分类从数据结构上分为：</p>\n<ol>\n<li><p>线性索引：按照顺序存储数据，比如数组、链表等；</p>\n</li>\n<li><p>树形索引：按照树形结构存储数据，比如二叉树、B树等；</p>\n</li>\n<li><p>哈希索引：按照哈希函数存储数据，比如哈希表等；</p>\n</li>\n<li><p>全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><h2 id=\"索引规则\"><a href=\"#索引规则\" class=\"headerlink\" title=\"索引规则\"></a>索引规则</h2></li>\n</ol>\n<h2 id=\"索引失效\"><a href=\"#索引失效\" class=\"headerlink\" title=\"索引失效\"></a>索引失效</h2><h3 id=\"索引失效原因\"><a href=\"#索引失效原因\" class=\"headerlink\" title=\"索引失效原因\"></a>索引失效原因</h3><ol>\n<li><p><strong>索引被删除</strong>：当索引被删除时，索引就会失效。</p>\n</li>\n<li><p>索引被修改：当索引被修改时，索引也会失效。</p>\n</li>\n<li><p>数据发生变化：当数据发生变化时，索引也会失效。</p>\n</li>\n<li><p>索引字段被<strong>修改</strong>：当索引字段被修改时，索引也会失效。</p>\n</li>\n<li><p>索引被<strong>禁用</strong>：当索引被禁用时，索引也会失效。</p>\n</li>\n</ol>\n<h3 id=\"避免索引失效\"><a href=\"#避免索引失效\" class=\"headerlink\" title=\"避免索引失效\"></a>避免索引失效</h3><ol>\n<li><p>尽量减少索引的<strong>更新操作</strong>，因为更新操作会导致索引失效。</p>\n</li>\n<li><p><strong>尽量使用唯一索引</strong>，因为唯一索引可以避免重复记录，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>复合索引</strong>，复合索引可以提高查询效率，也可以避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>覆盖索引</strong>，覆盖索引可以减少查询操作，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用稳定的索引，稳定的索引可以<strong>避免数据变动</strong>，从而避免索引失效。</p>\n</li>\n</ol>\n"},{"title":"java如何创建多线程?","date":"2023-03-14T08:35:40.000Z","toc":"ture","_content":"## 继承 Thread,重新 run\n\n```java\n    /**\n     * 继承 Thread 类\n     */\n    class MyThread extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n\n```\n## 实现 Runable+重写 run\n\n```java\n  /**\n     * 实现  Runnable 接口\n     */\n    class MyRunnable implements Runnable {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n```\n## 实现 Callable 接口重写 call 方法\n获取返回值\n```java\n    /**\n     * 实现 Callable 接口 获取返回值\n     */\n    class MyCallable implements Callable {\n        @Override\n        public Object call() throws Exception {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            return Thread.currentThread().getName();\n        }\n    }\n```\n\t\n## new Thread+lamda 表达式\n```java\n        /**\n         * 创建 Thread 对象 lambda 表达式\n         */\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            }\n        });\n\n```\n## 线程池\n\n```java\n   /**\n     * 基于线程池创建线程\n     */\n    class MyThreadFactory implements ThreadFactory {\n        @Override\n        public Thread newThread(Runnable r) {\n            return null;\n        }\n    }\n```","source":"_posts/java-thread.md","raw":"---\ntitle: java如何创建多线程?\ndate: 2023-03-14 16:35:40\ntags: 多线程\ncategories: 技术\ntoc: ture\n\n---\n## 继承 Thread,重新 run\n\n```java\n    /**\n     * 继承 Thread 类\n     */\n    class MyThread extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n\n```\n## 实现 Runable+重写 run\n\n```java\n  /**\n     * 实现  Runnable 接口\n     */\n    class MyRunnable implements Runnable {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n```\n## 实现 Callable 接口重写 call 方法\n获取返回值\n```java\n    /**\n     * 实现 Callable 接口 获取返回值\n     */\n    class MyCallable implements Callable {\n        @Override\n        public Object call() throws Exception {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            return Thread.currentThread().getName();\n        }\n    }\n```\n\t\n## new Thread+lamda 表达式\n```java\n        /**\n         * 创建 Thread 对象 lambda 表达式\n         */\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            }\n        });\n\n```\n## 线程池\n\n```java\n   /**\n     * 基于线程池创建线程\n     */\n    class MyThreadFactory implements ThreadFactory {\n        @Override\n        public Thread newThread(Runnable r) {\n            return null;\n        }\n    }\n```","slug":"java-thread","published":1,"updated":"2023-03-14T08:45:14.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie26001ar7jd0sic12rd","content":"<h2 id=\"继承-Thread-重新-run\"><a href=\"#继承-Thread-重新-run\" class=\"headerlink\" title=\"继承 Thread,重新 run\"></a>继承 Thread,重新 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承 Thread 类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Runable-重写-run\"><a href=\"#实现-Runable-重写-run\" class=\"headerlink\" title=\"实现 Runable+重写 run\"></a>实现 Runable+重写 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 实现  Runnable 接口</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRunnable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Callable-接口重写-call-方法\"><a href=\"#实现-Callable-接口重写-call-方法\" class=\"headerlink\" title=\"实现 Callable 接口重写 call 方法\"></a>实现 Callable 接口重写 call 方法</h2><p>获取返回值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现 Callable 接口 获取返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyCallable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Thread.currentThread().getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"new-Thread-lamda-表达式\"><a href=\"#new-Thread-lamda-表达式\" class=\"headerlink\" title=\"new Thread+lamda 表达式\"></a>new Thread+lamda 表达式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建 Thread 对象 lambda 表达式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Thread thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 基于线程池创建线程</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThreadFactory</span> <span class=\"keyword\">implements</span> <span class=\"title\">ThreadFactory</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"meta\">@Override</span></span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> Thread <span class=\"title\">newThread</span><span class=\"params\">(Runnable r)</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1068,"excerpt":"","more":"<h2 id=\"继承-Thread-重新-run\"><a href=\"#继承-Thread-重新-run\" class=\"headerlink\" title=\"继承 Thread,重新 run\"></a>继承 Thread,重新 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承 Thread 类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Runable-重写-run\"><a href=\"#实现-Runable-重写-run\" class=\"headerlink\" title=\"实现 Runable+重写 run\"></a>实现 Runable+重写 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 实现  Runnable 接口</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRunnable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Callable-接口重写-call-方法\"><a href=\"#实现-Callable-接口重写-call-方法\" class=\"headerlink\" title=\"实现 Callable 接口重写 call 方法\"></a>实现 Callable 接口重写 call 方法</h2><p>获取返回值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现 Callable 接口 获取返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyCallable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Thread.currentThread().getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"new-Thread-lamda-表达式\"><a href=\"#new-Thread-lamda-表达式\" class=\"headerlink\" title=\"new Thread+lamda 表达式\"></a>new Thread+lamda 表达式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建 Thread 对象 lambda 表达式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Thread thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 基于线程池创建线程</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThreadFactory</span> <span class=\"keyword\">implements</span> <span class=\"title\">ThreadFactory</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"meta\">@Override</span></span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> Thread <span class=\"title\">newThread</span><span class=\"params\">(Runnable r)</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>"},{"title":"java 中的锁解决什么问题?","date":"2023-02-15T08:31:47.000Z","_content":"Java中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。\n\nJava中的锁能够解决以下实际问题：\n\n数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。\n线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。\n性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。\n死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。\n总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。","source":"_posts/java-中的锁解决什么问题.md","raw":"---\ntitle: java 中的锁解决什么问题?\ndate: 2023-02-15 16:31:47\ntags: [java 锁]\n---\nJava中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。\n\nJava中的锁能够解决以下实际问题：\n\n数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。\n线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。\n性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。\n死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。\n总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。","slug":"java-中的锁解决什么问题","published":1,"updated":"2023-03-23T07:48:47.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie28001er7jdawrn50x8","content":"<p>Java中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。</p>\n<p>Java中的锁能够解决以下实际问题：</p>\n<p>数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。<br>线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。<br>性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。<br>死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。<br>总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。</p>\n","site":{"data":{}},"length":387,"excerpt":"","more":"<p>Java中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。</p>\n<p>Java中的锁能够解决以下实际问题：</p>\n<p>数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。<br>线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。<br>性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。<br>死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。<br>总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。</p>\n"},{"title":"java怎找工作","date":"2023-02-15T08:24:29.000Z","_content":"java 程序员怎么做找工作\n\n在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。\n\n关注社交媒体和专业网站。\n加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。\n\n参加招聘会和技术交流会。\n许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。\n\n向自己熟悉的人求助。\n如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。\n\n通过自己的作品证明能力。\n如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。\n\n提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。\n","source":"_posts/java怎找工作.md","raw":"---\ntitle: java怎找工作\ndate: 2023-02-15 16:24:29\ntags: [java]\n---\njava 程序员怎么做找工作\n\n在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。\n\n关注社交媒体和专业网站。\n加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。\n\n参加招聘会和技术交流会。\n许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。\n\n向自己熟悉的人求助。\n如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。\n\n通过自己的作品证明能力。\n如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。\n\n提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。\n","slug":"java怎找工作","published":1,"updated":"2023-03-23T07:48:47.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2a001hr7jd35rp2j6l","content":"<p>java 程序员怎么做找工作</p>\n<p>在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。</p>\n<p>关注社交媒体和专业网站。<br>加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。</p>\n<p>参加招聘会和技术交流会。<br>许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。</p>\n<p>向自己熟悉的人求助。<br>如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。</p>\n<p>通过自己的作品证明能力。<br>如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。</p>\n<p>提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。</p>\n","site":{"data":{}},"length":443,"excerpt":"","more":"<p>java 程序员怎么做找工作</p>\n<p>在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。</p>\n<p>关注社交媒体和专业网站。<br>加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。</p>\n<p>参加招聘会和技术交流会。<br>许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。</p>\n<p>向自己熟悉的人求助。<br>如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。</p>\n<p>通过自己的作品证明能力。<br>如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。</p>\n<p>提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。</p>\n"},{"title":"加仓了","date":"2020-11-27T09:24:25.000Z","_content":"\n【加仓计划】2020年11月26日\n今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。\n美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。\n市场博弈完，再看看最终方向选择吧。\n持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。\n今日加仓操作:\n萌萌的猪猪侠国内组合，\n加仓国寿安保稳惠混合基金200元。\n加仓华安创业板50ETF联接A300元。\n加仓浦银安盛医疗健康混合400元。\n加仓工银深证红利ETF联接A200元。\n猪猪侠随心投组合，一键买入1000元。\n萌萌的猪猪侠海外组合，无操作。\n\n\n\n\n\n\n\nvia  [萌萌的猪猪侠](https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A)","source":"_posts/jc.md","raw":"---\ntitle: 加仓了\ndate: 2020-11-27 17:24:25\ntags: [理财,关灯吃面]\n---\n\n【加仓计划】2020年11月26日\n今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。\n美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。\n市场博弈完，再看看最终方向选择吧。\n持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。\n今日加仓操作:\n萌萌的猪猪侠国内组合，\n加仓国寿安保稳惠混合基金200元。\n加仓华安创业板50ETF联接A300元。\n加仓浦银安盛医疗健康混合400元。\n加仓工银深证红利ETF联接A200元。\n猪猪侠随心投组合，一键买入1000元。\n萌萌的猪猪侠海外组合，无操作。\n\n\n\n\n\n\n\nvia  [萌萌的猪猪侠](https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A)","slug":"jc","published":1,"updated":"2023-03-23T07:48:47.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2c001lr7jdbbc965w9","content":"<p>【加仓计划】2020年11月26日<br>今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。<br>美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。<br>市场博弈完，再看看最终方向选择吧。<br>持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。<br>今日加仓操作:<br>萌萌的猪猪侠国内组合，<br>加仓国寿安保稳惠混合基金200元。<br>加仓华安创业板50ETF联接A300元。<br>加仓浦银安盛医疗健康混合400元。<br>加仓工银深证红利ETF联接A200元。<br>猪猪侠随心投组合，一键买入1000元。<br>萌萌的猪猪侠海外组合，无操作。</p>\n<p>via  <a href=\"https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A\">萌萌的猪猪侠</a></p>\n","site":{"data":{}},"length":293,"excerpt":"","more":"<p>【加仓计划】2020年11月26日<br>今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。<br>美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。<br>市场博弈完，再看看最终方向选择吧。<br>持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。<br>今日加仓操作:<br>萌萌的猪猪侠国内组合，<br>加仓国寿安保稳惠混合基金200元。<br>加仓华安创业板50ETF联接A300元。<br>加仓浦银安盛医疗健康混合400元。<br>加仓工银深证红利ETF联接A200元。<br>猪猪侠随心投组合，一键买入1000元。<br>萌萌的猪猪侠海外组合，无操作。</p>\n<p>via  <a href=\"https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A\">萌萌的猪猪侠</a></p>\n"},{"title":"juc-01","_content":"\n\n### 阶段1\n\n什么是JUC？ \n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？\n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n### 阶段2\n\n线程的本质(操作系统与CPU是如何执行线程的)\n并发编程为什么充满挑战？\n并发编程的三大特性：可见性、有序性、原子性\nsynchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？\n无锁、偏向锁、轻量级锁、重量级锁升级过程\n悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁\n（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？\n（首次公开）工作线程数，设多少最合适？如何理解N*C*(1+C/W)的计算公式?","source":"_posts/juc.md","raw":"---\ntitle: juc-01\ntag: juc\n---\n\n\n### 阶段1\n\n什么是JUC？ \n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？\n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n### 阶段2\n\n线程的本质(操作系统与CPU是如何执行线程的)\n并发编程为什么充满挑战？\n并发编程的三大特性：可见性、有序性、原子性\nsynchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？\n无锁、偏向锁、轻量级锁、重量级锁升级过程\n悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁\n（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？\n（首次公开）工作线程数，设多少最合适？如何理解N*C*(1+C/W)的计算公式?","slug":"juc","published":1,"date":"2023-03-23T07:48:47.457Z","updated":"2023-03-23T07:48:47.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2e001or7jd8qdfbc3z","content":"<h3 id=\"阶段1\"><a href=\"#阶段1\" class=\"headerlink\" title=\"阶段1\"></a>阶段1</h3><p>什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<p>什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<h3 id=\"阶段2\"><a href=\"#阶段2\" class=\"headerlink\" title=\"阶段2\"></a>阶段2</h3><p>线程的本质(操作系统与CPU是如何执行线程的)<br>并发编程为什么充满挑战？<br>并发编程的三大特性：可见性、有序性、原子性<br>synchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？<br>无锁、偏向锁、轻量级锁、重量级锁升级过程<br>悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁<br>（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？<br>（首次公开）工作线程数，设多少最合适？如何理解N<em>C</em>(1+C/W)的计算公式?</p>\n","site":{"data":{}},"length":789,"excerpt":"","more":"<h3 id=\"阶段1\"><a href=\"#阶段1\" class=\"headerlink\" title=\"阶段1\"></a>阶段1</h3><p>什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<p>什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<h3 id=\"阶段2\"><a href=\"#阶段2\" class=\"headerlink\" title=\"阶段2\"></a>阶段2</h3><p>线程的本质(操作系统与CPU是如何执行线程的)<br>并发编程为什么充满挑战？<br>并发编程的三大特性：可见性、有序性、原子性<br>synchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？<br>无锁、偏向锁、轻量级锁、重量级锁升级过程<br>悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁<br>（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？<br>（首次公开）工作线程数，设多少最合适？如何理解N<em>C</em>(1+C/W)的计算公式?</p>\n"},{"title":"如何知识变现","date":"2023-02-20T02:03:40.000Z","_content":"<!-- ## 如何知识变现 -->\n\n1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。\n\n2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。\n\n3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。\n\n4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。\n\n5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。","source":"_posts/liquidate.md","raw":"---\ntitle: 如何知识变现\ndate: 2023-02-20 10:03:40\ntags: 知识变现\ncategories: 学习\n---\n<!-- ## 如何知识变现 -->\n\n1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。\n\n2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。\n\n3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。\n\n4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。\n\n5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。","slug":"liquidate","published":1,"updated":"2023-02-20T02:04:53.435Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2g001rr7jd9vi0f30p","content":"<!-- ## 如何知识变现 -->\n\n<p>1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。</p>\n<p>2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。</p>\n<p>3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。</p>\n<p>4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。</p>\n<p>5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。</p>\n","site":{"data":{}},"length":231,"excerpt":"","more":"<!-- ## 如何知识变现 -->\n\n<p>1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。</p>\n<p>2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。</p>\n<p>3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。</p>\n<p>4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。</p>\n<p>5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。</p>\n"},{"title":"money","date":"2021-05-18T03:43:10.000Z","_content":"\n\n文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。\n\n\n\n![图片](https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1)\n\n萌大，你昨天的文章有标题党之嫌。\n\n我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。\n\n\n\n说几个指标，供大家参考。\n\n第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。\n\n\n\n第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。\n\n\n\n第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。\n\n\n\n第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。\n\n\n\n几个板块的分析。\n\n消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。\n\n上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。\n\n新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。\n\n\n\n国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。\n\n嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。\n\n汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！\n\n分享、点赞、在看 顺手三连越来越有钱！\n\n喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。","source":"_posts/money.md","raw":"---\ntitle: money\ndate: 2021-05-18 11:43:10\ntags: [挣钱,内容]\n---\n\n\n文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。\n\n\n\n![图片](https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1)\n\n萌大，你昨天的文章有标题党之嫌。\n\n我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。\n\n\n\n说几个指标，供大家参考。\n\n第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。\n\n\n\n第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。\n\n\n\n第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。\n\n\n\n第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。\n\n\n\n几个板块的分析。\n\n消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。\n\n上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。\n\n新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。\n\n\n\n国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。\n\n嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。\n\n汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！\n\n分享、点赞、在看 顺手三连越来越有钱！\n\n喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。","slug":"money","published":1,"updated":"2023-03-23T07:48:47.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2h001ur7jd00qfg9ym","content":"<p>文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。</p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"图片\"></p>\n<p>萌大，你昨天的文章有标题党之嫌。</p>\n<p>我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。</p>\n<p>说几个指标，供大家参考。</p>\n<p>第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。</p>\n<p>第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。</p>\n<p>第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。</p>\n<p>第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。</p>\n<p>几个板块的分析。</p>\n<p>消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。</p>\n<p>上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。</p>\n<p>新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。</p>\n<p>国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。</p>\n<p>嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。</p>\n<p>汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！</p>\n<p>分享、点赞、在看 顺手三连越来越有钱！</p>\n<p>喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。</p>\n","site":{"data":{}},"length":1211,"excerpt":"","more":"<p>文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。</p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"图片\"></p>\n<p>萌大，你昨天的文章有标题党之嫌。</p>\n<p>我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。</p>\n<p>说几个指标，供大家参考。</p>\n<p>第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。</p>\n<p>第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。</p>\n<p>第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。</p>\n<p>第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。</p>\n<p>几个板块的分析。</p>\n<p>消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。</p>\n<p>上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。</p>\n<p>新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。</p>\n<p>国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。</p>\n<p>嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。</p>\n<p>汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！</p>\n<p>分享、点赞、在看 顺手三连越来越有钱！</p>\n<p>喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。</p>\n"},{"title":"one day","date":"2022-11-04T08:32:02.000Z","_content":"\n\n1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……","source":"_posts/one-day.md","raw":"---\ntitle: one day\ndate: 2022-11-04 16:32:02\ntags: life \n---\n\n\n1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……","slug":"one-day","published":1,"updated":"2023-03-23T07:48:47.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2i001xr7jd88yker5d","content":"<p>1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……</p>\n","site":{"data":{}},"length":280,"excerpt":"","more":"<p>1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……</p>\n"},{"title":"postgresql 和mysql 对比","date":"2023-02-28T03:27:43.000Z","_content":"postgresql 和mysql 对比\n\n\n|  | PostgreSQL | MySQL |\n| :--- | :--- | :--- |\n| 数据类型 | 支持复杂的数据类型，如数组，多维数组，对象，XML | 支持常见的数据类型，如数字，字符串，日期等 |\n| 事务支持 | 支持ACID事务 | 支持ACID事务 |\n| 存储过程 | 支持存储过程 | 支持存储过程 |\n| 视图 | 支持视图 | 支持视图 |\n| 触发器 | 支持触发器 | 支持触发器 |\n| 索引 | 支持多种索引，如B树，哈希，GIST，GiST | 支持B树索引 |\n| 性能 | 高性能 | 中等性能 |\n| 安全性 | 支持完整的安全性功能，如访问控制，加密，身份验证等 | 支持完整的安全性功能，如访问控制，加密，身份验证等 |\n| 可移植性 | 支持多种操作系统，如Linux，Windows，Mac OS等 | 支持多种操作系统，如Linux，Windows，Mac OS等 |\n| 开源 | 开源 | 非开源 |","source":"_posts/psotgresvsmysql.md","raw":"---\ntitle: postgresql 和mysql 对比\ndate: 2023-02-28 11:27:43\ntags: 数据库\ncategories: 技术\n---\npostgresql 和mysql 对比\n\n\n|  | PostgreSQL | MySQL |\n| :--- | :--- | :--- |\n| 数据类型 | 支持复杂的数据类型，如数组，多维数组，对象，XML | 支持常见的数据类型，如数字，字符串，日期等 |\n| 事务支持 | 支持ACID事务 | 支持ACID事务 |\n| 存储过程 | 支持存储过程 | 支持存储过程 |\n| 视图 | 支持视图 | 支持视图 |\n| 触发器 | 支持触发器 | 支持触发器 |\n| 索引 | 支持多种索引，如B树，哈希，GIST，GiST | 支持B树索引 |\n| 性能 | 高性能 | 中等性能 |\n| 安全性 | 支持完整的安全性功能，如访问控制，加密，身份验证等 | 支持完整的安全性功能，如访问控制，加密，身份验证等 |\n| 可移植性 | 支持多种操作系统，如Linux，Windows，Mac OS等 | 支持多种操作系统，如Linux，Windows，Mac OS等 |\n| 开源 | 开源 | 非开源 |","slug":"psotgresvsmysql","published":1,"updated":"2023-03-08T07:53:52.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2k0020r7jd8x8vf0iy","content":"<p>postgresql 和mysql 对比</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">PostgreSQL</th>\n<th align=\"left\">MySQL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">数据类型</td>\n<td align=\"left\">支持复杂的数据类型，如数组，多维数组，对象，XML</td>\n<td align=\"left\">支持常见的数据类型，如数字，字符串，日期等</td>\n</tr>\n<tr>\n<td align=\"left\">事务支持</td>\n<td align=\"left\">支持ACID事务</td>\n<td align=\"left\">支持ACID事务</td>\n</tr>\n<tr>\n<td align=\"left\">存储过程</td>\n<td align=\"left\">支持存储过程</td>\n<td align=\"left\">支持存储过程</td>\n</tr>\n<tr>\n<td align=\"left\">视图</td>\n<td align=\"left\">支持视图</td>\n<td align=\"left\">支持视图</td>\n</tr>\n<tr>\n<td align=\"left\">触发器</td>\n<td align=\"left\">支持触发器</td>\n<td align=\"left\">支持触发器</td>\n</tr>\n<tr>\n<td align=\"left\">索引</td>\n<td align=\"left\">支持多种索引，如B树，哈希，GIST，GiST</td>\n<td align=\"left\">支持B树索引</td>\n</tr>\n<tr>\n<td align=\"left\">性能</td>\n<td align=\"left\">高性能</td>\n<td align=\"left\">中等性能</td>\n</tr>\n<tr>\n<td align=\"left\">安全性</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n</tr>\n<tr>\n<td align=\"left\">可移植性</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n</tr>\n<tr>\n<td align=\"left\">开源</td>\n<td align=\"left\">开源</td>\n<td align=\"left\">非开源</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"length":306,"excerpt":"","more":"<p>postgresql 和mysql 对比</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">PostgreSQL</th>\n<th align=\"left\">MySQL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">数据类型</td>\n<td align=\"left\">支持复杂的数据类型，如数组，多维数组，对象，XML</td>\n<td align=\"left\">支持常见的数据类型，如数字，字符串，日期等</td>\n</tr>\n<tr>\n<td align=\"left\">事务支持</td>\n<td align=\"left\">支持ACID事务</td>\n<td align=\"left\">支持ACID事务</td>\n</tr>\n<tr>\n<td align=\"left\">存储过程</td>\n<td align=\"left\">支持存储过程</td>\n<td align=\"left\">支持存储过程</td>\n</tr>\n<tr>\n<td align=\"left\">视图</td>\n<td align=\"left\">支持视图</td>\n<td align=\"left\">支持视图</td>\n</tr>\n<tr>\n<td align=\"left\">触发器</td>\n<td align=\"left\">支持触发器</td>\n<td align=\"left\">支持触发器</td>\n</tr>\n<tr>\n<td align=\"left\">索引</td>\n<td align=\"left\">支持多种索引，如B树，哈希，GIST，GiST</td>\n<td align=\"left\">支持B树索引</td>\n</tr>\n<tr>\n<td align=\"left\">性能</td>\n<td align=\"left\">高性能</td>\n<td align=\"left\">中等性能</td>\n</tr>\n<tr>\n<td align=\"left\">安全性</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n</tr>\n<tr>\n<td align=\"left\">可移植性</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n</tr>\n<tr>\n<td align=\"left\">开源</td>\n<td align=\"left\">开源</td>\n<td align=\"left\">非开源</td>\n</tr>\n</tbody></table>\n"},{"title":"你真的会用reids吗？","date":"2020-12-18T14:29:34.000Z","_content":"# 你真的会用redis吗？\n\n\n什么时候用redis呢?\n## 缓存\n\n缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。\n\n## 排行榜\n\n很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 \n\n\n## 计数器\n什么是计数器？\n电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。\n\nredis提供的incr命令来实现计数器，内存操作性能非常好。\n\n非常适用于这种场景。\n\n## 分布式会话\n\n集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。\n\n## 分布式锁\n\n\n\n很多互联网技术中都实现了 分布式技术。\n\n分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。\n\n并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。\n\n我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。\n\n## 社交网络\n\n点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 \n\nredis提供的哈希、集合等数据结构能很方便的实现这些功能\n\n## 最新列表\n\nLpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可\n\n## 消息系统\n\nMQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。\n\n\n\n\n\n","source":"_posts/redisabout.md","raw":"---\ntitle: 你真的会用reids吗？\ndate: 2020-12-18 22:29:34\ntags: [redis，缓存] \n---\n# 你真的会用redis吗？\n\n\n什么时候用redis呢?\n## 缓存\n\n缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。\n\n## 排行榜\n\n很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 \n\n\n## 计数器\n什么是计数器？\n电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。\n\nredis提供的incr命令来实现计数器，内存操作性能非常好。\n\n非常适用于这种场景。\n\n## 分布式会话\n\n集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。\n\n## 分布式锁\n\n\n\n很多互联网技术中都实现了 分布式技术。\n\n分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。\n\n并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。\n\n我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。\n\n## 社交网络\n\n点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 \n\nredis提供的哈希、集合等数据结构能很方便的实现这些功能\n\n## 最新列表\n\nLpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可\n\n## 消息系统\n\nMQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。\n\n\n\n\n\n","slug":"redisabout","published":1,"updated":"2023-03-23T07:48:47.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2l0021r7jd551n6dhz","content":"<h1 id=\"你真的会用redis吗？\"><a href=\"#你真的会用redis吗？\" class=\"headerlink\" title=\"你真的会用redis吗？\"></a>你真的会用redis吗？</h1><p>什么时候用redis呢?</p>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><p>缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。</p>\n<h2 id=\"排行榜\"><a href=\"#排行榜\" class=\"headerlink\" title=\"排行榜\"></a>排行榜</h2><p>很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 </p>\n<h2 id=\"计数器\"><a href=\"#计数器\" class=\"headerlink\" title=\"计数器\"></a>计数器</h2><p>什么是计数器？<br>电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。</p>\n<p>redis提供的incr命令来实现计数器，内存操作性能非常好。</p>\n<p>非常适用于这种场景。</p>\n<h2 id=\"分布式会话\"><a href=\"#分布式会话\" class=\"headerlink\" title=\"分布式会话\"></a>分布式会话</h2><p>集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。</p>\n<h2 id=\"分布式锁\"><a href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"></a>分布式锁</h2><p>很多互联网技术中都实现了 分布式技术。</p>\n<p>分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。</p>\n<p>并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。</p>\n<p>我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。</p>\n<h2 id=\"社交网络\"><a href=\"#社交网络\" class=\"headerlink\" title=\"社交网络\"></a>社交网络</h2><p>点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 </p>\n<p>redis提供的哈希、集合等数据结构能很方便的实现这些功能</p>\n<h2 id=\"最新列表\"><a href=\"#最新列表\" class=\"headerlink\" title=\"最新列表\"></a>最新列表</h2><p>Lpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可</p>\n<h2 id=\"消息系统\"><a href=\"#消息系统\" class=\"headerlink\" title=\"消息系统\"></a>消息系统</h2><p>MQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。</p>\n","site":{"data":{}},"length":789,"excerpt":"","more":"<h1 id=\"你真的会用redis吗？\"><a href=\"#你真的会用redis吗？\" class=\"headerlink\" title=\"你真的会用redis吗？\"></a>你真的会用redis吗？</h1><p>什么时候用redis呢?</p>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><p>缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。</p>\n<h2 id=\"排行榜\"><a href=\"#排行榜\" class=\"headerlink\" title=\"排行榜\"></a>排行榜</h2><p>很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 </p>\n<h2 id=\"计数器\"><a href=\"#计数器\" class=\"headerlink\" title=\"计数器\"></a>计数器</h2><p>什么是计数器？<br>电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。</p>\n<p>redis提供的incr命令来实现计数器，内存操作性能非常好。</p>\n<p>非常适用于这种场景。</p>\n<h2 id=\"分布式会话\"><a href=\"#分布式会话\" class=\"headerlink\" title=\"分布式会话\"></a>分布式会话</h2><p>集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。</p>\n<h2 id=\"分布式锁\"><a href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"></a>分布式锁</h2><p>很多互联网技术中都实现了 分布式技术。</p>\n<p>分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。</p>\n<p>并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。</p>\n<p>我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。</p>\n<h2 id=\"社交网络\"><a href=\"#社交网络\" class=\"headerlink\" title=\"社交网络\"></a>社交网络</h2><p>点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 </p>\n<p>redis提供的哈希、集合等数据结构能很方便的实现这些功能</p>\n<h2 id=\"最新列表\"><a href=\"#最新列表\" class=\"headerlink\" title=\"最新列表\"></a>最新列表</h2><p>Lpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可</p>\n<h2 id=\"消息系统\"><a href=\"#消息系统\" class=\"headerlink\" title=\"消息系统\"></a>消息系统</h2><p>MQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。</p>\n"},{"title":"重启","date":"2023-02-17T00:55:00.000Z","_content":"人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。\n\n首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。\n\n其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。\n\n第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。\n\n最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。\n\n总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。","source":"_posts/restart.md","raw":"---\ntitle: 重启\ndate: 2023-02-17 08:55:00\ntags:\n---\n人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。\n\n首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。\n\n其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。\n\n第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。\n\n最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。\n\n总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。","slug":"restart","published":1,"updated":"2023-03-23T07:48:47.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2m0023r7jd7pwz1c4y","content":"<p>人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。</p>\n<p>首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。</p>\n<p>其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。</p>\n<p>第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。</p>\n<p>最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。</p>\n<p>总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。</p>\n","site":{"data":{}},"length":639,"excerpt":"","more":"<p>人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。</p>\n<p>首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。</p>\n<p>其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。</p>\n<p>第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。</p>\n<p>最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。</p>\n<p>总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。</p>\n"},{"title":"java 自旋锁 SpinLock","date":"2023-02-25T04:17:26.000Z","_content":"## 含义\n线程等待加锁时，**不会阻塞**，**不会进入等待状态**，**而是保持运行状态**。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。\n\n## 优势\n- 避免死锁\n自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；\n- 提高性能\n 减少上下文切换次数,提高效率.\n\n ## 缺点\n\n- 在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；\n\n- 不适合需要长时间等待的任务或线程；\n- 不适合大量线程等待的场景。\n\n## 适用场景\n- 等待时间比较短的任务中；\n- 线程数量不太多的应用中；\n- 当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。\n\n## java 实现\n\n```\npublic class SpinkLock {\n    \n    // 是否占用的标志\n    private AtomicBoolean occupied = new AtomicBoolean(false);\n\n    public void lock() {\n        // 使用自旋锁\n        while (occupied.getAndSet(true)) {\n        }\n    }\n\n    public void unlock() {\n        occupied.set(false);\n    }\n}\n```","source":"_posts/spinlock.md","raw":"---\ntitle:  java 自旋锁 SpinLock\ndate: 2023-02-25 12:17:26\ntags: [并发编程,多线程]\ncategories: 技术\n---\n## 含义\n线程等待加锁时，**不会阻塞**，**不会进入等待状态**，**而是保持运行状态**。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。\n\n## 优势\n- 避免死锁\n自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；\n- 提高性能\n 减少上下文切换次数,提高效率.\n\n ## 缺点\n\n- 在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；\n\n- 不适合需要长时间等待的任务或线程；\n- 不适合大量线程等待的场景。\n\n## 适用场景\n- 等待时间比较短的任务中；\n- 线程数量不太多的应用中；\n- 当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。\n\n## java 实现\n\n```\npublic class SpinkLock {\n    \n    // 是否占用的标志\n    private AtomicBoolean occupied = new AtomicBoolean(false);\n\n    public void lock() {\n        // 使用自旋锁\n        while (occupied.getAndSet(true)) {\n        }\n    }\n\n    public void unlock() {\n        occupied.set(false);\n    }\n}\n```","slug":"spinlock","published":1,"updated":"2023-02-26T09:23:16.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2n0024r7jdfe4td68i","content":"<h2 id=\"含义\"><a href=\"#含义\" class=\"headerlink\" title=\"含义\"></a>含义</h2><p>线程等待加锁时，<strong>不会阻塞</strong>，<strong>不会进入等待状态</strong>，<strong>而是保持运行状态</strong>。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p>避免死锁<br>自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；</p>\n</li>\n<li><p>提高性能<br>减少上下文切换次数,提高效率.</p>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2></li>\n<li><p>在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；</p>\n</li>\n<li><p>不适合需要长时间等待的任务或线程；</p>\n</li>\n<li><p>不适合大量线程等待的场景。</p>\n</li>\n</ul>\n<h2 id=\"适用场景\"><a href=\"#适用场景\" class=\"headerlink\" title=\"适用场景\"></a>适用场景</h2><ul>\n<li>等待时间比较短的任务中；</li>\n<li>线程数量不太多的应用中；</li>\n<li>当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。</li>\n</ul>\n<h2 id=\"java-实现\"><a href=\"#java-实现\" class=\"headerlink\" title=\"java 实现\"></a>java 实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SpinkLock &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;&#x2F; 是否占用的标志</span><br><span class=\"line\">    private AtomicBoolean occupied &#x3D; new AtomicBoolean(false);</span><br><span class=\"line\"></span><br><span class=\"line\">    public void lock() &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 使用自旋锁</span><br><span class=\"line\">        while (occupied.getAndSet(true)) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void unlock() &#123;</span><br><span class=\"line\">        occupied.set(false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":540,"excerpt":"","more":"<h2 id=\"含义\"><a href=\"#含义\" class=\"headerlink\" title=\"含义\"></a>含义</h2><p>线程等待加锁时，<strong>不会阻塞</strong>，<strong>不会进入等待状态</strong>，<strong>而是保持运行状态</strong>。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p>避免死锁<br>自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；</p>\n</li>\n<li><p>提高性能<br>减少上下文切换次数,提高效率.</p>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2></li>\n<li><p>在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；</p>\n</li>\n<li><p>不适合需要长时间等待的任务或线程；</p>\n</li>\n<li><p>不适合大量线程等待的场景。</p>\n</li>\n</ul>\n<h2 id=\"适用场景\"><a href=\"#适用场景\" class=\"headerlink\" title=\"适用场景\"></a>适用场景</h2><ul>\n<li>等待时间比较短的任务中；</li>\n<li>线程数量不太多的应用中；</li>\n<li>当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。</li>\n</ul>\n<h2 id=\"java-实现\"><a href=\"#java-实现\" class=\"headerlink\" title=\"java 实现\"></a>java 实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SpinkLock &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;&#x2F; 是否占用的标志</span><br><span class=\"line\">    private AtomicBoolean occupied &#x3D; new AtomicBoolean(false);</span><br><span class=\"line\"></span><br><span class=\"line\">    public void lock() &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 使用自旋锁</span><br><span class=\"line\">        while (occupied.getAndSet(true)) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void unlock() &#123;</span><br><span class=\"line\">        occupied.set(false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"springboot-docker-demo","date":"2023-01-05T06:21:01.000Z","_content":"\n docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","source":"_posts/springboot-docker-demo.md","raw":"---\ntitle: springboot-docker-demo\ndate: 2023-01-05 14:21:01\ntags: docker \n---\n\n docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","slug":"springboot-docker-demo","published":1,"updated":"2023-03-23T07:48:47.464Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2p0027r7jd7teebyo8","content":"<p> docker run springboot</p>\n<h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n","site":{"data":{}},"length":1346,"excerpt":"","more":"<p> docker run springboot</p>\n<h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n"},{"title":"springboot-docker","date":"2023-01-07T07:30:35.000Z","_content":"# docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","source":"_posts/springboot-docker.md","raw":"---\ntitle: springboot-docker\ndate: 2023-01-07 15:30:35\ntags: docker\n---\n# docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","slug":"springboot-docker","published":1,"updated":"2023-02-16T15:20:50.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2s002ar7jddyv13ope","content":"<h1 id=\"docker-run-springboot\"><a href=\"#docker-run-springboot\" class=\"headerlink\" title=\"docker run springboot\"></a>docker run springboot</h1><h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n","site":{"data":{}},"length":1346,"excerpt":"","more":"<h1 id=\"docker-run-springboot\"><a href=\"#docker-run-springboot\" class=\"headerlink\" title=\"docker run springboot\"></a>docker run springboot</h1><h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n"},{"title":"SpringBoot 集成 OpenAPI","date":"2023-03-07T02:17:38.000Z","toc":true,"_content":"## 1. 项目介绍\n本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。\n\n## 版本信息\n\n- jdk版本：openjdk19\n- springboot版本：3.0.4.RELEASE\n- springdoc版本：2.0.2\n\n## 简单步骤\n\n\n### 添加依赖\n    \n```xml\n<dependency>\n  <groupId>org.springdoc</groupId>\n  <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n  <version>2.0.2</version>\n</dependency>\n\n```\n\n\n\n### 编写controller\n\n```\n @Operation(summary = \"Get specific user object by it's id.\")\n    @GetMapping(\"/users/{id}\")\n    public User user(@Parameter(description = \"id of the user.\") @PathVariable(\"id\") long id) {\n\n        User user = new User();\n        user.setName(\"xxx\");\n        return user;\n    }\n```\n使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.\n### 访问地址:\n默认地址\n\n```\n# swagger-ui custom path\nspringdoc.swagger-ui.path=/swagger-ui.html\n\n```\n\n直接访问\n`http://localhost:8080/swagger-ui/index.html `效果如下:\n\n![image](https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png)\n","source":"_posts/springdoc.md","raw":"---\ntitle: SpringBoot 集成 OpenAPI\ndate: 2023-03-07 10:17:38\ntags: [openapi,swagger3]\ncategories: 技术\ntoc: true\n---\n## 1. 项目介绍\n本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。\n\n## 版本信息\n\n- jdk版本：openjdk19\n- springboot版本：3.0.4.RELEASE\n- springdoc版本：2.0.2\n\n## 简单步骤\n\n\n### 添加依赖\n    \n```xml\n<dependency>\n  <groupId>org.springdoc</groupId>\n  <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n  <version>2.0.2</version>\n</dependency>\n\n```\n\n\n\n### 编写controller\n\n```\n @Operation(summary = \"Get specific user object by it's id.\")\n    @GetMapping(\"/users/{id}\")\n    public User user(@Parameter(description = \"id of the user.\") @PathVariable(\"id\") long id) {\n\n        User user = new User();\n        user.setName(\"xxx\");\n        return user;\n    }\n```\n使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.\n### 访问地址:\n默认地址\n\n```\n# swagger-ui custom path\nspringdoc.swagger-ui.path=/swagger-ui.html\n\n```\n\n直接访问\n`http://localhost:8080/swagger-ui/index.html `效果如下:\n\n![image](https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png)\n","slug":"springdoc","published":1,"updated":"2023-03-07T02:22:31.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2u002dr7jd2zal9965","content":"<h2 id=\"1-项目介绍\"><a href=\"#1-项目介绍\" class=\"headerlink\" title=\"1. 项目介绍\"></a>1. 项目介绍</h2><p>本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。</p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><ul>\n<li>jdk版本：openjdk19</li>\n<li>springboot版本：3.0.4.RELEASE</li>\n<li>springdoc版本：2.0.2</li>\n</ul>\n<h2 id=\"简单步骤\"><a href=\"#简单步骤\" class=\"headerlink\" title=\"简单步骤\"></a>简单步骤</h2><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springdoc<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"编写controller\"><a href=\"#编写controller\" class=\"headerlink\" title=\"编写controller\"></a>编写controller</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Operation(summary &#x3D; &quot;Get specific user object by it&#39;s id.&quot;)</span><br><span class=\"line\">   @GetMapping(&quot;&#x2F;users&#x2F;&#123;id&#125;&quot;)</span><br><span class=\"line\">   public User user(@Parameter(description &#x3D; &quot;id of the user.&quot;) @PathVariable(&quot;id&quot;) long id) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       User user &#x3D; new User();</span><br><span class=\"line\">       user.setName(&quot;xxx&quot;);</span><br><span class=\"line\">       return user;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.</p>\n<h3 id=\"访问地址\"><a href=\"#访问地址\" class=\"headerlink\" title=\"访问地址:\"></a>访问地址:</h3><p>默认地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># swagger-ui custom path</span><br><span class=\"line\">springdoc.swagger-ui.path&#x3D;&#x2F;swagger-ui.html</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接访问<br><code>http://localhost:8080/swagger-ui/index.html </code>效果如下:</p>\n<p><img src=\"https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png\" alt=\"image\"></p>\n","site":{"data":{}},"length":860,"excerpt":"","more":"<h2 id=\"1-项目介绍\"><a href=\"#1-项目介绍\" class=\"headerlink\" title=\"1. 项目介绍\"></a>1. 项目介绍</h2><p>本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。</p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><ul>\n<li>jdk版本：openjdk19</li>\n<li>springboot版本：3.0.4.RELEASE</li>\n<li>springdoc版本：2.0.2</li>\n</ul>\n<h2 id=\"简单步骤\"><a href=\"#简单步骤\" class=\"headerlink\" title=\"简单步骤\"></a>简单步骤</h2><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springdoc<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"编写controller\"><a href=\"#编写controller\" class=\"headerlink\" title=\"编写controller\"></a>编写controller</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Operation(summary &#x3D; &quot;Get specific user object by it&#39;s id.&quot;)</span><br><span class=\"line\">   @GetMapping(&quot;&#x2F;users&#x2F;&#123;id&#125;&quot;)</span><br><span class=\"line\">   public User user(@Parameter(description &#x3D; &quot;id of the user.&quot;) @PathVariable(&quot;id&quot;) long id) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       User user &#x3D; new User();</span><br><span class=\"line\">       user.setName(&quot;xxx&quot;);</span><br><span class=\"line\">       return user;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.</p>\n<h3 id=\"访问地址\"><a href=\"#访问地址\" class=\"headerlink\" title=\"访问地址:\"></a>访问地址:</h3><p>默认地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># swagger-ui custom path</span><br><span class=\"line\">springdoc.swagger-ui.path&#x3D;&#x2F;swagger-ui.html</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接访问<br><code>http://localhost:8080/swagger-ui/index.html </code>效果如下:</p>\n<p><img src=\"https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png\" alt=\"image\"></p>\n"},{"title":"springmvcvswebflux","date":"2023-01-06T07:52:44.000Z","_content":"\nSpring WebFlux 和 Spring MVC 对比分析\n\n什么是 Spring WebFlux\n\nSpring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.\n\nSpring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。\n\n\n\nSpring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.\n\nSpring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。\n\nWebFlux 的优势&提升性能?\n\n\n\nReactive and non-blocking generally do not make applications run faster.\n\nWebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。\n\nWebFlux 应用场景\n\nPS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。\n\n\n\n\n\n\n\n选 WebFlux 还是 Spring MVC?\n\nWebFlux 不是 Spring MVC 的替代方案！\n\n\n\n首先是吞吐量\n\n随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示\n\n\n\n吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。\n","source":"_posts/springmvcvswebflux.md","raw":"---\ntitle: springmvcvswebflux\ndate: 2023-01-06 15:52:44\ntags: [springmvc,weblux]\n---\n\nSpring WebFlux 和 Spring MVC 对比分析\n\n什么是 Spring WebFlux\n\nSpring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.\n\nSpring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。\n\n\n\nSpring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.\n\nSpring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。\n\nWebFlux 的优势&提升性能?\n\n\n\nReactive and non-blocking generally do not make applications run faster.\n\nWebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。\n\nWebFlux 应用场景\n\nPS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。\n\n\n\n\n\n\n\n选 WebFlux 还是 Spring MVC?\n\nWebFlux 不是 Spring MVC 的替代方案！\n\n\n\n首先是吞吐量\n\n随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示\n\n\n\n吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。\n","slug":"springmvcvswebflux","published":1,"updated":"2023-03-23T07:48:47.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2w002gr7jd6cpcdwqy","content":"<p>Spring WebFlux 和 Spring MVC 对比分析</p>\n<p>什么是 Spring WebFlux</p>\n<p>Spring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.</p>\n<p>Spring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。</p>\n<p>Spring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.</p>\n<p>Spring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。</p>\n<p>WebFlux 的优势&amp;提升性能?</p>\n<p>Reactive and non-blocking generally do not make applications run faster.</p>\n<p>WebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。</p>\n<p>WebFlux 应用场景</p>\n<p>PS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。</p>\n<p>选 WebFlux 还是 Spring MVC?</p>\n<p>WebFlux 不是 Spring MVC 的替代方案！</p>\n<p>首先是吞吐量</p>\n<p>随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示</p>\n<p>吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。</p>\n","site":{"data":{}},"length":869,"excerpt":"","more":"<p>Spring WebFlux 和 Spring MVC 对比分析</p>\n<p>什么是 Spring WebFlux</p>\n<p>Spring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.</p>\n<p>Spring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。</p>\n<p>Spring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.</p>\n<p>Spring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。</p>\n<p>WebFlux 的优势&amp;提升性能?</p>\n<p>Reactive and non-blocking generally do not make applications run faster.</p>\n<p>WebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。</p>\n<p>WebFlux 应用场景</p>\n<p>PS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。</p>\n<p>选 WebFlux 还是 Spring MVC?</p>\n<p>WebFlux 不是 Spring MVC 的替代方案！</p>\n<p>首先是吞吐量</p>\n<p>随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示</p>\n<p>吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。</p>\n"},{"title":"从难点中学习","date":"2023-02-18T06:28:37.000Z","_content":"## 先了解技术难点\n先分析难点,基本会从以下开始:\n\n有限的时间；\n复杂的环境；\n知识的盲区.\n解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。\n\n## 寻找解决方案\n可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。\n向他人请教,这个会涉及到另一个问题 **如何问问题?**\n## 如何问问题?\n1. 明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。\n\n2. 提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。\n\n3. 尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。\n\n4. 使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。\n\n5. 注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。\n\n## 实践\n实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。\n\n## 总结\n学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!","source":"_posts/studyformdiffrence.md","raw":"---\ntitle: 从难点中学习\ndate: 2023-02-18 14:28:37\ntags: study\ncategories: study\n---\n## 先了解技术难点\n先分析难点,基本会从以下开始:\n\n有限的时间；\n复杂的环境；\n知识的盲区.\n解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。\n\n## 寻找解决方案\n可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。\n向他人请教,这个会涉及到另一个问题 **如何问问题?**\n## 如何问问题?\n1. 明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。\n\n2. 提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。\n\n3. 尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。\n\n4. 使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。\n\n5. 注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。\n\n## 实践\n实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。\n\n## 总结\n学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!","slug":"studyformdiffrence","published":1,"updated":"2023-02-18T12:22:33.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2x002jr7jdg7jh6xyv","content":"<h2 id=\"先了解技术难点\"><a href=\"#先了解技术难点\" class=\"headerlink\" title=\"先了解技术难点\"></a>先了解技术难点</h2><p>先分析难点,基本会从以下开始:</p>\n<p>有限的时间；<br>复杂的环境；<br>知识的盲区.<br>解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。</p>\n<h2 id=\"寻找解决方案\"><a href=\"#寻找解决方案\" class=\"headerlink\" title=\"寻找解决方案\"></a>寻找解决方案</h2><p>可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。<br>向他人请教,这个会涉及到另一个问题 <strong>如何问问题?</strong></p>\n<h2 id=\"如何问问题\"><a href=\"#如何问问题\" class=\"headerlink\" title=\"如何问问题?\"></a>如何问问题?</h2><ol>\n<li><p>明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。</p>\n</li>\n<li><p>提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。</p>\n</li>\n<li><p>尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。</p>\n</li>\n<li><p>使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。</p>\n</li>\n<li><p>注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。</p>\n</li>\n</ol>\n<h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><p>实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!</p>\n","site":{"data":{}},"length":473,"excerpt":"","more":"<h2 id=\"先了解技术难点\"><a href=\"#先了解技术难点\" class=\"headerlink\" title=\"先了解技术难点\"></a>先了解技术难点</h2><p>先分析难点,基本会从以下开始:</p>\n<p>有限的时间；<br>复杂的环境；<br>知识的盲区.<br>解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。</p>\n<h2 id=\"寻找解决方案\"><a href=\"#寻找解决方案\" class=\"headerlink\" title=\"寻找解决方案\"></a>寻找解决方案</h2><p>可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。<br>向他人请教,这个会涉及到另一个问题 <strong>如何问问题?</strong></p>\n<h2 id=\"如何问问题\"><a href=\"#如何问问题\" class=\"headerlink\" title=\"如何问问题?\"></a>如何问问题?</h2><ol>\n<li><p>明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。</p>\n</li>\n<li><p>提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。</p>\n</li>\n<li><p>尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。</p>\n</li>\n<li><p>使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。</p>\n</li>\n<li><p>注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。</p>\n</li>\n</ol>\n<h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><p>实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!</p>\n"},{"title":"学习是在学什么","date":"2023-02-24T00:55:09.000Z","_content":"我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?\n\n## 知识改变命运\n有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?\n\n## 为了看清世界\n我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.\n最终都将是我们成为更好的自己.\n\n学习能让我们看清世界,认识世界,了解世界.\n学习能让我们认识自我,看清自我.\n学习是在学什么?\n## 为了解决问题\n其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.\n起码我们假死的时候,自己可以杀掉进程,重新打开软件.\n所以学习的最终目的就是解决问题,也就是产品上 解决bug.\n人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.\n过程最重要,一路上解决各种问题的过程,才是最珍贵的.\n","source":"_posts/studywhat.md","raw":"---\ntitle: 学习是在学什么\ndate: 2023-02-24 08:55:09\ntags: 学习\ncategories: study\n---\n我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?\n\n## 知识改变命运\n有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?\n\n## 为了看清世界\n我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.\n最终都将是我们成为更好的自己.\n\n学习能让我们看清世界,认识世界,了解世界.\n学习能让我们认识自我,看清自我.\n学习是在学什么?\n## 为了解决问题\n其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.\n起码我们假死的时候,自己可以杀掉进程,重新打开软件.\n所以学习的最终目的就是解决问题,也就是产品上 解决bug.\n人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.\n过程最重要,一路上解决各种问题的过程,才是最珍贵的.\n","slug":"studywhat","published":1,"updated":"2023-02-24T04:56:04.280Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie2z002lr7jddp7b8t0p","content":"<p>我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?</p>\n<h2 id=\"知识改变命运\"><a href=\"#知识改变命运\" class=\"headerlink\" title=\"知识改变命运\"></a>知识改变命运</h2><p>有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?</p>\n<h2 id=\"为了看清世界\"><a href=\"#为了看清世界\" class=\"headerlink\" title=\"为了看清世界\"></a>为了看清世界</h2><p>我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.<br>最终都将是我们成为更好的自己.</p>\n<p>学习能让我们看清世界,认识世界,了解世界.<br>学习能让我们认识自我,看清自我.<br>学习是在学什么?</p>\n<h2 id=\"为了解决问题\"><a href=\"#为了解决问题\" class=\"headerlink\" title=\"为了解决问题\"></a>为了解决问题</h2><p>其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.<br>起码我们假死的时候,自己可以杀掉进程,重新打开软件.<br>所以学习的最终目的就是解决问题,也就是产品上 解决bug.<br>人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.<br>过程最重要,一路上解决各种问题的过程,才是最珍贵的.</p>\n","site":{"data":{}},"length":475,"excerpt":"","more":"<p>我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?</p>\n<h2 id=\"知识改变命运\"><a href=\"#知识改变命运\" class=\"headerlink\" title=\"知识改变命运\"></a>知识改变命运</h2><p>有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?</p>\n<h2 id=\"为了看清世界\"><a href=\"#为了看清世界\" class=\"headerlink\" title=\"为了看清世界\"></a>为了看清世界</h2><p>我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.<br>最终都将是我们成为更好的自己.</p>\n<p>学习能让我们看清世界,认识世界,了解世界.<br>学习能让我们认识自我,看清自我.<br>学习是在学什么?</p>\n<h2 id=\"为了解决问题\"><a href=\"#为了解决问题\" class=\"headerlink\" title=\"为了解决问题\"></a>为了解决问题</h2><p>其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.<br>起码我们假死的时候,自己可以杀掉进程,重新打开软件.<br>所以学习的最终目的就是解决问题,也就是产品上 解决bug.<br>人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.<br>过程最重要,一路上解决各种问题的过程,才是最珍贵的.</p>\n"},{"title":"我的规划","_content":"\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n","source":"_posts/target.md","raw":"---\ntitle: 我的规划\ntags: [hexo,性能测试]\ncategories: 工作\n# toc: true\n---\n\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n","slug":"target","published":1,"date":"2023-02-16T15:20:50.706Z","updated":"2023-02-17T03:19:40.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie31002pr7jd37t555eh","content":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n","site":{"data":{}},"length":67,"excerpt":"","more":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n"},{"title":"hexo-generator-search","toc":true,"_content":"\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","source":"_posts/test.md","raw":"---\ntitle: hexo-generator-search\ntags: [hexo,性能测试]\ncategories: 工具\ntoc: true\n---\n\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","slug":"test","published":1,"date":"2023-03-23T07:48:47.465Z","updated":"2023-03-23T07:48:47.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie32002rr7jd9214e794","content":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":406,"excerpt":"","more":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>"},{"title":"创建1000w测试数据","date":"2023-02-21T09:25:38.000Z","_content":"假如需要创建1000w 测试数据的话,可以尝试使用存储过程.\n\n```\nCREATE TABLE `data` \n(\n  `id`         bigint(20) NOT NULL      AUTO_INCREMENT,\n  `datetime`   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,\n  `channel`    int(11)                  DEFAULT NULL,\n  `value`      float                    DEFAULT NULL,\n\n  PRIMARY KEY (`id`)\n);\n\n\nCREATE PROCEDURE generate_data(IN n int)\nBEGIN\n  DECLARE i INT DEFAULT 0;\n  WHILE i < n DO\n    INSERT INTO `data` (`datetime`,`value`,`channel`) VALUES (\n      FROM_UNIXTIME(UNIX_TIMESTAMP('2014-01-01 01:00:00')+FLOOR(RAND()*31536000)),\n      ROUND(RAND()*100,2),\n      1\n    );\n    SET i = i + 1;\n  END WHILE;\n\n  CALL generate_data(10000);\n \n```\n\n删除存储过程执行如下:\n```\nDROP PROCEDURE generate_data;\n```\n\n\n","source":"_posts/testdatas.md","raw":"---\ntitle: 创建1000w测试数据\ndate: 2023-02-21 17:25:38\ntags: 测试\ncategories: 技术\n---\n假如需要创建1000w 测试数据的话,可以尝试使用存储过程.\n\n```\nCREATE TABLE `data` \n(\n  `id`         bigint(20) NOT NULL      AUTO_INCREMENT,\n  `datetime`   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,\n  `channel`    int(11)                  DEFAULT NULL,\n  `value`      float                    DEFAULT NULL,\n\n  PRIMARY KEY (`id`)\n);\n\n\nCREATE PROCEDURE generate_data(IN n int)\nBEGIN\n  DECLARE i INT DEFAULT 0;\n  WHILE i < n DO\n    INSERT INTO `data` (`datetime`,`value`,`channel`) VALUES (\n      FROM_UNIXTIME(UNIX_TIMESTAMP('2014-01-01 01:00:00')+FLOOR(RAND()*31536000)),\n      ROUND(RAND()*100,2),\n      1\n    );\n    SET i = i + 1;\n  END WHILE;\n\n  CALL generate_data(10000);\n \n```\n\n删除存储过程执行如下:\n```\nDROP PROCEDURE generate_data;\n```\n\n\n","slug":"testdatas","published":1,"updated":"2023-02-21T09:28:48.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie34002tr7jd2244h3yo","content":"<p>假如需要创建1000w 测试数据的话,可以尝试使用存储过程.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE &#96;data&#96; </span><br><span class=\"line\">(</span><br><span class=\"line\">  &#96;id&#96;         bigint(20) NOT NULL      AUTO_INCREMENT,</span><br><span class=\"line\">  &#96;datetime&#96;   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,</span><br><span class=\"line\">  &#96;channel&#96;    int(11)                  DEFAULT NULL,</span><br><span class=\"line\">  &#96;value&#96;      float                    DEFAULT NULL,</span><br><span class=\"line\"></span><br><span class=\"line\">  PRIMARY KEY (&#96;id&#96;)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">CREATE PROCEDURE generate_data(IN n int)</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">  DECLARE i INT DEFAULT 0;</span><br><span class=\"line\">  WHILE i &lt; n DO</span><br><span class=\"line\">    INSERT INTO &#96;data&#96; (&#96;datetime&#96;,&#96;value&#96;,&#96;channel&#96;) VALUES (</span><br><span class=\"line\">      FROM_UNIXTIME(UNIX_TIMESTAMP(&#39;2014-01-01 01:00:00&#39;)+FLOOR(RAND()*31536000)),</span><br><span class=\"line\">      ROUND(RAND()*100,2),</span><br><span class=\"line\">      1</span><br><span class=\"line\">    );</span><br><span class=\"line\">    SET i &#x3D; i + 1;</span><br><span class=\"line\">  END WHILE;</span><br><span class=\"line\"></span><br><span class=\"line\">  CALL generate_data(10000);</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>删除存储过程执行如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP PROCEDURE generate_data;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"length":642,"excerpt":"","more":"<p>假如需要创建1000w 测试数据的话,可以尝试使用存储过程.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE &#96;data&#96; </span><br><span class=\"line\">(</span><br><span class=\"line\">  &#96;id&#96;         bigint(20) NOT NULL      AUTO_INCREMENT,</span><br><span class=\"line\">  &#96;datetime&#96;   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,</span><br><span class=\"line\">  &#96;channel&#96;    int(11)                  DEFAULT NULL,</span><br><span class=\"line\">  &#96;value&#96;      float                    DEFAULT NULL,</span><br><span class=\"line\"></span><br><span class=\"line\">  PRIMARY KEY (&#96;id&#96;)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">CREATE PROCEDURE generate_data(IN n int)</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">  DECLARE i INT DEFAULT 0;</span><br><span class=\"line\">  WHILE i &lt; n DO</span><br><span class=\"line\">    INSERT INTO &#96;data&#96; (&#96;datetime&#96;,&#96;value&#96;,&#96;channel&#96;) VALUES (</span><br><span class=\"line\">      FROM_UNIXTIME(UNIX_TIMESTAMP(&#39;2014-01-01 01:00:00&#39;)+FLOOR(RAND()*31536000)),</span><br><span class=\"line\">      ROUND(RAND()*100,2),</span><br><span class=\"line\">      1</span><br><span class=\"line\">    );</span><br><span class=\"line\">    SET i &#x3D; i + 1;</span><br><span class=\"line\">  END WHILE;</span><br><span class=\"line\"></span><br><span class=\"line\">  CALL generate_data(10000);</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>删除存储过程执行如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP PROCEDURE generate_data;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"一些实用的 tips","date":"2023-02-28T02:55:36.000Z","_content":" 记录一些比较实用的 tips.\n ## Alfred\n mac 一定要用这个,好的工具都这里了.\n ## chatgpt \n 一些能那里直接用的答案.\n ## podcast\n 一些播客很有必要听一下.\n ","source":"_posts/tips.md","raw":"---\ntitle: 一些实用的 tips\ndate: 2023-02-28 10:55:36\ntags: tips\ncategories: tips\n---\n 记录一些比较实用的 tips.\n ## Alfred\n mac 一定要用这个,好的工具都这里了.\n ## chatgpt \n 一些能那里直接用的答案.\n ## podcast\n 一些播客很有必要听一下.\n ","slug":"tips","published":1,"updated":"2023-02-28T02:57:53.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie36002yr7jd7urxbi0t","content":"<p> 记录一些比较实用的 tips.</p>\n<h2 id=\"Alfred\"><a href=\"#Alfred\" class=\"headerlink\" title=\"Alfred\"></a>Alfred</h2><p> mac 一定要用这个,好的工具都这里了.</p>\n<h2 id=\"chatgpt\"><a href=\"#chatgpt\" class=\"headerlink\" title=\"chatgpt\"></a>chatgpt</h2><p> 一些能那里直接用的答案.</p>\n<h2 id=\"podcast\"><a href=\"#podcast\" class=\"headerlink\" title=\"podcast\"></a>podcast</h2><p> 一些播客很有必要听一下.</p>\n","site":{"data":{}},"length":77,"excerpt":"","more":"<p> 记录一些比较实用的 tips.</p>\n<h2 id=\"Alfred\"><a href=\"#Alfred\" class=\"headerlink\" title=\"Alfred\"></a>Alfred</h2><p> mac 一定要用这个,好的工具都这里了.</p>\n<h2 id=\"chatgpt\"><a href=\"#chatgpt\" class=\"headerlink\" title=\"chatgpt\"></a>chatgpt</h2><p> 一些能那里直接用的答案.</p>\n<h2 id=\"podcast\"><a href=\"#podcast\" class=\"headerlink\" title=\"podcast\"></a>podcast</h2><p> 一些播客很有必要听一下.</p>\n"},{"title":"两件小事","date":"2020-11-25T07:16:52.000Z","toc":true,"_content":"本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","source":"_posts/towthings.md","raw":"---\ntitle: 两件小事\ndate: 2020-11-25 15:16:52\ntags: [Grow up ,生活,100]\ntoc: true\n\n---\n本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","slug":"towthings","published":1,"updated":"2023-02-16T15:20:50.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie370031r7jdejs7cwqh","content":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n","site":{"data":{}},"length":306,"excerpt":"","more":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n"},{"title":"为什么禁用\"select * \"","date":"2023-02-22T05:54:33.000Z","_content":"SELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：\n\n不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。\n\n减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。\n\n查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。","source":"_posts/whynotstaet.md","raw":"---\ntitle: 为什么禁用\"select * \"\ndate: 2023-02-22 13:54:33\ntags: mysql\ncategories: 技术\n---\nSELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：\n\n不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。\n\n减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。\n\n查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。","slug":"whynotstaet","published":1,"updated":"2023-02-22T05:55:27.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie380033r7jd7vzn8aur","content":"<p>SELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：</p>\n<p>不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。</p>\n<p>减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。</p>\n<p>查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。</p>\n","site":{"data":{}},"length":279,"excerpt":"","more":"<p>SELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：</p>\n<p>不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。</p>\n<p>减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。</p>\n<p>查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。</p>\n"},{"title":"xxb-奥密克戎","date":"2023-01-06T07:47:17.000Z","_content":"\nXBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!\n依我看接下来疫情的走势，就冲这个名字大家一定能发大财！\n如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。\n所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！\n作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！\n记住，瞎哔哔是一种人生态度！","source":"_posts/xxb.md","raw":"---\ntitle: xxb-奥密克戎\ndate: 2023-01-06 15:47:17\ntags: 疫情 xbb 人间清醒\n---\n\nXBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!\n依我看接下来疫情的走势，就冲这个名字大家一定能发大财！\n如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。\n所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！\n作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！\n记住，瞎哔哔是一种人生态度！","slug":"xxb","published":1,"updated":"2023-03-23T07:48:47.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie3c0037r7jd8r7vfevc","content":"<p>XBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!<br>依我看接下来疫情的走势，就冲这个名字大家一定能发大财！<br>如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。<br>所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！<br>作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！<br>记住，瞎哔哔是一种人生态度！</p>\n","site":{"data":{}},"length":183,"excerpt":"","more":"<p>XBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!<br>依我看接下来疫情的走势，就冲这个名字大家一定能发大财！<br>如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。<br>所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！<br>作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！<br>记住，瞎哔哔是一种人生态度！</p>\n"},{"title":"分布式事务","date":"2020-12-05T07:12:55.000Z","_content":"\n\n\n# 分布式事务\n## 水电费dd\n### Seata","source":"_posts/分布式事务.md","raw":"---\ntitle: 分布式事务\ndate: 2020-12-05 15:12:55\ntags: [挣钱,内容]\n---\n\n\n\n# 分布式事务\n## 水电费dd\n### Seata","slug":"分布式事务","published":1,"updated":"2023-03-23T07:48:47.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie3e003ar7jda2rn6f10","content":"<h1 id=\"分布式事务\"><a href=\"#分布式事务\" class=\"headerlink\" title=\"分布式事务\"></a>分布式事务</h1><h2 id=\"水电费dd\"><a href=\"#水电费dd\" class=\"headerlink\" title=\"水电费dd\"></a>水电费dd</h2><h3 id=\"Seata\"><a href=\"#Seata\" class=\"headerlink\" title=\"Seata\"></a>Seata</h3>","site":{"data":{}},"length":15,"excerpt":"","more":"<h1 id=\"分布式事务\"><a href=\"#分布式事务\" class=\"headerlink\" title=\"分布式事务\"></a>分布式事务</h1><h2 id=\"水电费dd\"><a href=\"#水电费dd\" class=\"headerlink\" title=\"水电费dd\"></a>水电费dd</h2><h3 id=\"Seata\"><a href=\"#Seata\" class=\"headerlink\" title=\"Seata\"></a>Seata</h3>"},{"title":"我的规划","_content":"\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n\n\n\n\n\n\n\n\n\n\n![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)","source":"_posts/我的反思.md","raw":"---\ntitle: 我的规划\ntags: [hexo,性能测试]\ncategories: 工作\n# toc: true\n---\n\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n\n\n\n\n\n\n\n\n\n\n![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)","slug":"我的反思","published":1,"date":"2023-03-23T07:48:47.466Z","updated":"2023-03-23T07:48:47.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie3g003dr7jd7m21dvci","content":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n<p>![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)</p>\n","site":{"data":{}},"length":188,"excerpt":"","more":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n<p>![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)</p>\n"},{"title":"搬运内容挣钱怎么了","date":"2020-12-05T07:12:55.000Z","_content":"\n### 搬运赚钱是最简单的\n\n搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。\n\n这是抄袭吗？我只知道**它的内容在搜索引擎看来就是原创。**\n\n其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。\n\n![img](https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg)\n\n油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。\n\n但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。\n\n这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。\n\n比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。\n\n![img](https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg)\n\n以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。\n\n还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。\n\n另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。\n\n说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。\n\n![img](https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png)\n\n特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。\n\n当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。\n\n但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。\n\n### 让你们上来就写原创是非常不现实，但有捷径\n\n1、把国外的文章，翻译后，再用你理解的二次加工就OK了。\n\n2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。\n\n别觉得是我无耻，很多**十万、百万大号都是从模仿做起来的，算是行业潜规则了。**\n\n就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。\n\n就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，**如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。**\n\n其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。\n\n生意的本质就你不知道，**我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。**\n\n再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。\n\n最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。\n\n如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！\n\n接着**退出屏幕主页面，打开还没看完的电视剧、短视频。**\n\n互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。\n\n赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记**执行力才是最好的技巧**。\n\n最后说下如何把**风险规避到最小？**\n\n1、抄死人的作品。\n\n2、古代N年前的作品。\n\n3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。\n\n4、抄量级小、没啥影响力的个人创作者，比如我……\n\n就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。\n\n至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。\n\n","source":"_posts/搬运内容挣钱怎么了.md","raw":"---\ntitle: 搬运内容挣钱怎么了\ndate: 2020-12-05 15:12:55\ntags: [挣钱,内容]\n---\n\n### 搬运赚钱是最简单的\n\n搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。\n\n这是抄袭吗？我只知道**它的内容在搜索引擎看来就是原创。**\n\n其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。\n\n![img](https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg)\n\n油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。\n\n但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。\n\n这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。\n\n比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。\n\n![img](https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg)\n\n以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。\n\n还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。\n\n另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。\n\n说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。\n\n![img](https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png)\n\n特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。\n\n当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。\n\n但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。\n\n### 让你们上来就写原创是非常不现实，但有捷径\n\n1、把国外的文章，翻译后，再用你理解的二次加工就OK了。\n\n2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。\n\n别觉得是我无耻，很多**十万、百万大号都是从模仿做起来的，算是行业潜规则了。**\n\n就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。\n\n就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，**如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。**\n\n其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。\n\n生意的本质就你不知道，**我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。**\n\n再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。\n\n最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。\n\n如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！\n\n接着**退出屏幕主页面，打开还没看完的电视剧、短视频。**\n\n互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。\n\n赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记**执行力才是最好的技巧**。\n\n最后说下如何把**风险规避到最小？**\n\n1、抄死人的作品。\n\n2、古代N年前的作品。\n\n3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。\n\n4、抄量级小、没啥影响力的个人创作者，比如我……\n\n就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。\n\n至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。\n\n","slug":"搬运内容挣钱怎么了","published":1,"updated":"2023-03-23T07:48:47.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktie3h003hr7jdcph14xpi","content":"<h3 id=\"搬运赚钱是最简单的\"><a href=\"#搬运赚钱是最简单的\" class=\"headerlink\" title=\"搬运赚钱是最简单的\"></a>搬运赚钱是最简单的</h3><p>搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。</p>\n<p>这是抄袭吗？我只知道<strong>它的内容在搜索引擎看来就是原创。</strong></p>\n<p>其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg\" alt=\"img\"></p>\n<p>油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。</p>\n<p>但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。</p>\n<p>这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。</p>\n<p>比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg\" alt=\"img\"></p>\n<p>以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。</p>\n<p>还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。</p>\n<p>另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。</p>\n<p>说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。</p>\n<p><img src=\"https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png\" alt=\"img\"></p>\n<p>特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。</p>\n<p>当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。</p>\n<p>但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。</p>\n<h3 id=\"让你们上来就写原创是非常不现实，但有捷径\"><a href=\"#让你们上来就写原创是非常不现实，但有捷径\" class=\"headerlink\" title=\"让你们上来就写原创是非常不现实，但有捷径\"></a>让你们上来就写原创是非常不现实，但有捷径</h3><p>1、把国外的文章，翻译后，再用你理解的二次加工就OK了。</p>\n<p>2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。</p>\n<p>别觉得是我无耻，很多<strong>十万、百万大号都是从模仿做起来的，算是行业潜规则了。</strong></p>\n<p>就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。</p>\n<p>就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，<strong>如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。</strong></p>\n<p>其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。</p>\n<p>生意的本质就你不知道，<strong>我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。</strong></p>\n<p>再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。</p>\n<p>最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。</p>\n<p>如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！</p>\n<p>接着<strong>退出屏幕主页面，打开还没看完的电视剧、短视频。</strong></p>\n<p>互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。</p>\n<p>赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记<strong>执行力才是最好的技巧</strong>。</p>\n<p>最后说下如何把<strong>风险规避到最小？</strong></p>\n<p>1、抄死人的作品。</p>\n<p>2、古代N年前的作品。</p>\n<p>3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。</p>\n<p>4、抄量级小、没啥影响力的个人创作者，比如我……</p>\n<p>就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。</p>\n<p>至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。</p>\n","site":{"data":{}},"length":1688,"excerpt":"","more":"<h3 id=\"搬运赚钱是最简单的\"><a href=\"#搬运赚钱是最简单的\" class=\"headerlink\" title=\"搬运赚钱是最简单的\"></a>搬运赚钱是最简单的</h3><p>搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。</p>\n<p>这是抄袭吗？我只知道<strong>它的内容在搜索引擎看来就是原创。</strong></p>\n<p>其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg\" alt=\"img\"></p>\n<p>油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。</p>\n<p>但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。</p>\n<p>这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。</p>\n<p>比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg\" alt=\"img\"></p>\n<p>以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。</p>\n<p>还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。</p>\n<p>另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。</p>\n<p>说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。</p>\n<p><img src=\"https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png\" alt=\"img\"></p>\n<p>特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。</p>\n<p>当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。</p>\n<p>但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。</p>\n<h3 id=\"让你们上来就写原创是非常不现实，但有捷径\"><a href=\"#让你们上来就写原创是非常不现实，但有捷径\" class=\"headerlink\" title=\"让你们上来就写原创是非常不现实，但有捷径\"></a>让你们上来就写原创是非常不现实，但有捷径</h3><p>1、把国外的文章，翻译后，再用你理解的二次加工就OK了。</p>\n<p>2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。</p>\n<p>别觉得是我无耻，很多<strong>十万、百万大号都是从模仿做起来的，算是行业潜规则了。</strong></p>\n<p>就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。</p>\n<p>就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，<strong>如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。</strong></p>\n<p>其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。</p>\n<p>生意的本质就你不知道，<strong>我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。</strong></p>\n<p>再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。</p>\n<p>最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。</p>\n<p>如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！</p>\n<p>接着<strong>退出屏幕主页面，打开还没看完的电视剧、短视频。</strong></p>\n<p>互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。</p>\n<p>赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记<strong>执行力才是最好的技巧</strong>。</p>\n<p>最后说下如何把<strong>风险规避到最小？</strong></p>\n<p>1、抄死人的作品。</p>\n<p>2、古代N年前的作品。</p>\n<p>3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。</p>\n<p>4、抄量级小、没啥影响力的个人创作者，比如我……</p>\n<p>就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。</p>\n<p>至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clfktie1t000nr7jd6tqm5mi7","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie1x000vr7jd64ekdpx5"},{"post_id":"clfktie1m000gr7jd60pu31zc","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie20000zr7jddxq18yx5"},{"post_id":"clfktie1u000pr7jde29g0lwj","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie210012r7jd0bxnd6z3"},{"post_id":"clfktie1o000jr7jd1ftm7ud6","category_id":"clfktie1v000qr7jddiqm6qlt","_id":"clfktie230016r7jddxubets5"},{"post_id":"clfktie1x000ur7jda0xyaf1p","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie250019r7jddmr4dg9n"},{"post_id":"clfktie1r000lr7jdh7rgfjxm","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie27001cr7jd0e8n3cxo"},{"post_id":"clfktie210011r7jdet0z8i7d","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie29001fr7jd5rscbshs"},{"post_id":"clfktie240018r7jd76o57va7","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie2b001ir7jdcj57288g"},{"post_id":"clfktie1z000yr7jd7ioqcp4l","category_id":"clfktie220014r7jd8eth3lxq","_id":"clfktie2d001mr7jd06sebr5b"},{"post_id":"clfktie26001ar7jd0sic12rd","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie2f001pr7jd6rfid9q7"},{"post_id":"clfktie220015r7jdfw394b5t","category_id":"clfktie27001br7jdhwfh4n0j","_id":"clfktie2g001sr7jd873tgses"},{"post_id":"clfktie2k0020r7jd8x8vf0iy","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie2o0025r7jd63gp3s0g"},{"post_id":"clfktie2g001rr7jd9vi0f30p","category_id":"clfktie2i001wr7jdgci5e0yh","_id":"clfktie2q0028r7jdhri1523m"},{"post_id":"clfktie2n0024r7jdfe4td68i","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie2v002er7jda5dy0fyv"},{"post_id":"clfktie2u002dr7jd2zal9965","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie30002mr7jd8bts8qdf"},{"post_id":"clfktie2x002jr7jdg7jh6xyv","category_id":"clfktie1v000qr7jddiqm6qlt","_id":"clfktie33002sr7jd805dczaw"},{"post_id":"clfktie2z002lr7jddp7b8t0p","category_id":"clfktie1v000qr7jddiqm6qlt","_id":"clfktie34002ur7jd551ib5xl"},{"post_id":"clfktie31002pr7jd37t555eh","category_id":"clfktie220014r7jd8eth3lxq","_id":"clfktie37002zr7jd4faxhiwd"},{"post_id":"clfktie34002tr7jd2244h3yo","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie390034r7jd45bx6yit"},{"post_id":"clfktie32002rr7jd9214e794","category_id":"clfktie35002wr7jdbcvxhplc","_id":"clfktie3f003br7jd2tq9e5il"},{"post_id":"clfktie380033r7jd7vzn8aur","category_id":"clfktie1q000kr7jd2l0zg92e","_id":"clfktie3g003er7jd527rbncf"},{"post_id":"clfktie36002yr7jd7urxbi0t","category_id":"clfktie390035r7jd5b2c24g9","_id":"clfktie3j003ir7jdaqr38mt6"},{"post_id":"clfktie3g003dr7jd7m21dvci","category_id":"clfktie220014r7jd8eth3lxq","_id":"clfktie3l003mr7jdhokb2e6k"}],"PostTag":[{"post_id":"clfktie130002r7jdg10k3yfz","tag_id":"clfktie1a0005r7jd6e6k7htf","_id":"clfktie1j000dr7jd7qx6hv2n"},{"post_id":"clfktie1f0009r7jd4tasg7j9","tag_id":"clfktie1i000cr7jdf533hetn","_id":"clfktie1o000ir7jdfq72dt2h"},{"post_id":"clfktie1h000br7jdbe7117ih","tag_id":"clfktie1a0005r7jd6e6k7htf","_id":"clfktie1t000or7jddq6xf2ak"},{"post_id":"clfktie1h000br7jdbe7117ih","tag_id":"clfktie1n000hr7jdfv46dmfc","_id":"clfktie1v000rr7jd77763jn1"},{"post_id":"clfktie1j000er7jdbpgz6tjy","tag_id":"clfktie1s000mr7jdcy3cdsym","_id":"clfktie200010r7jdg1oh7a9d"},{"post_id":"clfktie1j000er7jdbpgz6tjy","tag_id":"clfktie1v000sr7jd94s3bgqq","_id":"clfktie220013r7jdfxutdbwt"},{"post_id":"clfktie1l000fr7jddkhv533k","tag_id":"clfktie1z000xr7jd2jii9jtz","_id":"clfktie29001gr7jd9sxa01io"},{"post_id":"clfktie1l000fr7jddkhv533k","tag_id":"clfktie240017r7jd5ft04yhs","_id":"clfktie2b001jr7jd8cwf6x2t"},{"post_id":"clfktie1l000fr7jddkhv533k","tag_id":"clfktie1a0005r7jd6e6k7htf","_id":"clfktie2d001nr7jd73it1q53"},{"post_id":"clfktie1m000gr7jd60pu31zc","tag_id":"clfktie27001dr7jdc6ewf31x","_id":"clfktie2h001tr7jdayzt6hnd"},{"post_id":"clfktie1m000gr7jd60pu31zc","tag_id":"clfktie2b001kr7jd5zsy0eqj","_id":"clfktie2i001vr7jdgiz8am39"},{"post_id":"clfktie1o000jr7jd1ftm7ud6","tag_id":"clfktie2f001qr7jd6bfgeb8x","_id":"clfktie2j001zr7jdhvoobid2"},{"post_id":"clfktie1r000lr7jdh7rgfjxm","tag_id":"clfktie2j001yr7jd0acsdo51","_id":"clfktie2r0029r7jd78dm9uco"},{"post_id":"clfktie1r000lr7jdh7rgfjxm","tag_id":"clfktie2l0022r7jd0padadmu","_id":"clfktie2t002br7jdemkj59ry"},{"post_id":"clfktie2p0027r7jd7teebyo8","tag_id":"clfktie1s000mr7jdcy3cdsym","_id":"clfktie2v002fr7jd23643v2y"},{"post_id":"clfktie1t000nr7jd6tqm5mi7","tag_id":"clfktie2l0022r7jd0padadmu","_id":"clfktie2x002hr7jd32qt5kq6"},{"post_id":"clfktie2s002ar7jddyv13ope","tag_id":"clfktie1s000mr7jdcy3cdsym","_id":"clfktie2y002kr7jdakn2c3nu"},{"post_id":"clfktie1u000pr7jde29g0lwj","tag_id":"clfktie1s000mr7jdcy3cdsym","_id":"clfktie30002nr7jdfg2e556k"},{"post_id":"clfktie1u000pr7jde29g0lwj","tag_id":"clfktie1v000sr7jd94s3bgqq","_id":"clfktie32002qr7jdfhv05pcp"},{"post_id":"clfktie1w000tr7jd532r5cdy","tag_id":"clfktie2x002ir7jd2h6x87vw","_id":"clfktie36002xr7jdeze3a8ne"},{"post_id":"clfktie1w000tr7jd532r5cdy","tag_id":"clfktie30002or7jd8kvn6sad","_id":"clfktie370030r7jd7yqickzj"},{"post_id":"clfktie1x000ur7jda0xyaf1p","tag_id":"clfktie34002vr7jd4ctd73gv","_id":"clfktie3c0036r7jdcm9j3ziq"},{"post_id":"clfktie370031r7jdejs7cwqh","tag_id":"clfktie1z000xr7jd2jii9jtz","_id":"clfktie3d0038r7jd4ajj7gz7"},{"post_id":"clfktie370031r7jdejs7cwqh","tag_id":"clfktie240017r7jd5ft04yhs","_id":"clfktie3f003cr7jd3uy156mt"},{"post_id":"clfktie370031r7jdejs7cwqh","tag_id":"clfktie1a0005r7jd6e6k7htf","_id":"clfktie3g003fr7jd19toflqx"},{"post_id":"clfktie1z000yr7jd7ioqcp4l","tag_id":"clfktie380032r7jd4pwc4n85","_id":"clfktie3j003jr7jdeob7gp2k"},{"post_id":"clfktie1z000yr7jd7ioqcp4l","tag_id":"clfktie3e0039r7jdbgv4hidz","_id":"clfktie3k003kr7jdhkj5g9ku"},{"post_id":"clfktie3g003dr7jd7m21dvci","tag_id":"clfktie380032r7jd4pwc4n85","_id":"clfktie3l003nr7jd6svtf3df"},{"post_id":"clfktie3g003dr7jd7m21dvci","tag_id":"clfktie3e0039r7jdbgv4hidz","_id":"clfktie3m003or7jd5cly7w85"},{"post_id":"clfktie210011r7jdet0z8i7d","tag_id":"clfktie380032r7jd4pwc4n85","_id":"clfktie3m003qr7jdbg5m4s0y"},{"post_id":"clfktie220015r7jdfw394b5t","tag_id":"clfktie3k003lr7jd7ctihkoo","_id":"clfktie3m003rr7jdb2w2d357"},{"post_id":"clfktie240018r7jd76o57va7","tag_id":"clfktie3m003pr7jd5njqfgzb","_id":"clfktie3r003ur7jd3acf4ywx"},{"post_id":"clfktie240018r7jd76o57va7","tag_id":"clfktie3n003sr7jd3u0206mg","_id":"clfktie3r003vr7jd50rk9shh"},{"post_id":"clfktie26001ar7jd0sic12rd","tag_id":"clfktie2b001kr7jd5zsy0eqj","_id":"clfktie3w003xr7jdhr3c34yw"},{"post_id":"clfktie28001er7jdawrn50x8","tag_id":"clfktie3r003wr7jdbnzw3dvz","_id":"clfktie3z003zr7jd582tfl1c"},{"post_id":"clfktie2a001hr7jd35rp2j6l","tag_id":"clfktie3x003yr7jd1iccbzyp","_id":"clfktie420041r7jdepr6165j"},{"post_id":"clfktie2c001lr7jdbbc965w9","tag_id":"clfktie30002or7jd8kvn6sad","_id":"clfktie440044r7jdchuo2zxf"},{"post_id":"clfktie2c001lr7jdbbc965w9","tag_id":"clfktie2x002ir7jd2h6x87vw","_id":"clfktie440045r7jd3a2igm0q"},{"post_id":"clfktie2e001or7jd8qdfbc3z","tag_id":"clfktie430043r7jd62ye1bpf","_id":"clfktie460047r7jd1syecr7m"},{"post_id":"clfktie2g001rr7jd9vi0f30p","tag_id":"clfktie450046r7jd7dh0a1q3","_id":"clfktie460049r7jd0v50dko5"},{"post_id":"clfktie2h001ur7jd00qfg9ym","tag_id":"clfktie460048r7jdetfu4hvn","_id":"clfktie47004cr7jdanzle7pb"},{"post_id":"clfktie2h001ur7jd00qfg9ym","tag_id":"clfktie47004ar7jda6ta2ler","_id":"clfktie47004dr7jd1x4m03v9"},{"post_id":"clfktie2i001xr7jd88yker5d","tag_id":"clfktie47004br7jd5l6g9xjg","_id":"clfktie49004fr7jdhj6o8mpr"},{"post_id":"clfktie2k0020r7jd8x8vf0iy","tag_id":"clfktie3m003pr7jd5njqfgzb","_id":"clfktie4b004hr7jdbblfcswy"},{"post_id":"clfktie2l0021r7jd551n6dhz","tag_id":"clfktie4a004gr7jdhmwz4em9","_id":"clfktie4f004jr7jd18pmgixi"},{"post_id":"clfktie2n0024r7jdfe4td68i","tag_id":"clfktie4d004ir7jdcu9b6p5a","_id":"clfktie4g004lr7jd5tn1hial"},{"post_id":"clfktie2n0024r7jdfe4td68i","tag_id":"clfktie2b001kr7jd5zsy0eqj","_id":"clfktie4g004mr7jde4yyfcnc"},{"post_id":"clfktie2u002dr7jd2zal9965","tag_id":"clfktie4f004kr7jd22f02jnq","_id":"clfktie4v004pr7jd1pfk3p8d"},{"post_id":"clfktie2u002dr7jd2zal9965","tag_id":"clfktie4g004nr7jd7bkk0rdd","_id":"clfktie4v004qr7jddw10ds2o"},{"post_id":"clfktie2w002gr7jd6cpcdwqy","tag_id":"clfktie4u004or7jd6tn924k8","_id":"clfktie4w004tr7jdh5qu0g79"},{"post_id":"clfktie2w002gr7jd6cpcdwqy","tag_id":"clfktie4v004rr7jd3nov04tx","_id":"clfktie4w004ur7jd840116l6"},{"post_id":"clfktie2x002jr7jdg7jh6xyv","tag_id":"clfktie4v004sr7jd3k1f1i2l","_id":"clfktie4w004wr7jd4mbfgfi4"},{"post_id":"clfktie2z002lr7jddp7b8t0p","tag_id":"clfktie4w004vr7jd77v1e844","_id":"clfktie4x004yr7jdd6cn9s02"},{"post_id":"clfktie31002pr7jd37t555eh","tag_id":"clfktie380032r7jd4pwc4n85","_id":"clfktie4z0051r7jdc4k1h1ab"},{"post_id":"clfktie31002pr7jd37t555eh","tag_id":"clfktie3e0039r7jdbgv4hidz","_id":"clfktie4z0052r7jd6rxp4gop"},{"post_id":"clfktie32002rr7jd9214e794","tag_id":"clfktie380032r7jd4pwc4n85","_id":"clfktie520055r7jd0bjt7il4"},{"post_id":"clfktie32002rr7jd9214e794","tag_id":"clfktie3e0039r7jdbgv4hidz","_id":"clfktie520056r7jd6bs6c6a3"},{"post_id":"clfktie34002tr7jd2244h3yo","tag_id":"clfktie510054r7jdh95lc6zf","_id":"clfktie530058r7jd4ckafmwm"},{"post_id":"clfktie36002yr7jd7urxbi0t","tag_id":"clfktie530057r7jdhtar8dqi","_id":"clfktie54005ar7jd4r2qg491"},{"post_id":"clfktie380033r7jd7vzn8aur","tag_id":"clfktie530059r7jdhy9cffwz","_id":"clfktie54005cr7jdcg718tm8"},{"post_id":"clfktie3c0037r7jd8r7vfevc","tag_id":"clfktie54005br7jd6vx6amoh","_id":"clfktie5l005er7jdgmct1ybg"},{"post_id":"clfktie3e003ar7jda2rn6f10","tag_id":"clfktie460048r7jdetfu4hvn","_id":"clfktie60005hr7jd0nyudp4n"},{"post_id":"clfktie3e003ar7jda2rn6f10","tag_id":"clfktie47004ar7jda6ta2ler","_id":"clfktie60005ir7jdcy2bf012"},{"post_id":"clfktie3h003hr7jdcph14xpi","tag_id":"clfktie460048r7jdetfu4hvn","_id":"clfktie61005kr7jdgl4964qf"},{"post_id":"clfktie3h003hr7jdcph14xpi","tag_id":"clfktie47004ar7jda6ta2ler","_id":"clfktie61005lr7jdd4ba14y2"}],"Tag":[{"name":"100","_id":"clfktie1a0005r7jd6e6k7htf"},{"name":"diary","_id":"clfktie1i000cr7jdf533hetn"},{"name":"吐槽","_id":"clfktie1n000hr7jdfv46dmfc"},{"name":"docker","_id":"clfktie1s000mr7jdcy3cdsym"},{"name":"bug","_id":"clfktie1v000sr7jd94s3bgqq"},{"name":"Grow up","_id":"clfktie1z000xr7jd2jii9jtz"},{"name":"生活","_id":"clfktie240017r7jd5ft04yhs"},{"name":"锁","_id":"clfktie27001dr7jdc6ewf31x"},{"name":"多线程","_id":"clfktie2b001kr7jd5zsy0eqj"},{"name":"焦虑","_id":"clfktie2f001qr7jd6bfgeb8x"},{"name":"cache","_id":"clfktie2j001yr7jd0acsdo51"},{"name":"缓存","_id":"clfktie2l0022r7jd0padadmu"},{"name":"关灯吃面","_id":"clfktie2x002ir7jd2h6x87vw"},{"name":"理财","_id":"clfktie30002or7jd8kvn6sad"},{"name":"springboot","_id":"clfktie34002vr7jd4ctd73gv"},{"name":"hexo","_id":"clfktie380032r7jd4pwc4n85"},{"name":"性能测试","_id":"clfktie3e0039r7jdbgv4hidz"},{"name":"idea","_id":"clfktie3k003lr7jd7ctihkoo"},{"name":"数据库","_id":"clfktie3m003pr7jd5njqfgzb"},{"name":"索引","_id":"clfktie3n003sr7jd3u0206mg"},{"name":"java 锁","_id":"clfktie3r003wr7jdbnzw3dvz"},{"name":"java","_id":"clfktie3x003yr7jd1iccbzyp"},{"name":"juc","_id":"clfktie430043r7jd62ye1bpf"},{"name":"知识变现","_id":"clfktie450046r7jd7dh0a1q3"},{"name":"挣钱","_id":"clfktie460048r7jdetfu4hvn"},{"name":"内容","_id":"clfktie47004ar7jda6ta2ler"},{"name":"life","_id":"clfktie47004br7jd5l6g9xjg"},{"name":"redis，缓存","_id":"clfktie4a004gr7jdhmwz4em9"},{"name":"并发编程","_id":"clfktie4d004ir7jdcu9b6p5a"},{"name":"openapi","_id":"clfktie4f004kr7jd22f02jnq"},{"name":"swagger3","_id":"clfktie4g004nr7jd7bkk0rdd"},{"name":"springmvc","_id":"clfktie4u004or7jd6tn924k8"},{"name":"weblux","_id":"clfktie4v004rr7jd3nov04tx"},{"name":"study","_id":"clfktie4v004sr7jd3k1f1i2l"},{"name":"学习","_id":"clfktie4w004vr7jd77v1e844"},{"name":"测试","_id":"clfktie510054r7jdh95lc6zf"},{"name":"tips","_id":"clfktie530057r7jdhtar8dqi"},{"name":"mysql","_id":"clfktie530059r7jdhy9cffwz"},{"name":"疫情 xbb 人间清醒","_id":"clfktie54005br7jd6vx6amoh"}]}}