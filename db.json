{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/asset/daniel.jpeg","path":"asset/daniel.jpeg","modified":0,"renderable":0},{"_id":"themes/chic/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/chic/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/custom.styl","path":"css/custom.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/font.styl","path":"css/font.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/layout.styl","path":"css/layout.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/media.styl","path":"css/media.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/normalize.styl","path":"css/normalize.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/variable.styl","path":"css/variable.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/image/avatar.jpeg","path":"image/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/chic/source/js/mathjax2.7.5.js","path":"js/mathjax2.7.5.js","modified":0,"renderable":1},{"_id":"themes/chic/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/chic/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/demo_index.html","path":"fonts/iconfont/demo_index.html","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.css","path":"fonts/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.eot","path":"fonts/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/demo.css","path":"fonts/iconfont/demo.css","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.js","path":"fonts/iconfont/iconfont.js","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.json","path":"fonts/iconfont/iconfont.json","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.svg","path":"fonts/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.ttf","path":"fonts/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff","path":"fonts/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff2","path":"fonts/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.eot","path":"fonts/lanting/lanting.eot","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.TTF","path":"fonts/lanting/lanting.TTF","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.woff","path":"fonts/lanting/lanting.woff","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.woff2","path":"fonts/lanting/lanting.woff2","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.otf","path":"fonts/lanting/lanting.otf","modified":0,"renderable":1},{"_id":"themes/chic/source/image/g.png","path":"image/g.png","modified":0,"renderable":1},{"_id":"themes/chic/source/image/daniel.jpeg","path":"image/daniel.jpeg","modified":0,"renderable":1}],"Cache":[{"_id":"source/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1676560850709},{"_id":"source/.DS_Store","hash":"6974ddb0953597b845d10c3aec9016f9ed161fbb","modified":1621308770554},{"_id":"source/CNAME","hash":"ef0d04455637caf573260057930f1f69f59d625f","modified":1676450631932},{"_id":"source/_drafts/3.md","hash":"c99384ba0401f11e438b4c67899833a668413e54","modified":1676450631932},{"_id":"source/_drafts/4.md","hash":"1e8c9ea2ef3b9b0a280f1b1bce6d3d3f8f1cc635","modified":1676450631932},{"_id":"source/_posts/1-1.md","hash":"6dd78537aa31fa5c2c21c31eadc46e66adcff1e6","modified":1676560850697},{"_id":"source/_posts/1.md","hash":"66d1895641b79fb64c7b5b47d2157f7929a55c8b","modified":1672990073740},{"_id":"source/_posts/0216-restart.md","hash":"68d77ece013dc64214d92409a2d30ca91beb2ad0","modified":1676560117710},{"_id":"source/_posts/2.md","hash":"82cefdadb427df408a3e63eb1e19ae94cfd40aa3","modified":1676560850698},{"_id":"source/_posts/diary-1.md","hash":"ae0805bec0ede39bdaacef0f01dccf81ba5e47b9","modified":1676560850698},{"_id":"source/_posts/diary-2.md","hash":"7b8e4fd520451fde6a56bdde24fbf86f8f4d6d1c","modified":1676560850699},{"_id":"source/_posts/diary.md","hash":"b465a8ad4b358234a304b8cc2a060103b696f872","modified":1676560850700},{"_id":"source/_posts/gdcm.md","hash":"2b9ac4f6a0d492d50e46749d557f0e666ab7079f","modified":1672990073741},{"_id":"source/_posts/idea always Update Indices.md","hash":"d01c7a938a47a131e1417b451be4e621710a0493","modified":1672990073741},{"_id":"source/_posts/hello-world.md","hash":"1a0c146b31cc17f67d78acaa69d4dd323ede2bb4","modified":1676560850701},{"_id":"source/_posts/jc.md","hash":"65ad82086dd93f1587cdf2394eb8f8efa932d50a","modified":1672990073742},{"_id":"source/_posts/juc.md","hash":"95a9fb1f967c8ef1100fe9e0059ea5b12a2eb9db","modified":1672990073742},{"_id":"source/_posts/java怎找工作.md","hash":"1ed0816a786436bf84a0bd97bde771b6749f5652","modified":1676450500882},{"_id":"source/_posts/java-中的锁解决什么问题.md","hash":"05afbd6c3323901921ae6b0c915abc3df3954961","modified":1676450517242},{"_id":"source/_posts/redisabout.md","hash":"fe929f2a4b2b279eac27f4706972670aa395d0f3","modified":1676561220722},{"_id":"source/_posts/one-day.md","hash":"b2ee9a917cd9168329f8b22a5e07d7afa9738e4b","modified":1676560850702},{"_id":"source/_posts/money.md","hash":"d23c0c652b79a2662a84b3345800b650316a8e3e","modified":1672990073742},{"_id":"source/_posts/springboot-docker-demo.md","hash":"402648a57d50395264445e62610ac3d64948b65b","modified":1676560850703},{"_id":"source/_posts/springboot-docker.md","hash":"0fbb4517d925be0eb9c9f7e9f969b232af97d765","modified":1676560850704},{"_id":"source/_posts/springmvcvswebflux.md","hash":"f5cd97c189c0f0c79e2e3c5c14eb1bb22eeb4ae5","modified":1676560850705},{"_id":"source/_posts/xxb.md","hash":"b005f73a497cf877962a70c7d6ddb33962ce099c","modified":1676595280689},{"_id":"source/_posts/分布式事务.md","hash":"9f84846550805a4429b679f5d719cb4443a1ab6e","modified":1672990073744},{"_id":"source/_posts/搬运内容挣钱怎么了.md","hash":"b8906f02c5a6df6f903e6b9f693e6deab665796a","modified":1672990073744},{"_id":"source/_posts/我的反思.md","hash":"f03bcc4c33e69030d8f3d37830b304de36631fe1","modified":1676560850707},{"_id":"source/asset/daniel.jpeg","hash":"84140d99a0adf4f49fbb7f5b01cd7d49478294ed","modified":1676560850709},{"_id":"source/categories/index.md","hash":"565e6c7c0ffa2740321f39da6a46cf0544857e13","modified":1676560850709},{"_id":"source/tag/index.md","hash":"cd170b2f938a46750e51161a86d9032c6dd14142","modified":1676560850710},{"_id":"source/tags/index.md","hash":"1d6cf4a69c9d5f72c8c001eb5ab095d10c98de03","modified":1676560850711},{"_id":"source/about/index-1.md","hash":"03ab399cc8d81c84740a13952e09840c40954c7c","modified":1676450631933},{"_id":"source/about/index.md","hash":"18237a78ccf234a4c746135a9289edefe8353e88","modified":1676450631934},{"_id":"source/_posts/test.md","hash":"44ffc01cac165722f57b803ee1834330808a76e2","modified":1672990073743},{"_id":"themes/chic/README.md","hash":"e0bd27664e1d0b4ed1c8101d2bf69886c66c31d9","modified":1676558875487},{"_id":"themes/chic/_config.yml","hash":"0c605e1d7cbd6dad90da7672884b5113bd0a32f2","modified":1677131977816},{"_id":"themes/chic/ChangeLogs.md","hash":"0244985e7e4797e3d0a0e173dce4e341f6aa5dd0","modified":1676558875486},{"_id":"themes/chic/scripts/imageTag.js","hash":"4b69804c1e4bf638eda7022499c440ce24e28587","modified":1676558875503},{"_id":"themes/chic/README-CN.md","hash":"af0765f26b72d49f1b29afe1a9d0c4a492912aaa","modified":1676558875487},{"_id":"themes/chic/LICENSE.md","hash":"9911bdafa287bd65a822f84cc12012980bd10247","modified":1676558875486},{"_id":"themes/chic/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1676558875488},{"_id":"themes/chic/package.json","hash":"8b4072879307eed0e74ae35390825c5e03b9229c","modified":1676558875503},{"_id":"themes/chic/source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1676558875539},{"_id":"themes/chic/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1676558875488},{"_id":"themes/chic/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1676558875488},{"_id":"themes/chic/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1676558875488},{"_id":"themes/chic/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1676558875489},{"_id":"themes/chic/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1676558875488},{"_id":"themes/chic/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1676558875489},{"_id":"themes/chic/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1676558875489},{"_id":"themes/chic/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1676558875489},{"_id":"themes/chic/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1676558875489},{"_id":"themes/chic/layout/archive.ejs","hash":"48cdf67b628eb6a1c24d484ed252f5b0e3f06ddf","modified":1676558875497},{"_id":"themes/chic/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1676558875490},{"_id":"themes/chic/layout/index.ejs","hash":"b3344720176ad12dc88745cc5b31d497356ca4fa","modified":1676558875501},{"_id":"themes/chic/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1676558875490},{"_id":"themes/chic/layout/page.ejs","hash":"aec3bca3f626afb120ed118993caa84a466e6c4d","modified":1677132219174},{"_id":"themes/chic/layout/layout.ejs","hash":"2727718dd2cc5a966a847419854e72556e9ca0c1","modified":1676622012476},{"_id":"themes/chic/layout/category.ejs","hash":"cae7483c92ff639f74f8efe67959f37c97350800","modified":1676558875501},{"_id":"themes/chic/layout/post.ejs","hash":"a23f83d6c559ce88588472267468a54488d50e8e","modified":1676558875502},{"_id":"themes/chic/layout/tag.ejs","hash":"d85ca78392be138b1589499cba95186b20c3a902","modified":1676558875502},{"_id":"themes/chic/source/css/custom.styl","hash":"bf8dee1a094b104d87a53b43f6daa7ba43b67574","modified":1676558875537},{"_id":"themes/chic/source/css/base.styl","hash":"72aef06d738853f13f1697b091002d6d776bd56d","modified":1676558875536},{"_id":"themes/chic/source/css/font.styl","hash":"8c1da30e223c0a3d7ef452abc9f0e4cc71dbc140","modified":1676558875537},{"_id":"themes/chic/source/css/layout.styl","hash":"4d9f83b5a3bac81e7857358744858fae708320de","modified":1676558875537},{"_id":"themes/chic/source/css/normalize.styl","hash":"b3337320133b7a336db7033aa6bbe94b054c0b21","modified":1676558875538},{"_id":"themes/chic/source/css/media.styl","hash":"f96c0dbb9653667906a6dc271f637543ac5c7212","modified":1676558875537},{"_id":"themes/chic/source/css/style.styl","hash":"a13f2c38070a89b06a2ede599f5ce5fd160e11c9","modified":1676558875538},{"_id":"themes/chic/source/css/variable.styl","hash":"906faa95457eba70118a0705e13b8f43409e502f","modified":1676558875538},{"_id":"themes/chic/source/js/script.js","hash":"5dd8ce4fa55a7201d7e2ffe417b48c95943a906b","modified":1676558875677},{"_id":"themes/chic/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1676558875678},{"_id":"themes/chic/source/image/avatar.jpeg","hash":"5d46dc78e55390dfab0149798249bf655dd03fca","modified":1676558875676},{"_id":"themes/chic/source/js/mathjax2.7.5.js","hash":"7ba18c783d543cfb4b45a0118ccb73d3f68cd46e","modified":1676558875677},{"_id":"themes/chic/layout/_page/category.ejs","hash":"e8464e11d08a711fe815ea1cd101aa41d7310ebf","modified":1676558875491},{"_id":"themes/chic/layout/_page/archive.ejs","hash":"464549286c92ea0d6cb057c6936e0f1a5d1c1dd2","modified":1676558875490},{"_id":"themes/chic/layout/_page/page.ejs","hash":"1d875d59cf4d6b681cc8cf755f19b5355e5d1144","modified":1676558875491},{"_id":"themes/chic/layout/_page/post.ejs","hash":"21b9590d147c9e7eacfede58960937d3772f9d6a","modified":1676723272762},{"_id":"themes/chic/layout/_page/profile.ejs","hash":"f49991a55cc08a1d90d8d6ae8d15a692163272e1","modified":1676558875492},{"_id":"themes/chic/layout/_partial/footer.ejs","hash":"e1c332fab0d6cd713e36d46ccc14d0991067ba40","modified":1676558875493},{"_id":"themes/chic/layout/_page/tag.ejs","hash":"0c20ff00532103f9a59639ca9956fc0bce4aabc2","modified":1676558875492},{"_id":"themes/chic/layout/_partial/header.ejs","hash":"8f1e5272a4de96a3ed94de1db988b05b34515463","modified":1676558875493},{"_id":"themes/chic/layout/_partial/paginator.ejs","hash":"ab59d5db77f2aa64dfe03656e72fd49702c62e23","modified":1676558875493},{"_id":"themes/chic/layout/_partial/toc.ejs","hash":"c47e8a5047ce0016f74b76028878d386af78bb7c","modified":1676558875494},{"_id":"themes/chic/layout/_partial/head.ejs","hash":"6d9d45fcfdf7066f342fdf67bed73f49f485f6c6","modified":1676607999462},{"_id":"themes/chic/layout/_plugins/mathjax.ejs","hash":"53f088fe44d51c4d9fb61aeac4c23b3cfcc19762","modified":1676558875494},{"_id":"themes/chic/source/css/_partial/footer.styl","hash":"4f58e607eaa59cda3b5a9fdb3404ffb75c4d1a03","modified":1676558875536},{"_id":"themes/chic/source/css/_partial/header.styl","hash":"be70b4ab3bcc977f1055664899742804c716929d","modified":1676558875536},{"_id":"themes/chic/source/css/_partial/paginator.styl","hash":"b4f4a5180c4cbc70d186792b8a1fd0f5855bd86a","modified":1676558875536},{"_id":"themes/chic/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1676558875503},{"_id":"themes/chic/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1676558875504},{"_id":"themes/chic/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1676558875504},{"_id":"themes/chic/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1676558875504},{"_id":"themes/chic/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1676558875505},{"_id":"themes/chic/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1676558875505},{"_id":"themes/chic/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1676558875505},{"_id":"themes/chic/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1676558875505},{"_id":"themes/chic/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1676558875506},{"_id":"themes/chic/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1676558875506},{"_id":"themes/chic/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1676558875507},{"_id":"themes/chic/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1676558875509},{"_id":"themes/chic/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1676558875509},{"_id":"themes/chic/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1676558875509},{"_id":"themes/chic/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1676558875510},{"_id":"themes/chic/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1676558875509},{"_id":"themes/chic/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1676558875510},{"_id":"themes/chic/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1676558875510},{"_id":"themes/chic/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1676558875511},{"_id":"themes/chic/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1676558875512},{"_id":"themes/chic/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1676558875512},{"_id":"themes/chic/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1676558875513},{"_id":"themes/chic/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1676558875513},{"_id":"themes/chic/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1676558875514},{"_id":"themes/chic/source/css/_highlight/brown-paper.styl","hash":"329b85ae9130a5587a6fb1c6f80396f9cca5ddc1","modified":1676558875516},{"_id":"themes/chic/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1676558875515},{"_id":"themes/chic/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1676558875517},{"_id":"themes/chic/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1676558875518},{"_id":"themes/chic/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1676558875518},{"_id":"themes/chic/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1676558875518},{"_id":"themes/chic/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1676558875518},{"_id":"themes/chic/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1676558875519},{"_id":"themes/chic/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1676558875519},{"_id":"themes/chic/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1676558875519},{"_id":"themes/chic/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1676558875520},{"_id":"themes/chic/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1676558875519},{"_id":"themes/chic/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1676558875520},{"_id":"themes/chic/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1676558875520},{"_id":"themes/chic/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1676558875520},{"_id":"themes/chic/source/css/_highlight/highlightjs.styl","hash":"65b5981dc3c57cedd1cb668c0e377230987e08d1","modified":1676558875521},{"_id":"themes/chic/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1676558875521},{"_id":"themes/chic/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1676558875521},{"_id":"themes/chic/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1676558875521},{"_id":"themes/chic/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1676558875522},{"_id":"themes/chic/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1676558875522},{"_id":"themes/chic/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1676558875522},{"_id":"themes/chic/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1676558875522},{"_id":"themes/chic/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1676558875523},{"_id":"themes/chic/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1676558875523},{"_id":"themes/chic/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1676558875523},{"_id":"themes/chic/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1676558875523},{"_id":"themes/chic/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1676558875524},{"_id":"themes/chic/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1676558875524},{"_id":"themes/chic/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1676558875525},{"_id":"themes/chic/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1676558875525},{"_id":"themes/chic/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1676558875525},{"_id":"themes/chic/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1676558875526},{"_id":"themes/chic/source/css/_highlight/pojoaque.styl","hash":"2601b4285803a7cea5ccded8d624ca95f80e3d88","modified":1676558875526},{"_id":"themes/chic/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1676558875526},{"_id":"themes/chic/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1676558875526},{"_id":"themes/chic/source/css/_highlight/school-book.styl","hash":"beabbbcc7930f8de19159381a01c0ba41dc2291f","modified":1676558875527},{"_id":"themes/chic/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1676558875527},{"_id":"themes/chic/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1676558875527},{"_id":"themes/chic/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1676558875527},{"_id":"themes/chic/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1676558875528},{"_id":"themes/chic/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1676558875528},{"_id":"themes/chic/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1676558875528},{"_id":"themes/chic/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1676558875529},{"_id":"themes/chic/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1676558875528},{"_id":"themes/chic/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1676558875529},{"_id":"themes/chic/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1676558875529},{"_id":"themes/chic/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1676558875529},{"_id":"themes/chic/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1676558875530},{"_id":"themes/chic/source/css/_page/archive.styl","hash":"71ea842f068b29b4418dd09450db09d27dcf0947","modified":1676558875534},{"_id":"themes/chic/source/css/_page/category.styl","hash":"cead361269616b7a6ddec3090d9fa34c3c6ac722","modified":1676558875535},{"_id":"themes/chic/source/css/_page/page.styl","hash":"34e33b52d2e046aa2f5494e81ff4ac2d5ca78058","modified":1676558875535},{"_id":"themes/chic/source/css/_page/profile.styl","hash":"057097e714284e72e97ab8a808a30df45555a342","modified":1676558875535},{"_id":"themes/chic/source/css/_page/tag.styl","hash":"55b220cc58011876fb3a470cd1fde8ed87c93079","modified":1676558875535},{"_id":"themes/chic/source/css/_lib/looper.css","hash":"863144dc9af7c1e181670515bc85eaf768f4e287","modified":1676558875530},{"_id":"themes/chic/source/css/_lib/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1676558875530},{"_id":"themes/chic/source/fonts/iconfont/demo_index.html","hash":"16e01463756a77b4acd15ade4e6b73f0376d75e1","modified":1676558875540},{"_id":"themes/chic/source/fonts/iconfont/iconfont.css","hash":"1e5540dca41dc53879226750f936e72daf616662","modified":1676558875541},{"_id":"themes/chic/source/fonts/iconfont/iconfont.eot","hash":"d18736f7885569e497698d17f49b9167add67dc6","modified":1676558875541},{"_id":"themes/chic/source/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1676558875539},{"_id":"themes/chic/source/fonts/iconfont/iconfont.js","hash":"87bfdaae31251f4d605646c5ae9c67196f6cc4e2","modified":1676558875542},{"_id":"themes/chic/source/fonts/iconfont/iconfont.json","hash":"eae94b803d34035008842855d0bead92d2035281","modified":1676558875542},{"_id":"themes/chic/source/fonts/iconfont/iconfont.svg","hash":"5c9c4e44179a7435d0f91df4ce1154dd677ad8c2","modified":1676558875543},{"_id":"themes/chic/source/fonts/iconfont/iconfont.ttf","hash":"41c4f4dc82e42452dcfd19caed6c7dc333ee769e","modified":1676558875543},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff","hash":"a57593c49b56c16ac1def0e1f3dbca3f658b3579","modified":1676558875543},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff2","hash":"39d97a0f72417487f5c1e0a0abf8e27dd6ebda31","modified":1676558875543},{"_id":"themes/chic/source/css/_page/_post/post_code.styl","hash":"06c3a3524ffd4b27e03e79489001997ea5d727d3","modified":1676558875531},{"_id":"themes/chic/source/css/_page/_post/post_copyright.styl","hash":"64fd9f07ed45f035057d46740af0db70218714aa","modified":1676558875532},{"_id":"themes/chic/source/css/_page/_post/post_content.styl","hash":"5e3d63077549d8e2e5ff8c452e809760f5a99c17","modified":1676558875531},{"_id":"themes/chic/source/css/_page/_post/post_header.styl","hash":"d37b032bc5edca92c84bf62070a28fa40939df55","modified":1676558875533},{"_id":"themes/chic/source/css/_page/_post/post_nav.styl","hash":"03accaba13c995cbe65a05a88549ff74e992eb3f","modified":1676558875533},{"_id":"themes/chic/source/css/_page/_post/post_tags.styl","hash":"2ff93677aa4d81da83c659b4dd4e3cb482d9ce7d","modified":1676558875534},{"_id":"themes/chic/source/css/_page/_post/post_toc.styl","hash":"15e1ec7af93f41184f986aba21991a79923b0a0e","modified":1676558875534},{"_id":"themes/chic/source/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1676558875673},{"_id":"themes/chic/source/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1676558875665},{"_id":"themes/chic/source/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1676558875598},{"_id":"themes/chic/source/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1676558875571},{"_id":"themes/chic/source/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1676558875644},{"_id":"public/baidusitemap.xml","hash":"769cce574dc247b630ac9417f508cca3eef32b5a","modified":1679557818994},{"_id":"public/search.xml","hash":"a01e0158886928ee171200cf4b3db15651c892dc","modified":1679557818994},{"_id":"public/leancloud_counter_security_urls.json","hash":"755fd2025bb98624b09810223cc4b37cff4549bd","modified":1679557818994},{"_id":"public/sitemap.xml","hash":"89e7a6557c74ddf779fb9e1cd3f4b241c1e85ac8","modified":1679557818994},{"_id":"public/index.html","hash":"460ebff984e9d757783985f0e3947780f335a9f2","modified":1679557818994},{"_id":"public/categories/index.html","hash":"41b03ddae75bc681523e24e24e4aa70f94f1de53","modified":1679557818994},{"_id":"public/tag/index.html","hash":"467794a49c891e7cdad2b1449a9f4b32b08ae261","modified":1679557818994},{"_id":"public/tags/index.html","hash":"1cac9b172e18504ff37d75b3b8539966bbfd1007","modified":1679557818994},{"_id":"public/about/index-1.html","hash":"887ad0e64825d0489151800912c649136050f557","modified":1679557818994},{"_id":"public/about/index.html","hash":"cd35e97e8d06030aa872e871a9fa411bf76bd450","modified":1679557818994},{"_id":"public/2023/02/16/我的反思/index.html","hash":"d4d7c34339a0de1314591dd8e9c357d5f4ba1c7a","modified":1679557818994},{"_id":"public/2023/02/16/diary-2/index.html","hash":"09e57f00b44e3f135d2d6a61963ceadc91ecd0bb","modified":1676595167762},{"_id":"public/2023/02/16/diary-1/index.html","hash":"7d397fcaf2af18a645765726a54ae043c3fe7373","modified":1676595167762},{"_id":"public/2023/02/16/diary/index.html","hash":"09e57f00b44e3f135d2d6a61963ceadc91ecd0bb","modified":1676595167762},{"_id":"public/2023/02/16/0216-restart/index.html","hash":"b802b8b2b9f732c0cd6fe064d5e71728dfa67e28","modified":1679557818994},{"_id":"public/2023/02/15/java-中的锁解决什么问题/index.html","hash":"fe2f8e9de207342872f672d669ed8ff40feeeb12","modified":1679557818994},{"_id":"public/2023/02/15/java怎找工作/index.html","hash":"3deadd9267f267e1ecec8ecd95c050fb6d715ac8","modified":1679557818994},{"_id":"public/2023/01/07/springboot-docker/index.html","hash":"ba5b7fd40b4bee3cea3ab88a0e8760443dcf1cc7","modified":1679557818994},{"_id":"public/2023/01/06/springmvcvswebflux/index.html","hash":"30b1e2f9f8e0984792c6a74bdb2bed49a9e545c8","modified":1679557818994},{"_id":"public/2023/01/06/xxb/index.html","hash":"795d1c729651eb1ffe407f7f7455799b3312d11f","modified":1679557818994},{"_id":"public/2023/01/06/test/index.html","hash":"5f26fa877349b746428a922f2f832a5e4ab17a1f","modified":1679557818994},{"_id":"public/2023/01/06/juc/index.html","hash":"96ff23abf5251dbcb696cf2c1ebbb4f6ad85b135","modified":1679557818994},{"_id":"public/2023/01/06/idea always Update Indices/index.html","hash":"ec19c37f16d7d88f541c073ff063df5005ad3472","modified":1679557818994},{"_id":"public/2023/01/05/springboot-docker-demo/index.html","hash":"e8c715fed4482c31a75ed40360c0c5df66aa7824","modified":1679557818994},{"_id":"public/2022/11/04/one-day/index.html","hash":"f92f8a27967af04ff864fdfcbfd99ec8d6749946","modified":1679557818994},{"_id":"public/2021/05/18/money/index.html","hash":"e38bb8e5add5f44e8fe2b756d95180ac685973ec","modified":1679557818994},{"_id":"public/2020/12/18/redisabout/index.html","hash":"85d810c379e412369f25127888ce085011dd8e84","modified":1679557818994},{"_id":"public/2020/12/05/分布式事务/index.html","hash":"b1d5faa6d5a8ef2481cef78ecb776f6e06ec7902","modified":1679557818994},{"_id":"public/2020/12/05/搬运内容挣钱怎么了/index.html","hash":"75c8ab3a784452f03cc220eeab012e5edfcac504","modified":1679557818994},{"_id":"public/2020/11/27/jc/index.html","hash":"aba495081a9ae4a3c8576667350ae865057e5a69","modified":1679557818994},{"_id":"public/2020/11/26/gdcm/index.html","hash":"f7dcb641ab2211f848b5fb77f898180465b54abe","modified":1679557818994},{"_id":"public/2020/11/26/hello-world/index.html","hash":"d7424265b205c9585fcd46954e1fca2401c1d326","modified":1679557818994},{"_id":"public/2020/11/25/1-1/index.html","hash":"ed76b5bda6f39d86074bfc8c592de5fa970ea6cd","modified":1679557818994},{"_id":"public/2020/11/25/2/index.html","hash":"d50e570f964e3463287a20fb3dd14093f3f213a6","modified":1679557818994},{"_id":"public/2020/11/25/1/index.html","hash":"b4cca8286226733059c6b75b7c07e5a9fff30ccf","modified":1679557818994},{"_id":"public/archives/index.html","hash":"c51c382b6242daa90ab2ce8e4a2a755a5dfa915a","modified":1679557818994},{"_id":"public/archives/page/2/index.html","hash":"e785b56d0125762a17d70cd2d410a3f877cc4cfb","modified":1679557818994},{"_id":"public/archives/page/3/index.html","hash":"4b4f6d55ad0a71b12673a45d40b5eaa71b4045d2","modified":1679557818994},{"_id":"public/archives/2020/index.html","hash":"6396e21328c166cb4f3129c4f6e14ea86922c340","modified":1679557818994},{"_id":"public/archives/2020/11/index.html","hash":"34c340458b26c851d8bf7393215115597e37332e","modified":1679557818994},{"_id":"public/archives/2020/12/index.html","hash":"8b7cbb9cbc67928902c43b61a2924a642c3b50e0","modified":1679557818994},{"_id":"public/archives/2021/index.html","hash":"33224f15b7df2c59bcb42d646f1ba7a51e8f86d5","modified":1679557818994},{"_id":"public/archives/2021/05/index.html","hash":"2fc4b7bb9421f730b596a49a0a9c206f9c4f1eee","modified":1679557818994},{"_id":"public/archives/2022/index.html","hash":"c09c82592ef111eff4844a544a72b1a93ad97e4c","modified":1679557818994},{"_id":"public/archives/2022/11/index.html","hash":"dfbac21aa9dde7a983acb304f9cbe239b1b9f131","modified":1679557818994},{"_id":"public/archives/2023/index.html","hash":"3eccb4fb577e40ec487b3fa487c049bcaa58103f","modified":1679557818994},{"_id":"public/archives/2023/page/2/index.html","hash":"b612aed434136319768aae333fa62b177550b8d0","modified":1679557818994},{"_id":"public/archives/2023/01/index.html","hash":"a1bafd011d9457aed707a1abff932355c5453a42","modified":1679557818994},{"_id":"public/archives/2023/02/index.html","hash":"dce59b4e8e8726f75e07dcfb6bdcfb8162ecfc7d","modified":1679557818994},{"_id":"public/categories/idea/index.html","hash":"14528160ed41acf7380e10bb8767609c10d399bb","modified":1679557818994},{"_id":"public/categories/work/index.html","hash":"48ddb072637767eaa0b45f81ba4ceda890efb62a","modified":1679557818994},{"_id":"public/categories/工具/index.html","hash":"6ce98aac89b7c6a66de7f6aa451143dea8d7dc7f","modified":1679557818994},{"_id":"public/page/2/index.html","hash":"460ebff984e9d757783985f0e3947780f335a9f2","modified":1679557818994},{"_id":"public/page/3/index.html","hash":"460ebff984e9d757783985f0e3947780f335a9f2","modified":1679557818994},{"_id":"public/tags/100/index.html","hash":"d88daa9564f27528abb040561815e6fd2d9f3558","modified":1679557818994},{"_id":"public/tags/diary/index.html","hash":"a6b55ed30d5ad7f5dd407ff2750a7b564cfb5ff8","modified":1679557818994},{"_id":"public/tags/吐槽/index.html","hash":"3b2f088180cbb978faa6a132d18dcaf3922d73f3","modified":1679557818994},{"_id":"public/tags/docker/index.html","hash":"a3eaa5d20849002eee0006a76b529aedadd250c0","modified":1679557818994},{"_id":"public/tags/bug/index.html","hash":"255135eac3e44057d9384c39905b716a943fe913","modified":1679557818994},{"_id":"public/tags/Grow-up/index.html","hash":"19e0f49be01734c5a560f88b305193ce2be08257","modified":1679557818994},{"_id":"public/tags/life/index.html","hash":"294b14604a101797c8f2a35a363bee32dceaae8b","modified":1679557818994},{"_id":"public/tags/关灯吃面/index.html","hash":"8f9928995fb9a897663ffdc421cae9c40fed4077","modified":1679557818994},{"_id":"public/tags/理财/index.html","hash":"7b807aa391ec21a5dbbc1fbdccd9bf4b5786963a","modified":1679557818994},{"_id":"public/tags/idea/index.html","hash":"5b1a82a4471ff66e3419003143544a81bf4e5716","modified":1679557818994},{"_id":"public/tags/java-锁/index.html","hash":"b976a1eddc9c6cbde6522960d037f0a291006c55","modified":1679557818994},{"_id":"public/tags/java/index.html","hash":"3d62c693148e0441b502ad9cb6ec7e2420878b53","modified":1679557818994},{"_id":"public/tags/juc/index.html","hash":"0231659fd2b695c31bc55b60535adea38e940ff5","modified":1679557818994},{"_id":"public/tags/挣钱/index.html","hash":"196d6e2843390b1eaad6953acf10e6467ca7c7ff","modified":1679557818994},{"_id":"public/tags/内容/index.html","hash":"8fe9047ad6e2e67d90ecd39764207a112f23d1c3","modified":1679557818994},{"_id":"public/tags/redis，缓存/index.html","hash":"e4006c97b44197f3c641386ca3fbbb08fc960448","modified":1679557818994},{"_id":"public/tags/springmvc/index.html","hash":"f77bc4f5d683abebfd08380f97e1c3026795bb78","modified":1679557818994},{"_id":"public/tags/weblux/index.html","hash":"6f3e9ce9533b86900ece6afdf0ecd0967914ab78","modified":1679557818994},{"_id":"public/tags/疫情-xbb-人间清醒/index.html","hash":"6a064a009ce2cc38f719b3ca86e05d568b7b4d08","modified":1679557818994},{"_id":"public/tags/hexo/index.html","hash":"4e4c068aaf40e3c5afb96653c2d99669c69d6126","modified":1679557818994},{"_id":"public/tags/性能测试/index.html","hash":"231ed95240f323b258b60b97529999be382b6130","modified":1679557818994},{"_id":"public/CNAME","hash":"ef0d04455637caf573260057930f1f69f59d625f","modified":1676595167762},{"_id":"public/asset/daniel.jpeg","hash":"84140d99a0adf4f49fbb7f5b01cd7d49478294ed","modified":1676595167762},{"_id":"public/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1679557818994},{"_id":"public/image/avatar.jpeg","hash":"5d46dc78e55390dfab0149798249bf655dd03fca","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.eot","hash":"d18736f7885569e497698d17f49b9167add67dc6","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.svg","hash":"5c9c4e44179a7435d0f91df4ce1154dd677ad8c2","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.ttf","hash":"41c4f4dc82e42452dcfd19caed6c7dc333ee769e","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.woff","hash":"a57593c49b56c16ac1def0e1f3dbca3f658b3579","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.woff2","hash":"39d97a0f72417487f5c1e0a0abf8e27dd6ebda31","modified":1679557818994},{"_id":"public/css/base.css","hash":"2fce73a3c2df8f93edeb5e34a53b7d83e5191d85","modified":1679557818994},{"_id":"public/css/custom.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1679557818994},{"_id":"public/css/font.css","hash":"87059edd1f2bfc4296f5599e73208893f2b06458","modified":1679557818994},{"_id":"public/css/layout.css","hash":"9b81d7e5146871ae2d1010f3a10089bbb43e81e3","modified":1679557818994},{"_id":"public/css/media.css","hash":"5023ee404900a47d61ca0591b2d4e9eace0fe88e","modified":1679557818994},{"_id":"public/css/normalize.css","hash":"2d4b663b6a4c68295b6ba240fa2dd9fb3863093c","modified":1679557818994},{"_id":"public/css/variable.css","hash":"cb4180b3bbad471e30cf52ebb40e998d58a30d7d","modified":1679557818994},{"_id":"public/js/script.js","hash":"5dd8ce4fa55a7201d7e2ffe417b48c95943a906b","modified":1676595167762},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.css","hash":"1e5540dca41dc53879226750f936e72daf616662","modified":1679557818994},{"_id":"public/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.json","hash":"3123aa840109e385d58a75d34e88a2d621e1ada8","modified":1679557818994},{"_id":"public/css/style.css","hash":"9681f8537e77efdd10f5bf08cc924fd0c9a9b58b","modified":1676595167762},{"_id":"public/fonts/iconfont/demo_index.html","hash":"16e01463756a77b4acd15ade4e6b73f0376d75e1","modified":1679557818994},{"_id":"public/fonts/iconfont/iconfont.js","hash":"87bfdaae31251f4d605646c5ae9c67196f6cc4e2","modified":1679557818994},{"_id":"public/js/mathjax2.7.5.js","hash":"7ba18c783d543cfb4b45a0118ccb73d3f68cd46e","modified":1679557818994},{"_id":"public/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1679557818994},{"_id":"public/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1679557818994},{"_id":"public/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1679557818994},{"_id":"public/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1679557818994},{"_id":"public/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1679557818994},{"_id":"source/_posts/restart.md","hash":"836dd2e7de502bf0abdacc97f1a8ef134197f4e1","modified":1676595804497},{"_id":"themes/chic/source/image/daniel.jpeg","hash":"84140d99a0adf4f49fbb7f5b01cd7d49478294ed","modified":1676596060641},{"_id":"themes/chic/source/image/g.png","hash":"1f55b2032cb0fa02b2691bf52c949153d38f0ae8","modified":1676596019221},{"_id":"public/2023/02/17/restart/index.html","hash":"fa372e72bbf1cda30b8947c52c4c1c01c17e272f","modified":1679557818994},{"_id":"source/_drafts/xxx.md","hash":"07f00eab9837ce9e7a3e50a31a258cf16ced9624","modified":1676972482247},{"_id":"source/_posts/3.md","hash":"6e1c6f9485f42c0cd4f3961466ca43e575d5fcfc","modified":1677199858261},{"_id":"source/_posts/anxiety.md","hash":"4a35577643292a2417e0f52687a55e6ee803b4b7","modified":1676619793694},{"_id":"source/_posts/cache.md","hash":"6e3e71c340a91a0664ed12600820631b9e5d30af","modified":1677324366296},{"_id":"source/_posts/cachecompare.md","hash":"29133339e50db1df4c064b959760eac50a8f099c","modified":1677216792304},{"_id":"source/_posts/dm_task_set_cookie.md","hash":"a95fc66112f5f1c18a5f29e39693bf1a3fce87d4","modified":1676972410042},{"_id":"source/_posts/hello-springboot.md","hash":"7ab08120fd3cd5e8efd7316d24c89255bc598b1d","modified":1676702538471},{"_id":"source/_posts/hexo-generator-search.md","hash":"163b81db5a2d4cdedb158ffb4bbe9ef51797f4ef","modified":1677131765568},{"_id":"source/_posts/index.md","hash":"bd9cc0e563264690e12a79997e56b61e99c2ba79","modified":1677564844562},{"_id":"source/_posts/java-thread.md","hash":"314345ab50b3fdc3031fcd4ecbb5411e1b67d63d","modified":1678783514536},{"_id":"source/_posts/liquidate.md","hash":"52417e947616ac0fee14750526198371b6b3cf8a","modified":1676858693435},{"_id":"source/_posts/psotgresvsmysql.md","hash":"559f45cb0171f24c12559aabc3aee6dec213c9f7","modified":1678262032371},{"_id":"source/_posts/spinlock.md","hash":"cfc825aacb0d9e258e96cfe92faef08bba513145","modified":1677403396539},{"_id":"source/_posts/springdoc.md","hash":"96bed7e572b9f9857ceb63bf23406ff0d444909f","modified":1678155751622},{"_id":"source/_posts/studyformdiffrence.md","hash":"047d0cb79beeb4cfb1e44a805c8909eea9594524","modified":1676722953383},{"_id":"source/_posts/studywhat.md","hash":"f9bce1b39f34302c04e7967915b8fb06d4324d59","modified":1677214564280},{"_id":"source/_posts/target.md","hash":"bd46c464f48a4f4f40cd2a1081b616f252d6a10f","modified":1676603980854},{"_id":"source/_posts/testdatas.md","hash":"3c9564b34a96db9a4cf6db00574a22f558dc7dec","modified":1676971728586},{"_id":"source/_posts/tips.md","hash":"5983eed900d087603bab6530c32dd081027718a8","modified":1677553073635},{"_id":"source/_posts/towthings.md","hash":"82cefdadb427df408a3e63eb1e19ae94cfd40aa3","modified":1676560850698},{"_id":"source/_posts/whynotstaet.md","hash":"be862fe1bc36e9576591c7b027a32cf02ef273cf","modified":1677045327558},{"_id":"public/2023/02/28/psotgresvsmysql/index.html","hash":"3095bafce271c5987092d78412d98fe002b165ef","modified":1679557818994},{"_id":"public/2023/02/28/tips/index.html","hash":"c06947571c40baa7a174db8a7b69a6136f61e172","modified":1679557818994},{"_id":"public/2023/02/24/cachecompare/index.html","hash":"5f2c7d45c9b364f0bdb749eee7f3bb45c642ef18","modified":1679557818994},{"_id":"public/2023/02/24/studywhat/index.html","hash":"f8a06b69df2171824fdd2cf12a0555d6b1680cc7","modified":1679557818994},{"_id":"public/2023/02/23/3/index.html","hash":"cb98c3961298fcc8372da687c0ebb57235fcfefa","modified":1679557818994},{"_id":"public/2023/02/22/whynotstaet/index.html","hash":"1f2ee5a5846a97e058b4cc9221e83905916d823b","modified":1679557818994},{"_id":"public/2023/02/21/testdatas/index.html","hash":"a71909a890b1366f494e0497f2d6a6cdf0594cd7","modified":1679557818994},{"_id":"public/2023/02/20/liquidate/index.html","hash":"93630f38da0675ab12674586ce60119734c94eec","modified":1679557818994},{"_id":"public/2023/02/17/anxiety/index.html","hash":"01f03437ad247b78f4e326a1a2709ecb8336148d","modified":1679557818994},{"_id":"public/2023/02/18/studyformdiffrence/index.html","hash":"bf10b9b85c733e6304847f653ea4d762d85afd10","modified":1679557818994},{"_id":"public/2023/02/16/target/index.html","hash":"2329bc5d2dc9bf778402ee01ab811012cade7129","modified":1679557818994},{"_id":"public/2023/01/06/hexo-generator-search/index.html","hash":"05069e1b5b8dc80810297f50993c908fab334b62","modified":1679557818994},{"_id":"public/2020/11/25/towthings/index.html","hash":"d8a78f7c44c8cf9cee2acde110e83f3547bb50b6","modified":1679557818994},{"_id":"public/2020/11/25/dm_task_set_cookie/index.html","hash":"091e0dab224746d82939da9ebcef252e5e7e115a","modified":1679557818994},{"_id":"public/archives/page/4/index.html","hash":"c97c171bfdeebd0b383abd83c554b10c81201f91","modified":1679557818994},{"_id":"public/archives/page/5/index.html","hash":"43d556162b0cd7a8ebb98255fff96b5da9f9cd11","modified":1679557818994},{"_id":"public/archives/2020/page/2/index.html","hash":"47a0e85c6fcac960476a546c9d8fd1943a167352","modified":1679557818994},{"_id":"public/archives/2023/page/3/index.html","hash":"a21985f588d85c42968bbbee4b2cfb1bfbe2234e","modified":1679557818994},{"_id":"public/archives/2023/02/page/2/index.html","hash":"42047565002c9c048f2fcc7a4f177b423b5ac0ea","modified":1679557818994},{"_id":"public/archives/2023/03/index.html","hash":"64201000757424be53f62aba27540bc87f5566b8","modified":1679557818994},{"_id":"public/categories/技术/index.html","hash":"a70257df7e8cb98ba2b7051104fb48d835311418","modified":1679557818994},{"_id":"public/categories/study/index.html","hash":"83863f060c2e6907c0562d8f5cba1747adcab626","modified":1679557818994},{"_id":"public/categories/技术/page/2/index.html","hash":"f555551083723e9806add79a7e338e0fc0198ac7","modified":1679557818994},{"_id":"public/categories/学习/index.html","hash":"82ee06ec6c90f196e58ee6a0de5f0432d48ebfe9","modified":1679557818994},{"_id":"public/categories/tips/index.html","hash":"bef528387a2cb018c5e33bf87324555719f3261b","modified":1679557818994},{"_id":"public/page/4/index.html","hash":"460ebff984e9d757783985f0e3947780f335a9f2","modified":1679557818994},{"_id":"public/page/5/index.html","hash":"460ebff984e9d757783985f0e3947780f335a9f2","modified":1679557818994},{"_id":"public/archives/2021/02/index.html","hash":"dbe52d7f0dc4f8f46c0714a26164cb38d6398a99","modified":1679557818994},{"_id":"public/tags/锁/index.html","hash":"a38406abcff90b967a0d654f9f7dc2051ed29e4a","modified":1679557818994},{"_id":"public/tags/多线程/index.html","hash":"02a05bf14aa3c72883b5af8b348f7d563d034da0","modified":1679557818994},{"_id":"public/tags/焦虑/index.html","hash":"0e8016fa61869831ef1daecb1ff7e87fdd997ec1","modified":1679557818994},{"_id":"public/tags/cache/index.html","hash":"81189f731f5dd471e91bd0239f0efb80d2f7ec90","modified":1679557818994},{"_id":"public/tags/缓存/index.html","hash":"318d33ebc1d2c429813dd6ed7bc347e8bbf2f1b6","modified":1679557818994},{"_id":"public/tags/springboot/index.html","hash":"067db5adff9181db5a4d252b1793d3408bec4807","modified":1679557818994},{"_id":"public/tags/数据库/index.html","hash":"592106b25adf2ed3cc675e8d2e11d930850424af","modified":1679557818994},{"_id":"public/tags/索引/index.html","hash":"c0bc9c7d3d3406065403f130d97016f9d2bc8e1c","modified":1679557818994},{"_id":"public/tags/知识变现/index.html","hash":"cde67ef0200767cada0b47e108406b8a1ffffbd2","modified":1679557818994},{"_id":"public/tags/并发编程/index.html","hash":"7dbc4508b999b87c4c1d0785efc937fe7705e70c","modified":1679557818994},{"_id":"public/tags/openapi/index.html","hash":"07665dcb4cb5429ab42dcff7165cf1e01538f0db","modified":1679557818994},{"_id":"public/tags/swagger3/index.html","hash":"ab55bdc382e37ccebeb22de1e9046fcef28d64e1","modified":1679557818994},{"_id":"public/tags/study/index.html","hash":"61ebb3fd26a02050c30da127d1fd5cfb1372b805","modified":1679557818994},{"_id":"public/tags/学习/index.html","hash":"34d505da64064cfe081e4614bddcd8a567e4467c","modified":1679557818994},{"_id":"public/tags/测试/index.html","hash":"b6e52851e7638de83b92a2702885f676e2470957","modified":1679557818994},{"_id":"public/tags/tips/index.html","hash":"9d84f9348d841e6199d42803b332cd35364eb9d5","modified":1679557818994},{"_id":"public/tags/mysql/index.html","hash":"48bfb82c9605d5016e84ec204d24ee90f31d9597","modified":1679557818994},{"_id":"public/2023/03/14/java-thread/index.html","hash":"8dd75e147ef7337717c51f8de40e69b9856b47a9","modified":1679557818994},{"_id":"public/2023/03/07/springdoc/index.html","hash":"980c9f082c4622c70f093775edac060681c616cf","modified":1679557818994},{"_id":"public/2023/02/28/index/index.html","hash":"71f394007d7b8ea370c90b2b8869312adc1637dd","modified":1679557818994},{"_id":"public/2023/02/25/spinlock/index.html","hash":"4a909c54483a6378423bd97371b2c0329247f6b9","modified":1679557818994},{"_id":"public/2023/02/20/cache/index.html","hash":"fbce888aa2a501308269e695c46ad2c2c6443beb","modified":1679557818994},{"_id":"public/2021/02/18/hello-springboot/index.html","hash":"ea0aa3230dae6d2cc336fece0f38e9fd04b10086","modified":1679557818994},{"_id":"public/image/daniel.jpeg","hash":"84140d99a0adf4f49fbb7f5b01cd7d49478294ed","modified":1679557818994},{"_id":"public/image/g.png","hash":"1f55b2032cb0fa02b2691bf52c949153d38f0ae8","modified":1679557818994}],"Category":[{"name":"idea","_id":"cle7th3ot000r92jjgoz1cqug"},{"name":"工作","_id":"cle7th3q5002992jj1bln1t1c"},{"name":"工具","_id":"cle7th3q8002g92jj4mqp4woi"},{"name":"技术","_id":"clfktd05l0003mdjdbugd3vsd"},{"name":"study","_id":"clfktd05v0008mdjdhn0d7ax1"},{"name":"学习","_id":"clfktd067000umdjd70ai1f60"},{"name":"tips","_id":"clfktd06i001lmdjdbtgd6trs"}],"Data":[],"Page":[{"_content":"","source":"index.html","raw":"","date":"2023-02-16T15:20:50.709Z","updated":"2023-02-16T15:20:50.709Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"cle7th3mn000092jjcyzobdbe","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"'categories'","date":"2020-11-25T13:25:39.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: '''categories'''\ndate: 2020-11-25 21:25:39\ntype: categories\n---\n","updated":"2023-02-16T15:20:50.709Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cle7th3nk000192jj7i3b1rsh","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tag","date":"2023-02-16T15:00:47.000Z","layout":"tag","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2023-02-16 23:00:47\nlayout: tag\n---\n","updated":"2023-02-16T15:20:50.710Z","path":"tag/index.html","comments":1,"_id":"cle7th3nz000392jjeu2uhpka","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2020-11-25T13:26:46.000Z","type":"tags","layout":"tag","_content":"xxxx ","source":"tags/index.md","raw":"---\ntitle: 'tags'\ndate: 2020-11-25 21:26:46\ntype: tags\nlayout: tag\n---\nxxxx ","updated":"2023-02-16T15:20:50.711Z","path":"tags/index.html","comments":1,"_id":"cle7th3o3000692jj3k6bezam","content":"<p>xxxx </p>\n","site":{"data":{}},"length":4,"excerpt":"","more":"<p>xxxx </p>\n"},{"title":"about","date":"2020-11-25T14:33:23.000Z","_content":"","source":"about/index-1.md","raw":"---\ntitle: about\ndate: 2020-11-25 22:33:23\n---\n","updated":"2023-02-15T08:43:51.933Z","path":"about/index-1.html","comments":1,"layout":"page","_id":"cle7th3oe000892jjcs9pbs3n","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"about","date":"2020-11-25T09:24:17.000Z","_content":"\nHello.\nI am  Daniel Hou,a full stack developer live in China.\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-11-25 17:24:17\n---\n\nHello.\nI am  Daniel Hou,a full stack developer live in China.\n","updated":"2023-02-15T08:43:51.934Z","path":"about/index.html","comments":1,"layout":"page","_id":"cle7th3oh000a92jjb6c8g8gc","content":"<p>Hello.<br>I am  Daniel Hou,a full stack developer live in China.</p>\n","site":{"data":{}},"length":50,"excerpt":"","more":"<p>Hello.<br>I am  Daniel Hou,a full stack developer live in China.</p>\n"}],"Post":[{"title":"3","date":"2020-11-26T06:06:07.000Z","_content":"\n","source":"_drafts/3.md","raw":"---\ntitle: 3\ndate: 2020-11-26 14:06:07\ntags: 100\n---\n\n","slug":"3","published":0,"updated":"2023-02-15T08:43:51.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3nm000292jjeha3ez08","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"4","_content":"","source":"_drafts/4.md","raw":"---\ntitle: 4\ntags:\n---\n","slug":"4","published":0,"date":"2023-02-15T08:43:51.932Z","updated":"2023-02-15T08:43:51.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3nz000492jjcgykbtkg","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"0216 restart","date":"2023-02-16T14:53:11.000Z","_content":"# restart\nxxxx","source":"_posts/0216-restart.md","raw":"---\ntitle: 0216 restart\ndate: 2023-02-16 22:53:11\ntags: [diary]\n---\n# restart\nxxxx","slug":"0216-restart","published":1,"updated":"2023-02-16T15:08:37.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3o3000792jj662ndjo0","content":"<h1 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h1><p>xxxx</p>\n","site":{"data":{}},"length":11,"excerpt":"","more":"<h1 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h1><p>xxxx</p>\n"},{"title":"996是福报?","date":"2020-11-25T14:51:00.000Z","_content":"> 996是福报？还是送命福？\n\n\n","source":"_posts/1-1.md","raw":"---\ntitle: 996是福报?\ndate: 2020-11-25 22:51:00\ntags: [100,吐槽]\n---\n> 996是福报？还是送命福？\n\n\n","slug":"1-1","published":1,"updated":"2023-02-16T15:20:50.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3of000992jj0cj7cz4f","content":"<blockquote>\n<p>996是福报？还是送命福？</p>\n</blockquote>\n","site":{"data":{}},"length":13,"excerpt":"","more":"<blockquote>\n<p>996是福报？还是送命福？</p>\n</blockquote>\n"},{"title":"Can't set cookie dm_task_set_cookie failed 错误处理","date":"2020-11-25T07:13:35.000Z","toc":true,"_content":"\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","source":"_posts/1.md","raw":"---\ntitle: Can't set cookie dm_task_set_cookie failed 错误处理\ndate: 2020-11-25 15:13:35\ntags: [docker,bug]\ntoc: true\n\n---\n\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","slug":"1","published":1,"updated":"2023-01-06T07:27:53.740Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3oi000b92jjahfsh26i","content":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n","site":{"data":{}},"length":185,"excerpt":"","more":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n"},{"title":"两件小事","date":"2020-11-25T07:16:52.000Z","toc":true,"_content":"本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","source":"_posts/2.md","raw":"---\ntitle: 两件小事\ndate: 2020-11-25 15:16:52\ntags: [Grow up ,生活,100]\ntoc: true\n\n---\n本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","slug":"2","published":1,"updated":"2023-02-16T15:20:50.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3oj000e92jj5um7byke","content":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n","site":{"data":{}},"length":306,"excerpt":"","more":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n"},{"title":"安安稳稳吃碗面","date":"2020-11-26T02:53:35.000Z","_content":"\n\n> 下跌是一面照妖镜\n\n\n基金赚了钱应不应该拿来消费？\n我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。\n我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。\n下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。\n好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由","source":"_posts/gdcm.md","raw":"---\ntitle: 安安稳稳吃碗面\ndate: 2020-11-26 10:53:35\ntags: [关灯吃面,理财]\n---\n\n\n> 下跌是一面照妖镜\n\n\n基金赚了钱应不应该拿来消费？\n我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。\n我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。\n下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。\n好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由","slug":"gdcm","published":1,"updated":"2023-01-06T07:27:53.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3op000l92jj8vs4ckxf","content":"<blockquote>\n<p>下跌是一面照妖镜</p>\n</blockquote>\n<p>基金赚了钱应不应该拿来消费？<br>我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。<br>我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。<br>下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。<br>好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由</p>\n","site":{"data":{}},"length":371,"excerpt":"","more":"<blockquote>\n<p>下跌是一面照妖镜</p>\n</blockquote>\n<p>基金赚了钱应不应该拿来消费？<br>我觉得因人而异，如果你指望通过基金赚钱来改善生活，那你的投资心态不可能太好，因为你亏不起。基金下跌的时候，每下跌一点，亏掉的可能就是你很长时间的生活费。所以我们给出的建议是不要拿生活费来投资，必须得用闲钱投资。<br>我们之所以没有考虑减仓基金，之前也分享过，主要是因为我们本职工作的收入已经可以让我们过得挺好了，我不指望基金投资的这笔钱，来生活来养家，所以面临下跌的时候，我的心态会更加平和，会觉得这是机会而不是风险。此外 从长期看，做好基金投资，收益真不错。<br>下跌是一面照妖镜，照出的是投资者内心的恐慌，担忧，愤怒和不满。月有阴晴圆缺，天有不测风云，市场有风险，投资需谨慎。<br>好了，今天的分享就到这里，喜欢我们的朋友可以给我们点个赞，点个在看，也可以分享给更多的朋友，邀请大家和我们一起跟投，一起走向财富自由</p>\n"},{"title":"Hello Hexo","toc":true,"_content":"\n# idea always Update Indices\n\n## Open IntelliJ IDEA.\n1. Select the File menu.\n1. Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.\n1. Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.","source":"_posts/idea always Update Indices.md","raw":"---\ntitle: Hello Hexo\ntags: [idea]\ncategories: idea\ntoc: true\n---\n\n# idea always Update Indices\n\n## Open IntelliJ IDEA.\n1. Select the File menu.\n1. Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.\n1. Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.","slug":"idea always Update Indices","published":1,"date":"2023-01-06T07:27:53.741Z","updated":"2023-01-06T07:27:53.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3oq000n92jj5rc8drly","content":"<h1 id=\"idea-always-Update-Indices\"><a href=\"#idea-always-Update-Indices\" class=\"headerlink\" title=\"idea always Update Indices\"></a>idea always Update Indices</h1><h2 id=\"Open-IntelliJ-IDEA\"><a href=\"#Open-IntelliJ-IDEA\" class=\"headerlink\" title=\"Open IntelliJ IDEA.\"></a>Open IntelliJ IDEA.</h2><ol>\n<li>Select the File menu.</li>\n<li>Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.</li>\n<li>Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.</li>\n</ol>\n","site":{"data":{}},"length":253,"excerpt":"","more":"<h1 id=\"idea-always-Update-Indices\"><a href=\"#idea-always-Update-Indices\" class=\"headerlink\" title=\"idea always Update Indices\"></a>idea always Update Indices</h1><h2 id=\"Open-IntelliJ-IDEA\"><a href=\"#Open-IntelliJ-IDEA\" class=\"headerlink\" title=\"Open IntelliJ IDEA.\"></a>Open IntelliJ IDEA.</h2><ol>\n<li>Select the File menu.</li>\n<li>Select the Invalidate Caches / Restart… menu. Once selected you get a pop-up with a bunch of options.</li>\n<li>Select Invalidate and Restart. and before doing that make sure you saved all your changes else it might delete some unsaved changes.</li>\n</ol>\n"},{"title":"java 中的锁解决什么问题?","date":"2023-02-15T08:31:47.000Z","_content":"Java中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。\n\nJava中的锁能够解决以下实际问题：\n\n数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。\n线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。\n性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。\n死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。\n总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。","source":"_posts/java-中的锁解决什么问题.md","raw":"---\ntitle: java 中的锁解决什么问题?\ndate: 2023-02-15 16:31:47\ntags: [java 锁]\n---\nJava中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。\n\nJava中的锁能够解决以下实际问题：\n\n数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。\n线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。\n性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。\n死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。\n总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。","slug":"java-中的锁解决什么问题","published":1,"updated":"2023-02-15T08:41:57.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3os000q92jj9fh835lh","content":"<p>Java中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。</p>\n<p>Java中的锁能够解决以下实际问题：</p>\n<p>数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。<br>线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。<br>性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。<br>死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。<br>总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。</p>\n","site":{"data":{}},"length":387,"excerpt":"","more":"<p>Java中的锁是一种同步机制，可以确保多个线程之间共享资源的互斥访问，从而避免出现数据竞争和线程安全问题。使用锁的主要目的是保证代码的正确性和可靠性。</p>\n<p>Java中的锁能够解决以下实际问题：</p>\n<p>数据竞争：在多线程环境中，如果多个线程同时访问共享数据，就会产生数据竞争问题。使用锁可以确保同一时间只有一个线程可以访问共享资源，避免数据竞争和数据不一致的问题。<br>线程安全：Java中的锁可以确保线程安全，避免多个线程之间的干扰和竞争，从而保证代码的正确性和可靠性。<br>性能优化：Java中的锁可以用于优化程序的性能，比如使用读写锁来实现对数据的读写分离，从而提高程序的并发性能。<br>死锁问题：Java中的锁可以用于避免死锁问题，比如使用一致性的加锁顺序，避免出现循环依赖的情况。<br>总之，Java中的锁机制是保证多线程并发安全的重要手段，可以用于解决数据竞争、线程安全、性能优化和死锁问题等实际问题。</p>\n"},{"title":"java怎找工作","date":"2023-02-15T08:24:29.000Z","_content":"java 程序员怎么做找工作\n\n在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。\n\n关注社交媒体和专业网站。\n加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。\n\n参加招聘会和技术交流会。\n许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。\n\n向自己熟悉的人求助。\n如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。\n\n通过自己的作品证明能力。\n如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。\n\n提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。\n","source":"_posts/java怎找工作.md","raw":"---\ntitle: java怎找工作\ndate: 2023-02-15 16:24:29\ntags: [java]\n---\njava 程序员怎么做找工作\n\n在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。\n\n关注社交媒体和专业网站。\n加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。\n\n参加招聘会和技术交流会。\n许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。\n\n向自己熟悉的人求助。\n如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。\n\n通过自己的作品证明能力。\n如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。\n\n提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。\n","slug":"java怎找工作","published":1,"updated":"2023-02-15T08:41:40.882Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3ot000s92jjhpj16i7j","content":"<p>java 程序员怎么做找工作</p>\n<p>在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。</p>\n<p>关注社交媒体和专业网站。<br>加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。</p>\n<p>参加招聘会和技术交流会。<br>许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。</p>\n<p>向自己熟悉的人求助。<br>如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。</p>\n<p>通过自己的作品证明能力。<br>如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。</p>\n<p>提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。</p>\n","site":{"data":{}},"length":443,"excerpt":"","more":"<p>java 程序员怎么做找工作</p>\n<p>在网络招聘网站上搜索职位。在中国，像智联招聘、前程无忧、猎聘网等招聘网站上，有许多公司在招聘JAVA程序员。通过这些网站可以快速找到自己合适的工作。</p>\n<p>关注社交媒体和专业网站。<br>加入一些面向JAVA程序员的社交媒体和专业网站，如 CSDN、51CTO 等，并关注相关领域的微信公众号或QQ群。这些渠道可能会发布一些招聘信息，并且也能让您了解最新技术动态。</p>\n<p>参加招聘会和技术交流会。<br>许多城市都会举办招聘会和技术交流会，这是一个很好的了解行业动态、与公司和招聘人员交流的机会。</p>\n<p>向自己熟悉的人求助。<br>如果您有一些熟悉的朋友或前同事在相关公司工作，可以向他们求助，了解招聘情况和有关的信息。这也可能是找到合适工作的快捷方式。</p>\n<p>通过自己的作品证明能力。<br>如果您已经有一些独立完成的项目或者参与的开源项目，可以在GitHub等平台上分享您的作品，向雇主展示自己的实际能力。</p>\n<p>提高自身的技能和水平。保持不断学习和提升自身的技术能力和素养，可以增加自己在市场上的竞争力，并提高找到合适工作的机会。</p>\n"},{"title":"加仓了","date":"2020-11-27T09:24:25.000Z","_content":"\n【加仓计划】2020年11月26日\n今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。\n美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。\n市场博弈完，再看看最终方向选择吧。\n持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。\n今日加仓操作:\n萌萌的猪猪侠国内组合，\n加仓国寿安保稳惠混合基金200元。\n加仓华安创业板50ETF联接A300元。\n加仓浦银安盛医疗健康混合400元。\n加仓工银深证红利ETF联接A200元。\n猪猪侠随心投组合，一键买入1000元。\n萌萌的猪猪侠海外组合，无操作。\n\n\n\n\n\n\n\nvia  [萌萌的猪猪侠](https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A)","source":"_posts/jc.md","raw":"---\ntitle: 加仓了\ndate: 2020-11-27 17:24:25\ntags: [理财,关灯吃面]\n---\n\n【加仓计划】2020年11月26日\n今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。\n美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。\n市场博弈完，再看看最终方向选择吧。\n持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。\n今日加仓操作:\n萌萌的猪猪侠国内组合，\n加仓国寿安保稳惠混合基金200元。\n加仓华安创业板50ETF联接A300元。\n加仓浦银安盛医疗健康混合400元。\n加仓工银深证红利ETF联接A200元。\n猪猪侠随心投组合，一键买入1000元。\n萌萌的猪猪侠海外组合，无操作。\n\n\n\n\n\n\n\nvia  [萌萌的猪猪侠](https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A)","slug":"jc","published":1,"updated":"2023-01-06T07:27:53.742Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3ou000t92jjcut6fd9k","content":"<p>【加仓计划】2020年11月26日<br>今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。<br>美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。<br>市场博弈完，再看看最终方向选择吧。<br>持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。<br>今日加仓操作:<br>萌萌的猪猪侠国内组合，<br>加仓国寿安保稳惠混合基金200元。<br>加仓华安创业板50ETF联接A300元。<br>加仓浦银安盛医疗健康混合400元。<br>加仓工银深证红利ETF联接A200元。<br>猪猪侠随心投组合，一键买入1000元。<br>萌萌的猪猪侠海外组合，无操作。</p>\n<p>via  <a href=\"https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A\">萌萌的猪猪侠</a></p>\n","site":{"data":{}},"length":293,"excerpt":"","more":"<p>【加仓计划】2020年11月26日<br>今天市场，走的有点纠结，或者说大开大合。以上证指数为例，虽然幅度不大，但是看日线还是有较大振幅，多空博弈厉害。<br>美国大选结束，紧张的贸易战稍微缓和，但从长期看，不会有实质改善。这个预期大家要有。<br>市场博弈完，再看看最终方向选择吧。<br>持续的下跌，我发现大多数朋友心态不错，比我预期的要好很多。<br>今日加仓操作:<br>萌萌的猪猪侠国内组合，<br>加仓国寿安保稳惠混合基金200元。<br>加仓华安创业板50ETF联接A300元。<br>加仓浦银安盛医疗健康混合400元。<br>加仓工银深证红利ETF联接A200元。<br>猪猪侠随心投组合，一键买入1000元。<br>萌萌的猪猪侠海外组合，无操作。</p>\n<p>via  <a href=\"https://mp.weixin.qq.com/s/HMPZ6YJU75RENaQf96x41A\">萌萌的猪猪侠</a></p>\n"},{"title":"juc-01","_content":"\n\n### 阶段1\n\n什么是JUC？ \n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？\n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n### 阶段2\n\n线程的本质(操作系统与CPU是如何执行线程的)\n并发编程为什么充满挑战？\n并发编程的三大特性：可见性、有序性、原子性\nsynchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？\n无锁、偏向锁、轻量级锁、重量级锁升级过程\n悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁\n（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？\n（首次公开）工作线程数，设多少最合适？如何理解N*C*(1+C/W)的计算公式?","source":"_posts/juc.md","raw":"---\ntitle: juc-01\ntag: juc\n---\n\n\n### 阶段1\n\n什么是JUC？ \n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？\n为什么CAS和AQS是JUC的核心？\nReentrantLock适用于什么场景？\n门闩（Latch）同步器适用于什么场景？\n篱笆（Barrier）同步器适用于什么场景？\n信号量（Semaphore）同步器适用于什么场景？\n阶段同步器（Phaser）适用于什么场景？\n原生锁支持（LockSupport）适用于什么场景？\n有哪些同步队列可以用于线程池？\nExchanger交换器适用于什么场景？\n各种同步器在大厂面试中的综合运用怎么做？\n（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求\n02.赢在2021年金三银四的起跑线上\n\n### 阶段2\n\n线程的本质(操作系统与CPU是如何执行线程的)\n并发编程为什么充满挑战？\n并发编程的三大特性：可见性、有序性、原子性\nsynchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？\n无锁、偏向锁、轻量级锁、重量级锁升级过程\n悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁\n（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？\n（首次公开）工作线程数，设多少最合适？如何理解N*C*(1+C/W)的计算公式?","slug":"juc","published":1,"date":"2023-01-06T07:27:53.742Z","updated":"2023-01-06T07:27:53.742Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3ov000w92jj6wu0g145","content":"<h3 id=\"阶段1\"><a href=\"#阶段1\" class=\"headerlink\" title=\"阶段1\"></a>阶段1</h3><p>什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<p>什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<h3 id=\"阶段2\"><a href=\"#阶段2\" class=\"headerlink\" title=\"阶段2\"></a>阶段2</h3><p>线程的本质(操作系统与CPU是如何执行线程的)<br>并发编程为什么充满挑战？<br>并发编程的三大特性：可见性、有序性、原子性<br>synchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？<br>无锁、偏向锁、轻量级锁、重量级锁升级过程<br>悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁<br>（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？<br>（首次公开）工作线程数，设多少最合适？如何理解N<em>C</em>(1+C/W)的计算公式?</p>\n","site":{"data":{}},"length":789,"excerpt":"","more":"<h3 id=\"阶段1\"><a href=\"#阶段1\" class=\"headerlink\" title=\"阶段1\"></a>阶段1</h3><p>什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<p>什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？什么是JUC？<br>为什么CAS和AQS是JUC的核心？<br>ReentrantLock适用于什么场景？<br>门闩（Latch）同步器适用于什么场景？<br>篱笆（Barrier）同步器适用于什么场景？<br>信号量（Semaphore）同步器适用于什么场景？<br>阶段同步器（Phaser）适用于什么场景？<br>原生锁支持（LockSupport）适用于什么场景？<br>有哪些同步队列可以用于线程池？<br>Exchanger交换器适用于什么场景？<br>各种同步器在大厂面试中的综合运用怎么做？<br>（首次公开）通过阿里一道面试题理解大厂面试多线程代码题的要求<br>02.赢在2021年金三银四的起跑线上</p>\n<h3 id=\"阶段2\"><a href=\"#阶段2\" class=\"headerlink\" title=\"阶段2\"></a>阶段2</h3><p>线程的本质(操作系统与CPU是如何执行线程的)<br>并发编程为什么充满挑战？<br>并发编程的三大特性：可见性、有序性、原子性<br>synchronized JMM CAS AQS lock这些高频出现的面试概念究竟是什么？<br>无锁、偏向锁、轻量级锁、重量级锁升级过程<br>悲观锁/乐观锁 共享锁/独占锁 整体锁/分段锁 可重入锁/不可重入锁<br>（首次公开）银弹已经诞生？有没有一种一定能保证线程安全的终极代码？<br>（首次公开）工作线程数，设多少最合适？如何理解N<em>C</em>(1+C/W)的计算公式?</p>\n"},{"title":"money","date":"2021-05-18T03:43:10.000Z","_content":"\n\n文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。\n\n\n\n![图片](https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1)\n\n萌大，你昨天的文章有标题党之嫌。\n\n我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。\n\n\n\n说几个指标，供大家参考。\n\n第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。\n\n\n\n第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。\n\n\n\n第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。\n\n\n\n第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。\n\n\n\n几个板块的分析。\n\n消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。\n\n上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。\n\n新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。\n\n\n\n国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。\n\n嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。\n\n汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！\n\n分享、点赞、在看 顺手三连越来越有钱！\n\n喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。","source":"_posts/money.md","raw":"---\ntitle: money\ndate: 2021-05-18 11:43:10\ntags: [挣钱,内容]\n---\n\n\n文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。\n\n\n\n![图片](https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1)\n\n萌大，你昨天的文章有标题党之嫌。\n\n我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。\n\n\n\n说几个指标，供大家参考。\n\n第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。\n\n\n\n第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。\n\n\n\n第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。\n\n\n\n第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。\n\n\n\n几个板块的分析。\n\n消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。\n\n上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。\n\n新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。\n\n\n\n国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。\n\n嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。\n\n汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！\n\n分享、点赞、在看 顺手三连越来越有钱！\n\n喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。","slug":"money","published":1,"updated":"2023-01-06T07:27:53.742Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3ow000y92jjhwrd69lm","content":"<p>文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。</p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"图片\"></p>\n<p>萌大，你昨天的文章有标题党之嫌。</p>\n<p>我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。</p>\n<p>说几个指标，供大家参考。</p>\n<p>第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。</p>\n<p>第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。</p>\n<p>第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。</p>\n<p>第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。</p>\n<p>几个板块的分析。</p>\n<p>消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。</p>\n<p>上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。</p>\n<p>新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。</p>\n<p>国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。</p>\n<p>嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。</p>\n<p>汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！</p>\n<p>分享、点赞、在看 顺手三连越来越有钱！</p>\n<p>喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。</p>\n","site":{"data":{}},"length":1211,"excerpt":"","more":"<p>文|自媒体：萌萌的猪猪侠。欢迎大家关注订阅我。</p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_jpg/3ue3ibjeAauKnicZA7hslOibsCKWOKicpDNtYTJZbaMJZIdToLovAA9JdZiaQIs7NTJVyQHQVJDicET47HcRE0bs0ZEA/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"图片\"></p>\n<p>萌大，你昨天的文章有标题党之嫌。</p>\n<p>我：是吧，但这是句实话。基金投资并不是适合每个人的，也不是每个人参与就能赚钱。即便是跟投组合，其实自主权还是在你自己手里，如果你不能坚持、坚定，遇到小波澜，大风浪就清仓，那确实没有机会享受风雨之后的彩虹。</p>\n<p>说几个指标，供大家参考。</p>\n<p>第一，创业板昨日涨幅2.6%，突破了前期高点。这个与我之前的研判不一致，我设想的是创业板可能会继续下跌回调。再次验证了普通投资者很难预测短期的走势，前几天清仓创业板，加仓新能源标的，从目前这几天的表现来看，还行，算是操作对了。创业板50指数中，也是重仓新能源板块的，只是我们通过转换，更明确的提高了新能源板块的配置比例。</p>\n<p>第二，近两日成交量有所提高，虽然不及年初，但也有回暖的趋势。创业板成交量1870亿元，上证指数成交量4244亿元，深证成指成交量5055亿元，总成交量过万亿。我想，今天大家还是期望继续涨，这就是赚钱效应。</p>\n<p>第三，萌萌的猪猪侠国内组合通过昨天的大涨，今年亏损基本收复（期间加大定投额度，功不可没），大概还亏不到两千元，距离赚钱，仅仅一步之遥。一般这个时候，市场可能就要回调一下。这是我的猜想，我也希望这个猜想，继续被打脸，毕竟赚钱是让所有人都开心的事儿。</p>\n<p>第四，昨天的文章不知道是不是因为标题的原因，阅读量创下了近期的新高，从阅读指数上来说，体现了市场的好转。如果明天阅读量继续提高，那看来大多数人都开始赚钱了。阅读量背后，就是人心，人心就是市场。</p>\n<p>几个板块的分析。</p>\n<p>消费板块，以白酒和食品饮料为主，继续看好和持有。必选消费保持持仓比例，按期定投。</p>\n<p>上证50指数，比如持仓的易方达上证50指数，前段时间回调幅度较大，有朋友问是否单独补仓，我觉得没有必要。按计划定投吧。上证50的定位就是压舱石，压舱石有就行了，不用刻意增加。</p>\n<p>新能源板块，通过前段时间的加仓，比例也差不多了，继续持有，让子弹飞一会。目前，农银新能源主题还亏3%，汇添富中证新能源汽车，已经持平。浦银安盛新经济结构混合已经开始赚钱。</p>\n<p>国寿安保策略精选混合，兑现了新能源标的收益，整体风格偏向防御。我本来寻思是不是得换个先锋，转念一想，有人当前锋就得有人当后卫，何况我目前持有这个标的，能当后卫，也有能力当前锋呢。去年7月的时候，吴总还是有很超前的意识，提前布局了新能源。这次，我继续观察，期待。</p>\n<p>嘉实港股通新经济指数A和交银中证海外中国互联网指数基金最近在历劫，既然是历劫，就有扛过去的时候。前者，我们继续保持现有仓位，配合对冲。中概互联，最近无法加仓，我们会加仓萌萌的猪猪侠海外组合中其他标的，通过被动方式适度降低中概互联持仓比例。</p>\n<p>汇报完毕，投资有风险，入市需谨慎。不要因为这两天赚了点钱就开始冒进，往前冲。日子还长，慢慢来，星辰大海，无我利他，我们一起冲鸭！</p>\n<p>分享、点赞、在看 顺手三连越来越有钱！</p>\n<p>喜欢，记得关注，分享我们的微信公众号：萌萌的猪猪侠。</p>\n"},{"title":"one day","date":"2022-11-04T08:32:02.000Z","_content":"\n\n1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……","source":"_posts/one-day.md","raw":"---\ntitle: one day\ndate: 2022-11-04 16:32:02\ntags: life \n---\n\n\n1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……","slug":"one-day","published":1,"updated":"2023-02-16T15:20:50.702Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3oy001092jj3hrv760k","content":"<p>1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……</p>\n","site":{"data":{}},"length":280,"excerpt":"","more":"<p>1988年7月15日，一所大学为毕业生的狂热所充盈。籍着这股躁动，轻浮的德克斯特（吉姆·斯特吉斯 Jim Sturgess 饰）穿过层层人墙，寻找可以与之共度这最后狂欢与浪漫之夜的尤物。他将目光锁定在艾玛（安妮·海瑟薇 Anne Hathaway 饰）的身上，一个来自普 通工薪家庭的聪慧女孩。然而短短的交流过后，他们之间什么也没发生，却又注定改变了彼此的一生。在之后的岁月里，两人以友人知己的身份时聚时散，彼此分享着人生的苦辣酸甜和各种感悟。德克斯特经历着事业和婚姻的起落，艾玛品味着底层人生的辛酸。他们是远在天边心也紧紧相连的知己，是深锁心中最为笃真却相隔最远的爱恋……</p>\n"},{"title":"你真的会用reids吗？","date":"2020-12-18T14:29:34.000Z","_content":"# 你真的会用redis吗？\n\n\n什么时候用redis呢?\n## 缓存\n\n缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。\n\n## 排行榜\n\n很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 \n\n\n## 计数器\n什么是计数器？\n电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。\n\nredis提供的incr命令来实现计数器，内存操作性能非常好。\n\n非常适用于这种场景。\n\n## 分布式会话\n\n集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。\n\n## 分布式锁\n\n\n\n很多互联网技术中都实现了 分布式技术。\n\n分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。\n\n并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。\n\n我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。\n\n## 社交网络\n\n点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 \n\nredis提供的哈希、集合等数据结构能很方便的实现这些功能\n\n## 最新列表\n\nLpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可\n\n## 消息系统\n\nMQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。\n\n\n\n\n\n","source":"_posts/redisabout.md","raw":"---\ntitle: 你真的会用reids吗？\ndate: 2020-12-18 22:29:34\ntags: [redis，缓存] \n---\n# 你真的会用redis吗？\n\n\n什么时候用redis呢?\n## 缓存\n\n缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。\n\n## 排行榜\n\n很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 \n\n\n## 计数器\n什么是计数器？\n电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。\n\nredis提供的incr命令来实现计数器，内存操作性能非常好。\n\n非常适用于这种场景。\n\n## 分布式会话\n\n集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。\n\n## 分布式锁\n\n\n\n很多互联网技术中都实现了 分布式技术。\n\n分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。\n\n并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。\n\n我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。\n\n## 社交网络\n\n点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 \n\nredis提供的哈希、集合等数据结构能很方便的实现这些功能\n\n## 最新列表\n\nLpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可\n\n## 消息系统\n\nMQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。\n\n\n\n\n\n","slug":"redisabout","published":1,"updated":"2023-02-16T15:27:00.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3oz001292jj7fkb9pfx","content":"<h1 id=\"你真的会用redis吗？\"><a href=\"#你真的会用redis吗？\" class=\"headerlink\" title=\"你真的会用redis吗？\"></a>你真的会用redis吗？</h1><p>什么时候用redis呢?</p>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><p>缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。</p>\n<h2 id=\"排行榜\"><a href=\"#排行榜\" class=\"headerlink\" title=\"排行榜\"></a>排行榜</h2><p>很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 </p>\n<h2 id=\"计数器\"><a href=\"#计数器\" class=\"headerlink\" title=\"计数器\"></a>计数器</h2><p>什么是计数器？<br>电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。</p>\n<p>redis提供的incr命令来实现计数器，内存操作性能非常好。</p>\n<p>非常适用于这种场景。</p>\n<h2 id=\"分布式会话\"><a href=\"#分布式会话\" class=\"headerlink\" title=\"分布式会话\"></a>分布式会话</h2><p>集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。</p>\n<h2 id=\"分布式锁\"><a href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"></a>分布式锁</h2><p>很多互联网技术中都实现了 分布式技术。</p>\n<p>分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。</p>\n<p>并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。</p>\n<p>我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。</p>\n<h2 id=\"社交网络\"><a href=\"#社交网络\" class=\"headerlink\" title=\"社交网络\"></a>社交网络</h2><p>点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 </p>\n<p>redis提供的哈希、集合等数据结构能很方便的实现这些功能</p>\n<h2 id=\"最新列表\"><a href=\"#最新列表\" class=\"headerlink\" title=\"最新列表\"></a>最新列表</h2><p>Lpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可</p>\n<h2 id=\"消息系统\"><a href=\"#消息系统\" class=\"headerlink\" title=\"消息系统\"></a>消息系统</h2><p>MQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。</p>\n","site":{"data":{}},"length":789,"excerpt":"","more":"<h1 id=\"你真的会用redis吗？\"><a href=\"#你真的会用redis吗？\" class=\"headerlink\" title=\"你真的会用redis吗？\"></a>你真的会用redis吗？</h1><p>什么时候用redis呢?</p>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><p>缓存现在是几乎每个中大型网站的比啥技。合理的利用缓存不仅能提升网站的访问速度，还能大大降低数据库压力。 redis的key-value键值过期机制， 提供了灵活的键淘汰策略 ，所以redis应用场景特别的多。</p>\n<h2 id=\"排行榜\"><a href=\"#排行榜\" class=\"headerlink\" title=\"排行榜\"></a>排行榜</h2><p>很多网站都有排行榜，如京东的月度销量，商品的最新排行。 redis提供的有序集合数据类型能实现各种复杂排行榜的应用。 </p>\n<h2 id=\"计数器\"><a href=\"#计数器\" class=\"headerlink\" title=\"计数器\"></a>计数器</h2><p>什么是计数器？<br>电商网站的浏览量、视频的播放量 。为了保证实时有效，每次浏览都得+1. 而此时如果并发量比较高的，每次访问数据库 无是种挑战和压力。</p>\n<p>redis提供的incr命令来实现计数器，内存操作性能非常好。</p>\n<p>非常适用于这种场景。</p>\n<h2 id=\"分布式会话\"><a href=\"#分布式会话\" class=\"headerlink\" title=\"分布式会话\"></a>分布式会话</h2><p>集群模式下，在应用不多的情况下，一般使用容器自带的session复制功能就能满足，当应用相对复杂的系统中，就会搭建以redisd等内存数据库为中心的缓存session服务 ，redis 不再由容器管理，而是ssession服务以及内存管理。</p>\n<h2 id=\"分布式锁\"><a href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"></a>分布式锁</h2><p>很多互联网技术中都实现了 分布式技术。</p>\n<p>分布式技术带来的技术挑战是对同一个资源的并发访问， 如全局id，减库存，秒杀场景。</p>\n<p>并发量不大的场景可以使用乐观锁，悲观锁。但是并发量高的场合中，数据路锁的思路不太理想，降低了db的性能。</p>\n<p>我们这时候可以利用redis的setnx 编写分布式的锁。如果设置返回 1 说明设置成功，否则获取锁失败。</p>\n<h2 id=\"社交网络\"><a href=\"#社交网络\" class=\"headerlink\" title=\"社交网络\"></a>社交网络</h2><p>点赞 踩 关注/被关注 共同好友等社交网络基本要求下，传统的关系数据库很难存储。 </p>\n<p>redis提供的哈希、集合等数据结构能很方便的实现这些功能</p>\n<h2 id=\"最新列表\"><a href=\"#最新列表\" class=\"headerlink\" title=\"最新列表\"></a>最新列表</h2><p>Lpush可以在列表头部插入一个内容id作为关键字， LTRIM可以限制数量。这样列表永远为n个id，无需查询最新的列表，直接根据id去找对应的内容即可</p>\n<h2 id=\"消息系统\"><a href=\"#消息系统\" class=\"headerlink\" title=\"消息系统\"></a>消息系统</h2><p>MQ-消息队列是大型网站必备的中间件。 主要用于业务解耦 流量削峰及异步处理，可实现简单的消息系统。</p>\n"},{"title":"springboot-docker-demo","date":"2023-01-05T06:21:01.000Z","_content":"\n docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","source":"_posts/springboot-docker-demo.md","raw":"---\ntitle: springboot-docker-demo\ndate: 2023-01-05 14:21:01\ntags: docker \n---\n\n docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","slug":"springboot-docker-demo","published":1,"updated":"2023-02-16T15:20:50.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3p1001492jjai7dejma","content":"<p> docker run springboot</p>\n<h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n","site":{"data":{}},"length":1346,"excerpt":"","more":"<p> docker run springboot</p>\n<h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n"},{"title":"springboot-docker","date":"2023-01-07T07:30:35.000Z","_content":"# docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","source":"_posts/springboot-docker.md","raw":"---\ntitle: springboot-docker\ndate: 2023-01-07 15:30:35\ntags: docker\n---\n# docker run springboot\n\n## 创建springboot 项目\n\n创建项目 从 https://start.spring.io/\n\n启动类配置如下：`\nsrc/main/java/hello/Application.java\n`\n\n    package hello;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @SpringBootApplication\n    @RestController\n    public class DemoApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);\n        }\n    \n        //return current time\n        @RequestMapping(\"/time\")\n        public String time() {\n            return new Date().toString();\n        }\n    \n    }\n\n## docker 启动\n### dockerfile 编写\n```dockerfile\nFROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n```\n\n1. 将app.jar拷贝到容器\n2. 引用 jdk\n\n### build&run\n\n`docker build -t ddx/demo`\n\n```sh\n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nddx/demo     latest    1b4b076fd19f   2 hours ago   122MB\nmysql        latest    7484689f290f   4 weeks ago   538MB\njenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB\n\n```\n\n`docker run -p 8080:8080 `\n\n```sh\n➜  ~ docker ps\nCONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES\n62fa2f9c4bfc   ddx/demo   \"java -jar /app.jar\"   About an hour ago   Up About an hour   0.0.0.0:8080->8080/tcp hardcore_zhukovsky\n```\n\n访问 localhost:8080/time\n\n    ➜  ~ curl localhost:8080/time\n    Fri Jan 06 06:18:31 GMT 2023%\n\n本文参考： https://spring.io/guides/gs/spring-boot-docker/\n\n\n","slug":"springboot-docker","published":1,"updated":"2023-02-16T15:20:50.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3p1001692jj6ay6cskr","content":"<h1 id=\"docker-run-springboot\"><a href=\"#docker-run-springboot\" class=\"headerlink\" title=\"docker run springboot\"></a>docker run springboot</h1><h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n","site":{"data":{}},"length":1346,"excerpt":"","more":"<h1 id=\"docker-run-springboot\"><a href=\"#docker-run-springboot\" class=\"headerlink\" title=\"docker run springboot\"></a>docker run springboot</h1><h2 id=\"创建springboot-项目\"><a href=\"#创建springboot-项目\" class=\"headerlink\" title=\"创建springboot 项目\"></a>创建springboot 项目</h2><p>创建项目 从 <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>启动类配置如下：<code>src/main/java/hello/Application.java</code></p>\n<pre><code>package hello;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class DemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(DemoApplication.class, args);\n    &#125;\n\n    //return current time\n    @RequestMapping(&quot;/time&quot;)\n    public String time() &#123;\n        return new Date().toString();\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"docker-启动\"><a href=\"#docker-启动\" class=\"headerlink\" title=\"docker 启动\"></a>docker 启动</h2><h3 id=\"dockerfile-编写\"><a href=\"#dockerfile-编写\" class=\"headerlink\" title=\"dockerfile 编写\"></a>dockerfile 编写</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ARG</span> JAR_FILE=target/*.jar</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"variable\">$&#123;JAR_FILE&#125;</span> app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>将app.jar拷贝到容器</li>\n<li>引用 jdk</li>\n</ol>\n<h3 id=\"build-amp-run\"><a href=\"#build-amp-run\" class=\"headerlink\" title=\"build&amp;run\"></a>build&amp;run</h3><p><code>docker build -t ddx/demo</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker images</span><br><span class=\"line\">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">ddx/demo     latest    1b4b076fd19f   2 hours ago   122MB</span><br><span class=\"line\">mysql        latest    7484689f290f   4 weeks ago   538MB</span><br><span class=\"line\">jenkins      2.60.3    cd14cecfdb3a   4 years ago   696MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>docker run -p 8080:8080 </code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE      COMMAND                CREATED             STATUS             PORTS                    NAMES</span><br><span class=\"line\">62fa2f9c4bfc   ddx/demo   <span class=\"string\">&quot;java -jar /app.jar&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:8080-&gt;8080/tcp hardcore_zhukovsky</span><br></pre></td></tr></table></figure>\n\n<p>访问 localhost:8080/time</p>\n<pre><code>➜  ~ curl localhost:8080/time\nFri Jan 06 06:18:31 GMT 2023%</code></pre>\n<p>本文参考： <a href=\"https://spring.io/guides/gs/spring-boot-docker/\">https://spring.io/guides/gs/spring-boot-docker/</a></p>\n"},{"title":"springmvcvswebflux","date":"2023-01-06T07:52:44.000Z","_content":"\nSpring WebFlux 和 Spring MVC 对比分析\n\n什么是 Spring WebFlux\n\nSpring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.\n\nSpring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。\n\n\n\nSpring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.\n\nSpring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。\n\nWebFlux 的优势&提升性能?\n\n\n\nReactive and non-blocking generally do not make applications run faster.\n\nWebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。\n\nWebFlux 应用场景\n\nPS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。\n\n\n\n\n\n\n\n选 WebFlux 还是 Spring MVC?\n\nWebFlux 不是 Spring MVC 的替代方案！\n\n\n\n首先是吞吐量\n\n随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示\n\n\n\n吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。\n","source":"_posts/springmvcvswebflux.md","raw":"---\ntitle: springmvcvswebflux\ndate: 2023-01-06 15:52:44\ntags: [springmvc,weblux]\n---\n\nSpring WebFlux 和 Spring MVC 对比分析\n\n什么是 Spring WebFlux\n\nSpring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.\n\nSpring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。\n\n\n\nSpring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.\n\nSpring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。\n\nWebFlux 的优势&提升性能?\n\n\n\nReactive and non-blocking generally do not make applications run faster.\n\nWebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。\n\nWebFlux 应用场景\n\nPS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。\n\n\n\n\n\n\n\n选 WebFlux 还是 Spring MVC?\n\nWebFlux 不是 Spring MVC 的替代方案！\n\n\n\n首先是吞吐量\n\n随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示\n\n\n\n吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。\n","slug":"springmvcvswebflux","published":1,"updated":"2023-02-16T15:20:50.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3p3001992jjddqmaghe","content":"<p>Spring WebFlux 和 Spring MVC 对比分析</p>\n<p>什么是 Spring WebFlux</p>\n<p>Spring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.</p>\n<p>Spring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。</p>\n<p>Spring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.</p>\n<p>Spring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。</p>\n<p>WebFlux 的优势&amp;提升性能?</p>\n<p>Reactive and non-blocking generally do not make applications run faster.</p>\n<p>WebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。</p>\n<p>WebFlux 应用场景</p>\n<p>PS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。</p>\n<p>选 WebFlux 还是 Spring MVC?</p>\n<p>WebFlux 不是 Spring MVC 的替代方案！</p>\n<p>首先是吞吐量</p>\n<p>随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示</p>\n<p>吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。</p>\n","site":{"data":{}},"length":869,"excerpt":"","more":"<p>Spring WebFlux 和 Spring MVC 对比分析</p>\n<p>什么是 Spring WebFlux</p>\n<p>Spring MVC is built on the Servlet API and uses a synchronous blocking I/O architecture whth a one-request-per-thread model.</p>\n<p>Spring MVC 构建于 Servlet API 之上，使用的是同步阻塞式 I/O 模型，什么是同步阻塞式 I/O 模型呢？就是说，每一个请求对应一个线程去处理。</p>\n<p>Spring WebFlux is a non-blocking web framework built from the ground up to take advantage of multi-core, next-generation processors and handle massive numbers of concurrent connections.</p>\n<p>Spring WebFlux 是一个异步非阻塞式的 Web 框架，它能够充分利用多核 CPU 的硬件资源去处理大量的并发请求。</p>\n<p>WebFlux 的优势&amp;提升性能?</p>\n<p>Reactive and non-blocking generally do not make applications run faster.</p>\n<p>WebFlux 并不能使接口的响应时间缩短，它仅仅能够提升吞吐量和伸缩性。</p>\n<p>WebFlux 应用场景</p>\n<p>PS: IO 密集型包括：磁盘IO密集型, 网络IO密集型，微服务网关就属于网络 IO 密集型，使用异步非阻塞式编程模型，能够显著地提升网关对下游服务转发的吞吐量。</p>\n<p>选 WebFlux 还是 Spring MVC?</p>\n<p>WebFlux 不是 Spring MVC 的替代方案！</p>\n<p>首先是吞吐量</p>\n<p>随着每个请求的被处理时间越长、并发请求的量级越大，WebFlux 相比 SpringMVC 的整体吞吐量高的越多，平均的请求响应时间越短。如下图所示</p>\n<p>吞吐量大了，意味着单位时间内可以处理的请求数变多了，比如原来 1w 个请求 10 秒处理完，现在 10w 个请求也是 10 秒处理完，就代表吞吐上去了。注意，是吞吐上去了，不代表单次请求快了，单次请求的速度和原来一样。</p>\n"},{"title":"xxb-奥密克戎","date":"2023-01-06T07:47:17.000Z","_content":"\nXBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!\n依我看接下来疫情的走势，就冲这个名字大家一定能发大财！\n如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。\n所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！\n作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！\n记住，瞎哔哔是一种人生态度！","source":"_posts/xxb.md","raw":"---\ntitle: xxb-奥密克戎\ndate: 2023-01-06 15:47:17\ntags: 疫情 xbb 人间清醒\n---\n\nXBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!\n依我看接下来疫情的走势，就冲这个名字大家一定能发大财！\n如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。\n所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！\n作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！\n记住，瞎哔哔是一种人生态度！","slug":"xxb","published":1,"updated":"2023-02-17T00:54:40.689Z","_id":"cle7th3q1002392jjgoakht2z","comments":1,"layout":"post","photos":[],"link":"","content":"<p>XBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!<br>依我看接下来疫情的走势，就冲这个名字大家一定能发大财！<br>如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。<br>所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！<br>作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！<br>记住，瞎哔哔是一种人生态度！</p>\n","site":{"data":{}},"length":183,"excerpt":"","more":"<p>XBB 奥密克戎的新版本，瞎哔哔 这病毒的名字起的真好!<br>依我看接下来疫情的走势，就冲这个名字大家一定能发大财！<br>如果人一旦正经八百，对结果很在意的时候，反而达不到预期的效果。<br>所以处在各行各业的你都要抱着瞎哔哔的心态，做好了赚钱了，是你牛批，做不好没赚到钱这一定是疫情搞得鬼！<br>作为打工人，也要保持瞎比比的松驰感，别人躺平我卷！别人卷的时候我躺平！<br>记住，瞎哔哔是一种人生态度！</p>\n"},{"title":"分布式事务","date":"2020-12-05T07:12:55.000Z","_content":"\n\n\n# 分布式事务\n## 水电费dd\n### Seata","source":"_posts/分布式事务.md","raw":"---\ntitle: 分布式事务\ndate: 2020-12-05 15:12:55\ntags: [挣钱,内容]\n---\n\n\n\n# 分布式事务\n## 水电费dd\n### Seata","slug":"分布式事务","published":1,"updated":"2023-01-06T07:27:53.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3q2002492jj5c1n107q","content":"<h1 id=\"分布式事务\"><a href=\"#分布式事务\" class=\"headerlink\" title=\"分布式事务\"></a>分布式事务</h1><h2 id=\"水电费dd\"><a href=\"#水电费dd\" class=\"headerlink\" title=\"水电费dd\"></a>水电费dd</h2><h3 id=\"Seata\"><a href=\"#Seata\" class=\"headerlink\" title=\"Seata\"></a>Seata</h3>","site":{"data":{}},"length":15,"excerpt":"","more":"<h1 id=\"分布式事务\"><a href=\"#分布式事务\" class=\"headerlink\" title=\"分布式事务\"></a>分布式事务</h1><h2 id=\"水电费dd\"><a href=\"#水电费dd\" class=\"headerlink\" title=\"水电费dd\"></a>水电费dd</h2><h3 id=\"Seata\"><a href=\"#Seata\" class=\"headerlink\" title=\"Seata\"></a>Seata</h3>"},{"title":"我的规划","_content":"\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n\n\n\n\n\n\n\n\n\n\n![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)","source":"_posts/我的反思.md","raw":"---\ntitle: 我的规划\ntags: [hexo,性能测试]\ncategories: 工作\n# toc: true\n---\n\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n\n\n\n\n\n\n\n\n\n\n![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)","slug":"我的反思","published":1,"date":"2023-02-16T15:20:50.706Z","updated":"2023-02-16T15:20:50.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3q3002692jjcoyhb1sx","content":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n<p>![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)</p>\n","site":{"data":{}},"length":188,"excerpt":"","more":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n<p>![image-20210625103901356](/Users/houxiaoqiang/Library/Application Support/typora-user-images/image-20210625103901356.png)</p>\n"},{"title":"搬运内容挣钱怎么了","date":"2020-12-05T07:12:55.000Z","_content":"\n### 搬运赚钱是最简单的\n\n搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。\n\n这是抄袭吗？我只知道**它的内容在搜索引擎看来就是原创。**\n\n其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。\n\n![img](https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg)\n\n油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。\n\n但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。\n\n这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。\n\n比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。\n\n![img](https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg)\n\n以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。\n\n还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。\n\n另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。\n\n说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。\n\n![img](https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png)\n\n特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。\n\n当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。\n\n但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。\n\n### 让你们上来就写原创是非常不现实，但有捷径\n\n1、把国外的文章，翻译后，再用你理解的二次加工就OK了。\n\n2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。\n\n别觉得是我无耻，很多**十万、百万大号都是从模仿做起来的，算是行业潜规则了。**\n\n就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。\n\n就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，**如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。**\n\n其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。\n\n生意的本质就你不知道，**我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。**\n\n再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。\n\n最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。\n\n如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！\n\n接着**退出屏幕主页面，打开还没看完的电视剧、短视频。**\n\n互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。\n\n赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记**执行力才是最好的技巧**。\n\n最后说下如何把**风险规避到最小？**\n\n1、抄死人的作品。\n\n2、古代N年前的作品。\n\n3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。\n\n4、抄量级小、没啥影响力的个人创作者，比如我……\n\n就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。\n\n至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。\n\n","source":"_posts/搬运内容挣钱怎么了.md","raw":"---\ntitle: 搬运内容挣钱怎么了\ndate: 2020-12-05 15:12:55\ntags: [挣钱,内容]\n---\n\n### 搬运赚钱是最简单的\n\n搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。\n\n这是抄袭吗？我只知道**它的内容在搜索引擎看来就是原创。**\n\n其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。\n\n![img](https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg)\n\n油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。\n\n但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。\n\n这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。\n\n比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。\n\n![img](https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg)\n\n以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。\n\n还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。\n\n另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。\n\n说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。\n\n![img](https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png)\n\n特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。\n\n当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。\n\n但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。\n\n### 让你们上来就写原创是非常不现实，但有捷径\n\n1、把国外的文章，翻译后，再用你理解的二次加工就OK了。\n\n2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。\n\n别觉得是我无耻，很多**十万、百万大号都是从模仿做起来的，算是行业潜规则了。**\n\n就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。\n\n就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，**如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。**\n\n其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。\n\n生意的本质就你不知道，**我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。**\n\n再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。\n\n最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。\n\n如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！\n\n接着**退出屏幕主页面，打开还没看完的电视剧、短视频。**\n\n互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。\n\n赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记**执行力才是最好的技巧**。\n\n最后说下如何把**风险规避到最小？**\n\n1、抄死人的作品。\n\n2、古代N年前的作品。\n\n3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。\n\n4、抄量级小、没啥影响力的个人创作者，比如我……\n\n就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。\n\n至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。\n\n","slug":"搬运内容挣钱怎么了","published":1,"updated":"2023-01-06T07:27:53.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3q4002892jj21vbhe6p","content":"<h3 id=\"搬运赚钱是最简单的\"><a href=\"#搬运赚钱是最简单的\" class=\"headerlink\" title=\"搬运赚钱是最简单的\"></a>搬运赚钱是最简单的</h3><p>搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。</p>\n<p>这是抄袭吗？我只知道<strong>它的内容在搜索引擎看来就是原创。</strong></p>\n<p>其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg\" alt=\"img\"></p>\n<p>油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。</p>\n<p>但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。</p>\n<p>这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。</p>\n<p>比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg\" alt=\"img\"></p>\n<p>以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。</p>\n<p>还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。</p>\n<p>另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。</p>\n<p>说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。</p>\n<p><img src=\"https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png\" alt=\"img\"></p>\n<p>特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。</p>\n<p>当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。</p>\n<p>但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。</p>\n<h3 id=\"让你们上来就写原创是非常不现实，但有捷径\"><a href=\"#让你们上来就写原创是非常不现实，但有捷径\" class=\"headerlink\" title=\"让你们上来就写原创是非常不现实，但有捷径\"></a>让你们上来就写原创是非常不现实，但有捷径</h3><p>1、把国外的文章，翻译后，再用你理解的二次加工就OK了。</p>\n<p>2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。</p>\n<p>别觉得是我无耻，很多<strong>十万、百万大号都是从模仿做起来的，算是行业潜规则了。</strong></p>\n<p>就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。</p>\n<p>就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，<strong>如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。</strong></p>\n<p>其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。</p>\n<p>生意的本质就你不知道，<strong>我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。</strong></p>\n<p>再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。</p>\n<p>最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。</p>\n<p>如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！</p>\n<p>接着<strong>退出屏幕主页面，打开还没看完的电视剧、短视频。</strong></p>\n<p>互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。</p>\n<p>赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记<strong>执行力才是最好的技巧</strong>。</p>\n<p>最后说下如何把<strong>风险规避到最小？</strong></p>\n<p>1、抄死人的作品。</p>\n<p>2、古代N年前的作品。</p>\n<p>3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。</p>\n<p>4、抄量级小、没啥影响力的个人创作者，比如我……</p>\n<p>就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。</p>\n<p>至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。</p>\n","site":{"data":{}},"length":1688,"excerpt":"","more":"<h3 id=\"搬运赚钱是最简单的\"><a href=\"#搬运赚钱是最简单的\" class=\"headerlink\" title=\"搬运赚钱是最简单的\"></a>搬运赚钱是最简单的</h3><p>搬运分很多种，比如把国内视频搬到国外，国外搬到国内，说到把国外内容搬到国内最有名的平台就是煎蛋网，就是把国外一些有用、有趣的文章，翻译成中文发到网站上。</p>\n<p>这是抄袭吗？我只知道<strong>它的内容在搜索引擎看来就是原创。</strong></p>\n<p>其中油管上还是相当多的好东西，去油管搞个账号去，讲gu票的，一般千次播放的单价在5美金往上。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-6d4974d287306f4800c1812929ad27c3_720w.jpg\" alt=\"img\"></p>\n<p>油管上凡是跟钱，财经，商业故事有关的，千次播放的单价都挺高的，因为投广告的，都是有钱的主，游戏类的，金rong财经类的，单价都高。</p>\n<p>但是切记不能搬运，版权识别厉害，去抖音找一些小众的博主，模仿他的文案。</p>\n<p>这里肯定有很多人怕讲中文用户看不懂，其实想多了，中文人口基数有这么大，国外的华人，香G，台湾的人，都喜欢上油管，包括脱口秀大会，搬运到油管上的，很多都过百万播放。</p>\n<p>比如下面这个就是讲中文也有几百万订阅的。期期视频都是上百万，这是做得特别好的。</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-8b5ce7b7be42bc8ce8b9faff5ca0f8dc_720w.jpg\" alt=\"img\"></p>\n<p>以及A平台搬到B平台的社交网站或自媒体上，比方你在头条发了个文章，别人在另外几十个平台搬运你文章，平台只会根据本平台有没有相似内容来判断是否原创，不可能全网跨平台去检查，毕竟每天N多内容要审核，人工成本太大了。</p>\n<p>还有把公众号内容搬到头条，个人网站上，把文章变成音频、视频、图片、书籍。</p>\n<p>另外想让这些内容价格翻倍的话？得走专业化、课程化、订制化路线。</p>\n<p>说一下，在17、18年很多人通过这个方式赚了点小钱，开始组建工作室批量操作，或者在网上找几个会剪辑的人，用类似有专自媒体这种软件去分发各大平台，赚平台的收益分成。</p>\n<p><img src=\"https://pic2.zhimg.com/80/v2-3386aee70ee0c7bfed737c9d7c237835_720w.png\" alt=\"img\"></p>\n<p>特别是电影剪辑视频最容易火，现在依旧存在，只是都发抖音、快手，西瓜视频，哔哩哔哩上了。</p>\n<p>当然搬运是有一定技巧的，比如要先修改视频的一些编码参数，具体操作搜网上，有相关教程。</p>\n<p>但从长久来讲，推荐大家先去做伪原创，严格来讲也算原创，看你二次修改到什么程度，在写的过程中，已经开始建立了你的知识体系，后面看到相关的文章内容，你就能脱口而出，因为这些知识你看过并掌握了，就属于原创了。</p>\n<h3 id=\"让你们上来就写原创是非常不现实，但有捷径\"><a href=\"#让你们上来就写原创是非常不现实，但有捷径\" class=\"headerlink\" title=\"让你们上来就写原创是非常不现实，但有捷径\"></a>让你们上来就写原创是非常不现实，但有捷径</h3><p>1、把国外的文章，翻译后，再用你理解的二次加工就OK了。</p>\n<p>2、把音频、视频平台，用讯飞语记根据声音转化成文字，还有公众号、Q空间、朋友圈好友发布的内容，某信群别人发的聊天内容、文章，都能整理或二次修改成一篇文章，对于搜索引擎，就是原创首发。</p>\n<p>别觉得是我无耻，很多<strong>十万、百万大号都是从模仿做起来的，算是行业潜规则了。</strong></p>\n<p>就拿我们上学，也是要朗读名著、别人的优秀十佳作文？，课本内容都统一，老师还鼓励我们要向文章写得好的同学去学习，本质上也是模仿。</p>\n<p>就是先让你阅读一定基础量的文章，渐渐形成知识体系，再用你理解的讲出来，<strong>如果非要说是抄袭，那大家从小到大都在抄袭，只不过有的人抄得比较厉害罢了。</strong></p>\n<p>其中，我建议搬运或二次修改到个人网站上，因为网站是你的，自个儿说了算，最多就删文章，或者找那些不出名的读者，一起运营或买下其版权，也是个低成本高效的方法，再不济雇几个大学生伪原创，一天十篇太简单了。</p>\n<p>生意的本质就你不知道，<strong>我知道就能赚你钱，如一个产品换个地方卖，价格就上来了。</strong></p>\n<p>再比如一篇国外文章在国外很多人知道，发到国内，至少99%的人不知道，更别说看过原文。</p>\n<p>最重要的是行动。很多人都是整天想搞钱，但就只是躺在床上想，想了一个又一个项目，就是不行动。</p>\n<p>如果我没猜错，很多人看完这篇文章后心里想：又是一推大道理和废话！</p>\n<p>接着<strong>退出屏幕主页面，打开还没看完的电视剧、短视频。</strong></p>\n<p>互联网上赚钱就是把东边的东西弄到西边卖，西边弄到东边卖，只是有的人搬得很厉害。</p>\n<p>赚钱是简单的，很多人总追求所谓捷径和技巧，总忘记<strong>执行力才是最好的技巧</strong>。</p>\n<p>最后说下如何把<strong>风险规避到最小？</strong></p>\n<p>1、抄死人的作品。</p>\n<p>2、古代N年前的作品。</p>\n<p>3、抄国外，不说现在，即使以后，99%的人都不会刷到国外的文章。</p>\n<p>4、抄量级小、没啥影响力的个人创作者，比如我……</p>\n<p>就是作者本身没啥牛逼的实力，前期你抄他，维权成本高，懒得去管你，但后期你模仿他赚到钱，跟他打招呼说下，发个红包表达下心意，懂点人情世故的都不会去追究，毕竟新人的处境，我都懂。</p>\n<p>至于如何变现？在这个内容+流量为王的时代，根本不愁没法变现。</p>\n"},{"title":"hexo-generator-search","toc":true,"_content":"\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","source":"_posts/test.md","raw":"---\ntitle: hexo-generator-search\ntags: [hexo,性能测试]\ncategories: 工具\ntoc: true\n---\n\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","slug":"test","published":1,"date":"2023-01-06T07:27:53.743Z","updated":"2023-01-06T07:27:53.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3q6002b92jjffru0tnp","content":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":406,"excerpt":"","more":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>"},{"title":"Hello Hexo","date":"2020-11-26T02:53:35.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo\ntags: [hexo,性能测试]\ncategories: 工作\ndate: 2020-11-26 10:53:35\n\n# toc: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2023-02-16T15:20:50.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle7th3q7002e92jjbad25wo3","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"length":367,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"重启","date":"2023-02-17T00:55:00.000Z","_content":"人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。\n\n首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。\n\n其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。\n\n第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。\n\n最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。\n\n总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。","source":"_posts/restart.md","raw":"---\ntitle: 重启\ndate: 2023-02-17 08:55:00\ntags:\n---\n人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。\n\n首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。\n\n其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。\n\n第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。\n\n最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。\n\n总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。","slug":"restart","published":1,"updated":"2023-02-17T01:03:24.497Z","_id":"cle7tjx5c0000brjjdjfs7e7h","comments":1,"layout":"post","photos":[],"link":"","content":"<p>人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。</p>\n<p>首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。</p>\n<p>其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。</p>\n<p>第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。</p>\n<p>最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。</p>\n<p>总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。</p>\n","site":{"data":{}},"length":639,"excerpt":"","more":"<p>人生是一场漫长的旅程，每个人都会面临起伏不定的挑战和机会。有时候我们会因为失败而感到沮丧和失落，但是重启人生的机会总是存在的。重新奋斗的人生，就是向前迈出的第一步。</p>\n<p>首先，要重启人生，我们需要改变自己的心态。我们需要意识到，过去的失败并不代表未来的失败，反而是一次宝贵的经验。我们需要从失败中吸取教训，了解我们可以做得更好的地方，并从中受益。我们需要坚信自己的能力和价值，并且不要害怕尝试新的事物。</p>\n<p>其次，我们需要为自己设定目标，并采取积极的行动。我们需要制定清晰明确的计划，为自己设定短期和长期目标，并设定可以衡量自己进展的标准。我们需要认真思考自己的职业和生活目标，并为之努力奋斗。我们需要充满动力，不断向前迈进。</p>\n<p>第三，我们需要积极学习和成长。学习是一辈子的事情，我们需要持续不断地学习新的知识和技能，以适应变化的世界。我们需要主动探索新的领域，并不断提高自己的技能水平。我们需要寻求并接受他人的帮助和建议，并为自己设定更高的目标，不断追求卓越。</p>\n<p>最后，我们需要保持积极的心态。我们需要坚持自己的信念和价值观，克服困难和挑战，保持自信和勇气。我们需要积极面对挑战和失败，并且从中汲取力量和智慧。我们需要保持乐观和自信，不断努力，追求自己的梦想和目标。</p>\n<p>总之，重新奋斗的人生充满了机遇和挑战。我们需要改变自己的心态，为自己设定目标，并积极行动。我们需要积极学习和成长，保持积极的心态，并坚信自己的能力和价值。最重要的是，我们需要始终保持决心和毅力，不断向前迈进，实现自己的梦想和目标。</p>\n"},{"title":"xxx","_content":"","source":"_drafts/xxx.md","raw":"---\ntitle: xxx\ntags:\ncategories:\n---\n","slug":"xxx","published":0,"date":"2023-02-21T09:41:22.246Z","updated":"2023-02-21T09:41:22.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05c0000mdjd0hmd6bc4","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"一文搞懂 synchronized","date":"2023-02-23T00:55:07.000Z","_content":"\n","source":"_posts/3.md","raw":"---\ntitle: 一文搞懂 synchronized\ndate: 2023-02-23 8:55:07\ntags: [锁,多线程]\ncategories: 技术\n---\n\n","slug":"3","published":1,"updated":"2023-02-24T00:50:58.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05h0001mdjdhsvt1fdg","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"35岁程序员如何摆脱焦虑?","date":"2023-02-17T07:39:43.000Z","toc":true,"_content":"###  关注自己的发展\n把时间花在提升专业技能和知识上，不断完善自己。\n### 调整好心态\n经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。\n### 扩大自己的社交圈\n多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。\n### 找出自己的兴趣\n可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。\n### 健康生活\n要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。","source":"_posts/anxiety.md","raw":"---\ntitle: 35岁程序员如何摆脱焦虑?\ndate: 2023-02-17 15:39:43\ntags: 焦虑\ncategories: study\ntoc: true\n---\n###  关注自己的发展\n把时间花在提升专业技能和知识上，不断完善自己。\n### 调整好心态\n经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。\n### 扩大自己的社交圈\n多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。\n### 找出自己的兴趣\n可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。\n### 健康生活\n要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。","slug":"anxiety","published":1,"updated":"2023-02-17T07:43:13.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05j0002mdjd2nxoaua2","content":"<h3 id=\"关注自己的发展\"><a href=\"#关注自己的发展\" class=\"headerlink\" title=\"关注自己的发展\"></a>关注自己的发展</h3><p>把时间花在提升专业技能和知识上，不断完善自己。</p>\n<h3 id=\"调整好心态\"><a href=\"#调整好心态\" class=\"headerlink\" title=\"调整好心态\"></a>调整好心态</h3><p>经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。</p>\n<h3 id=\"扩大自己的社交圈\"><a href=\"#扩大自己的社交圈\" class=\"headerlink\" title=\"扩大自己的社交圈\"></a>扩大自己的社交圈</h3><p>多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。</p>\n<h3 id=\"找出自己的兴趣\"><a href=\"#找出自己的兴趣\" class=\"headerlink\" title=\"找出自己的兴趣\"></a>找出自己的兴趣</h3><p>可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。</p>\n<h3 id=\"健康生活\"><a href=\"#健康生活\" class=\"headerlink\" title=\"健康生活\"></a>健康生活</h3><p>要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。</p>\n","site":{"data":{}},"length":213,"excerpt":"","more":"<h3 id=\"关注自己的发展\"><a href=\"#关注自己的发展\" class=\"headerlink\" title=\"关注自己的发展\"></a>关注自己的发展</h3><p>把时间花在提升专业技能和知识上，不断完善自己。</p>\n<h3 id=\"调整好心态\"><a href=\"#调整好心态\" class=\"headerlink\" title=\"调整好心态\"></a>调整好心态</h3><p>经常反思自己，认识到自己的价值所在，把握自己的价值，掌控自己的发展方向。</p>\n<h3 id=\"扩大自己的社交圈\"><a href=\"#扩大自己的社交圈\" class=\"headerlink\" title=\"扩大自己的社交圈\"></a>扩大自己的社交圈</h3><p>多交朋友，多参加行业聚会，扩大自己的人脉资源，让自己的人际关系多样化。</p>\n<h3 id=\"找出自己的兴趣\"><a href=\"#找出自己的兴趣\" class=\"headerlink\" title=\"找出自己的兴趣\"></a>找出自己的兴趣</h3><p>可以尝试一些新的兴趣爱好，比如旅游、健身、画画等，可以让自己放松心情，让自己的心情变得更加愉悦。</p>\n<h3 id=\"健康生活\"><a href=\"#健康生活\" class=\"headerlink\" title=\"健康生活\"></a>健康生活</h3><p>要注意身体健康，及时补充充足的睡眠，多吃健康的食物，多运动，保持正常的作息时间。</p>\n"},{"title":"缓存的本质和缓存实践","date":"2023-02-20T06:04:35.000Z","toc":true,"_content":"\n## 为什么要用缓存?\n### 缓存的本质\n> 通俗理解计算机缓存,可以比喻成水库.\n\n\n\n### CPU缓存和系统机构缓存\n\n## 缓存编程实现\n### 编程法\n采用各种reis 客户端和 API.比如Jredis api\n\n### Spring 注入\n\nSpring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。\n- 添加依赖\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n\n```\n\n- RedisTemplate源码\n```\n@Autowired\nprivate RedisTemplate<String, Object> redisTemplate;\n\npublic void setValue(String key, Object value) {\n    redisTemplate.opsForValue().set(key, value);\n}\n\npublic Object getValue(String key) {\n    return redisTemplate.opsForValue().get(key);\n}\n\n```\n-注入RedisTemplate\n```\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class RedisService {\n\n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n\n    public void setValue(String key, String value) {\n        redisTemplate.opsForValue().set(key, value);\n    }\n\n    public String getValue(String key) {\n        return redisTemplate.opsForValue().get(key);\n    }\n}\n```\n\n### 注解法\n如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：\n\n1. 添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。\n\n2. 配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。\n\n3. 创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。\n\n4. 使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。\n下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：\n\n\n```\n@Service\npublic class UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Cacheable(value = \"user\", key = \"#id\")\n    public User getUserById(Long id) {\n        return userRepository.findById(id).orElse(null);\n    }\n\n    // 其他业务方法...\n}\n```\n## 访问缓存的模式\n\n### 双读双写\n一般采用这种写法\n![image](https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png)\n## 异步更新\n![image](https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png)\n## 串联模式\n![image](https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png)\n\n<!--  -->\n## 分片模式\n\n### 客户端分片\n\n### 代理分片\n\n### 集群分片\n\n## 迁移方案\n\n### 平滑迁移\n\n### 一致性哈希","source":"_posts/cache.md","raw":"---\ntitle: 缓存的本质和缓存实践\ndate: 2023-02-20 14:04:35\ntags: [cache,缓存]\ncategories: 技术\ntoc: true\n---\n\n## 为什么要用缓存?\n### 缓存的本质\n> 通俗理解计算机缓存,可以比喻成水库.\n\n\n\n### CPU缓存和系统机构缓存\n\n## 缓存编程实现\n### 编程法\n采用各种reis 客户端和 API.比如Jredis api\n\n### Spring 注入\n\nSpring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。\n- 添加依赖\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n\n```\n\n- RedisTemplate源码\n```\n@Autowired\nprivate RedisTemplate<String, Object> redisTemplate;\n\npublic void setValue(String key, Object value) {\n    redisTemplate.opsForValue().set(key, value);\n}\n\npublic Object getValue(String key) {\n    return redisTemplate.opsForValue().get(key);\n}\n\n```\n-注入RedisTemplate\n```\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class RedisService {\n\n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n\n    public void setValue(String key, String value) {\n        redisTemplate.opsForValue().set(key, value);\n    }\n\n    public String getValue(String key) {\n        return redisTemplate.opsForValue().get(key);\n    }\n}\n```\n\n### 注解法\n如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：\n\n1. 添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。\n\n2. 配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。\n\n3. 创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。\n\n4. 使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。\n下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：\n\n\n```\n@Service\npublic class UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Cacheable(value = \"user\", key = \"#id\")\n    public User getUserById(Long id) {\n        return userRepository.findById(id).orElse(null);\n    }\n\n    // 其他业务方法...\n}\n```\n## 访问缓存的模式\n\n### 双读双写\n一般采用这种写法\n![image](https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png)\n## 异步更新\n![image](https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png)\n## 串联模式\n![image](https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png)\n\n<!--  -->\n## 分片模式\n\n### 客户端分片\n\n### 代理分片\n\n### 集群分片\n\n## 迁移方案\n\n### 平滑迁移\n\n### 一致性哈希","slug":"cache","published":1,"updated":"2023-02-25T11:26:06.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05s0005mdjd15vn16cv","content":"<h2 id=\"为什么要用缓存\"><a href=\"#为什么要用缓存\" class=\"headerlink\" title=\"为什么要用缓存?\"></a>为什么要用缓存?</h2><h3 id=\"缓存的本质\"><a href=\"#缓存的本质\" class=\"headerlink\" title=\"缓存的本质\"></a>缓存的本质</h3><blockquote>\n<p>通俗理解计算机缓存,可以比喻成水库.</p>\n</blockquote>\n<h3 id=\"CPU缓存和系统机构缓存\"><a href=\"#CPU缓存和系统机构缓存\" class=\"headerlink\" title=\"CPU缓存和系统机构缓存\"></a>CPU缓存和系统机构缓存</h3><h2 id=\"缓存编程实现\"><a href=\"#缓存编程实现\" class=\"headerlink\" title=\"缓存编程实现\"></a>缓存编程实现</h2><h3 id=\"编程法\"><a href=\"#编程法\" class=\"headerlink\" title=\"编程法\"></a>编程法</h3><p>采用各种reis 客户端和 API.比如Jredis api</p>\n<h3 id=\"Spring-注入\"><a href=\"#Spring-注入\" class=\"headerlink\" title=\"Spring 注入\"></a>Spring 注入</h3><p>Spring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。</p>\n<ul>\n<li><p>添加依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RedisTemplate源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Autowired</span><br><span class=\"line\">private RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setValue(String key, Object value) &#123;</span><br><span class=\"line\">    redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public Object getValue(String key) &#123;</span><br><span class=\"line\">    return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>注入RedisTemplate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\">import org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component</span><br><span class=\"line\">public class RedisService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setValue(String key, String value) &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getValue(String key) &#123;</span><br><span class=\"line\">        return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"注解法\"><a href=\"#注解法\" class=\"headerlink\" title=\"注解法\"></a>注解法</h3><p>如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：</p>\n<ol>\n<li><p>添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。</p>\n</li>\n<li><p>配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。</p>\n</li>\n<li><p>创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。</p>\n</li>\n<li><p>使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。<br>下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Cacheable(value &#x3D; &quot;user&quot;, key &#x3D; &quot;#id&quot;)</span><br><span class=\"line\">    public User getUserById(Long id) &#123;</span><br><span class=\"line\">        return userRepository.findById(id).orElse(null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F; 其他业务方法...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问缓存的模式\"><a href=\"#访问缓存的模式\" class=\"headerlink\" title=\"访问缓存的模式\"></a>访问缓存的模式</h2><h3 id=\"双读双写\"><a href=\"#双读双写\" class=\"headerlink\" title=\"双读双写\"></a>双读双写</h3><p>一般采用这种写法<br><img src=\"https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png\" alt=\"image\"></p>\n<h2 id=\"异步更新\"><a href=\"#异步更新\" class=\"headerlink\" title=\"异步更新\"></a>异步更新</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png\" alt=\"image\"></p>\n<h2 id=\"串联模式\"><a href=\"#串联模式\" class=\"headerlink\" title=\"串联模式\"></a>串联模式</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png\" alt=\"image\"></p>\n<!--  -->\n<h2 id=\"分片模式\"><a href=\"#分片模式\" class=\"headerlink\" title=\"分片模式\"></a>分片模式</h2><h3 id=\"客户端分片\"><a href=\"#客户端分片\" class=\"headerlink\" title=\"客户端分片\"></a>客户端分片</h3><h3 id=\"代理分片\"><a href=\"#代理分片\" class=\"headerlink\" title=\"代理分片\"></a>代理分片</h3><h3 id=\"集群分片\"><a href=\"#集群分片\" class=\"headerlink\" title=\"集群分片\"></a>集群分片</h3><h2 id=\"迁移方案\"><a href=\"#迁移方案\" class=\"headerlink\" title=\"迁移方案\"></a>迁移方案</h2><h3 id=\"平滑迁移\"><a href=\"#平滑迁移\" class=\"headerlink\" title=\"平滑迁移\"></a>平滑迁移</h3><h3 id=\"一致性哈希\"><a href=\"#一致性哈希\" class=\"headerlink\" title=\"一致性哈希\"></a>一致性哈希</h3>","site":{"data":{}},"length":1940,"excerpt":"","more":"<h2 id=\"为什么要用缓存\"><a href=\"#为什么要用缓存\" class=\"headerlink\" title=\"为什么要用缓存?\"></a>为什么要用缓存?</h2><h3 id=\"缓存的本质\"><a href=\"#缓存的本质\" class=\"headerlink\" title=\"缓存的本质\"></a>缓存的本质</h3><blockquote>\n<p>通俗理解计算机缓存,可以比喻成水库.</p>\n</blockquote>\n<h3 id=\"CPU缓存和系统机构缓存\"><a href=\"#CPU缓存和系统机构缓存\" class=\"headerlink\" title=\"CPU缓存和系统机构缓存\"></a>CPU缓存和系统机构缓存</h3><h2 id=\"缓存编程实现\"><a href=\"#缓存编程实现\" class=\"headerlink\" title=\"缓存编程实现\"></a>缓存编程实现</h2><h3 id=\"编程法\"><a href=\"#编程法\" class=\"headerlink\" title=\"编程法\"></a>编程法</h3><p>采用各种reis 客户端和 API.比如Jredis api</p>\n<h3 id=\"Spring-注入\"><a href=\"#Spring-注入\" class=\"headerlink\" title=\"Spring 注入\"></a>Spring 注入</h3><p>Spring Data Redis 是 Spring Data 家族的一个项目，它为 Spring 应用程序提供了与 Redis 数据存储交互的支持。Spring Data Redis 通过 RedisTemplate 和 RedisConnectionFactory 为 Redis 提供了高级的 Redis 操作接口。</p>\n<ul>\n<li><p>添加依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RedisTemplate源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Autowired</span><br><span class=\"line\">private RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setValue(String key, Object value) &#123;</span><br><span class=\"line\">    redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public Object getValue(String key) &#123;</span><br><span class=\"line\">    return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>注入RedisTemplate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\">import org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component</span><br><span class=\"line\">public class RedisService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setValue(String key, String value) &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getValue(String key) &#123;</span><br><span class=\"line\">        return redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"注解法\"><a href=\"#注解法\" class=\"headerlink\" title=\"注解法\"></a>注解法</h3><p>如果你用 springboot,使用 @Cacheable 注解来实现 Redis 缓存非常简单，您只需要按照以下步骤即可：</p>\n<ol>\n<li><p>添加依赖：首先，在 pom.xml 文件中添加 spring-boot-starter-cache 和 spring-boot-starter-data-redis 依赖。</p>\n</li>\n<li><p>配置 Redis：在 application.properties 或 application.yml 文件中配置 Redis 连接信息。</p>\n</li>\n<li><p>创建缓存配置：在您的应用程序中创建一个缓存配置类，并使用 @Configuration 和 @EnableCaching 注解进行标注。在这个类中，您可以使用 CacheManagerBuilder.build() 方法来创建一个 RedisCacheManager 对象。</p>\n</li>\n<li><p>使用 @Cacheable：在需要缓存的方法上使用 @Cacheable 注解，指定缓存名称以及需要缓存的数据 key。<br>下面是一个使用 @Cacheable 注解来实现 Redis 缓存的示例：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Cacheable(value &#x3D; &quot;user&quot;, key &#x3D; &quot;#id&quot;)</span><br><span class=\"line\">    public User getUserById(Long id) &#123;</span><br><span class=\"line\">        return userRepository.findById(id).orElse(null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F; 其他业务方法...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问缓存的模式\"><a href=\"#访问缓存的模式\" class=\"headerlink\" title=\"访问缓存的模式\"></a>访问缓存的模式</h2><h3 id=\"双读双写\"><a href=\"#双读双写\" class=\"headerlink\" title=\"双读双写\"></a>双读双写</h3><p>一般采用这种写法<br><img src=\"https://user-images.githubusercontent.com/9412449/220018370-696f2a8d-440e-4a83-8d97-c7d058a5b362.png\" alt=\"image\"></p>\n<h2 id=\"异步更新\"><a href=\"#异步更新\" class=\"headerlink\" title=\"异步更新\"></a>异步更新</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019055-6353b1e1-80b4-473a-83d5-56df60182373.png\" alt=\"image\"></p>\n<h2 id=\"串联模式\"><a href=\"#串联模式\" class=\"headerlink\" title=\"串联模式\"></a>串联模式</h2><p><img src=\"https://user-images.githubusercontent.com/9412449/220019109-48d675d4-fd23-44b0-887f-67e11772df34.png\" alt=\"image\"></p>\n<!--  -->\n<h2 id=\"分片模式\"><a href=\"#分片模式\" class=\"headerlink\" title=\"分片模式\"></a>分片模式</h2><h3 id=\"客户端分片\"><a href=\"#客户端分片\" class=\"headerlink\" title=\"客户端分片\"></a>客户端分片</h3><h3 id=\"代理分片\"><a href=\"#代理分片\" class=\"headerlink\" title=\"代理分片\"></a>代理分片</h3><h3 id=\"集群分片\"><a href=\"#集群分片\" class=\"headerlink\" title=\"集群分片\"></a>集群分片</h3><h2 id=\"迁移方案\"><a href=\"#迁移方案\" class=\"headerlink\" title=\"迁移方案\"></a>迁移方案</h2><h3 id=\"平滑迁移\"><a href=\"#平滑迁移\" class=\"headerlink\" title=\"平滑迁移\"></a>平滑迁移</h3><h3 id=\"一致性哈希\"><a href=\"#一致性哈希\" class=\"headerlink\" title=\"一致性哈希\"></a>一致性哈希</h3>"},{"title":"Can't set cookie dm_task_set_cookie failed 错误处理","date":"2020-11-25T07:13:35.000Z","toc":true,"_content":"\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","source":"_posts/dm_task_set_cookie.md","raw":"---\ntitle: Can't set cookie dm_task_set_cookie failed 错误处理\ndate: 2020-11-25 15:13:35\ntags: [docker,bug]\ncategories: 技术\ntoc: true\n\n---\n\nCan't set cookie dm_task_set_cookie failed\n\n解决：\n0.到出错误的 服务器 上\n1.docker ps 查出当前所有运行的 docker 容器，记下来id\n2.关闭docker服务\necho 'y' | sudo dmsetup udevcomplete_all\n3.重启docker服务\nsystemctl restart docker\n4.依次\ndocker restart  id \n","slug":"dm_task_set_cookie","published":1,"updated":"2023-02-21T09:40:10.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05t0006mdjd80157e82","content":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n","site":{"data":{}},"length":185,"excerpt":"","more":"<p>Can’t set cookie dm_task_set_cookie failed</p>\n<p>解决：<br>0.到出错误的 服务器 上<br>1.docker ps 查出当前所有运行的 docker 容器，记下来id<br>2.关闭docker服务<br>echo ‘y’ | sudo dmsetup udevcomplete_all<br>3.重启docker服务<br>systemctl restart docker<br>4.依次<br>docker restart  id </p>\n"},{"title":"Redis 相比 Memcached 有哪些优势？","date":"2023-02-24T05:31:26.000Z","_content":"\nRedis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：\n\n1. 数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。\n\n2. 更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。\n\n3. 更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。\n\n更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。","source":"_posts/cachecompare.md","raw":"---\ntitle: Redis 相比 Memcached 有哪些优势？\n\ndate: 2023-02-24 13:31:26\ntags: 缓存\ncategories: 技术\n---\n\nRedis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：\n\n1. 数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。\n\n2. 更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。\n\n3. 更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。\n\n更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。","slug":"cachecompare","published":1,"updated":"2023-02-24T05:33:12.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05v0007mdjdf69q3nub","content":"<p>Redis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：</p>\n<ol>\n<li><p>数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。</p>\n</li>\n<li><p>更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。</p>\n</li>\n<li><p>更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。</p>\n</li>\n</ol>\n<p>更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。</p>\n","site":{"data":{}},"length":440,"excerpt":"","more":"<p>Redis 和 Memcached 都是内存中的键值存储系统，它们都可以用于缓存、会话存储等场景，但是 Redis 相对于 Memcached 有以下几个优势：</p>\n<ol>\n<li><p>数据结构更丰富：Redis 支持更多的数据结构，如字符串、哈希表、列表、集合、有序集合等，这些数据结构可以方便地解决各种复杂的问题，如计数器、排行榜、社交网络、消息队列等。</p>\n</li>\n<li><p>更高的可靠性：Redis 支持数据持久化，可以将数据写入磁盘，即使服务器重启，数据也不会丢失。同时 Redis 支持主从复制和 Sentinel 高可用方案，可以保证服务的可靠性。</p>\n</li>\n<li><p>更好的性能表现：Redis 采用单线程的方式来处理请求，避免了多线程之间的锁竞争和上下文切换的开销，同时采用了多种优化技术，如内存池、事件驱动等，使得 Redis 在吞吐量和响应时间方面表现更好。</p>\n</li>\n</ol>\n<p>更灵活的分布式方案：Redis 提供了分片和集群两种分布式方案，分片可以水平扩展，支持更大的数据量，集群则可以自动化地完成数据分片、数据迁移和故障转移等任务，使得 Redis 更容易应对高并发和海量数据的场景。</p>\n"},{"title":"用springboot写一个 demo","date":"2021-02-18T06:36:28.000Z","toc":true,"_content":"\n## 添加依赖\n1. 创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：\n\n```\n    <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n```\n## 创建主程序\n2. 创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n\n```\n## 创建 controller\n3. 创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：\n\n```\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @RequestMapping(\"/hello\")\n    public String hello() {\n        return \"Hello World!\";\n    }\n}\n\n```\n\n4. 运行应用程序，访问 http://localhost:8080/hello，你应该能看到浏览器显示 \"Hello World!\"。\n\n```\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    @RestController\n    public class HelloController {\n        @RequestMapping(\"/hello\")\n        public String hello() {\n            return \"Hello World!\";\n        }\n    }\n    ```","source":"_posts/hello-springboot.md","raw":"---\ntitle: 用springboot写一个 demo\ndate: 2021-02-18 14:36:28\ntags: springboot\ncategories: 技术\ntoc: true\n---\n\n## 添加依赖\n1. 创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：\n\n```\n    <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n```\n## 创建主程序\n2. 创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：\n```\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n\n```\n## 创建 controller\n3. 创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：\n\n```\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @RequestMapping(\"/hello\")\n    public String hello() {\n        return \"Hello World!\";\n    }\n}\n\n```\n\n4. 运行应用程序，访问 http://localhost:8080/hello，你应该能看到浏览器显示 \"Hello World!\"。\n\n```\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    @RestController\n    public class HelloController {\n        @RequestMapping(\"/hello\")\n        public String hello() {\n            return \"Hello World!\";\n        }\n    }\n    ```","slug":"hello-springboot","published":1,"updated":"2023-02-18T06:42:18.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05x000bmdjdf3vcgh64","content":"<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><ol>\n<li>创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\"> &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\"> &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建主程序\"><a href=\"#创建主程序\" class=\"headerlink\" title=\"创建主程序\"></a>创建主程序</h2><ol start=\"2\">\n<li>创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class App &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(App.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-controller\"><a href=\"#创建-controller\" class=\"headerlink\" title=\"创建 controller\"></a>创建 controller</h2></li>\n<li>创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>运行应用程序，访问 <a href=\"http://localhost:8080/hello%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E8%83%BD%E7%9C%8B%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BA\">http://localhost:8080/hello，你应该能看到浏览器显示</a> “Hello World!”。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1288,"excerpt":"","more":"<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><ol>\n<li>创建一个 Maven 项目，并在 pom.xml 中添加以下依赖：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\"> &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\"> &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建主程序\"><a href=\"#创建主程序\" class=\"headerlink\" title=\"创建主程序\"></a>创建主程序</h2><ol start=\"2\">\n<li>创建一个 Spring Boot 应用程序类，例如 App.java，并使用 @SpringBootApplication 注解来声明它是一个 Spring Boot 应用程序：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.boot.SpringApplication;</span><br><span class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class App &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(App.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-controller\"><a href=\"#创建-controller\" class=\"headerlink\" title=\"创建 controller\"></a>创建 controller</h2></li>\n<li>创建一个 Controller 类，例如 HelloController.java，并使用 @RestController 和 @RequestMapping 注解来声明一个 RESTful 接口：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>运行应用程序，访问 <a href=\"http://localhost:8080/hello%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E8%83%BD%E7%9C%8B%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BA\">http://localhost:8080/hello，你应该能看到浏览器显示</a> “Hello World!”。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">public class HelloController &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class=\"line\">    public String hello() &#123;</span><br><span class=\"line\">        return &quot;Hello World!&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"hexo-generator-search","toc":true,"_content":"\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","source":"_posts/hexo-generator-search.md","raw":"---\ntitle: hexo-generator-search\ntags: [hexo]\ntoc: true\ncategories: 技术\n\n---\n\n\n生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。\n\n## 安装\n```shell\n$ npm install hexo-generator-search --save\n```\n\n## 配置\n\n```yml\nsearch:\n  path: search.xml\n  field: post\n  content: true\n```\n\n\n如果需要排除搜索，只要在indexing:false 即可\n```\n---\ntitle: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\nindexing: false\n---\n```","slug":"hexo-generator-search","published":1,"date":"2023-01-06T07:27:53.743Z","updated":"2023-02-23T05:56:05.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd05y000dmdjd079ohy16","content":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":406,"excerpt":"","more":"<p>生成搜索 data   Hexo  3。x   4. x。这个插件    用于生成  搜索索引 文件,  包含所有的必要  data    文章 你 可以使用 写 本地搜索引擎   博客。JSON支持  XML 和   输出格式。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果需要排除搜索，只要在indexing:false 即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &quot;Code Highlight&quot;</span><br><span class=\"line\">date: &quot;2014-03-15 20:17:16&quot;</span><br><span class=\"line\">tags: highlight</span><br><span class=\"line\">categories: Demo</span><br><span class=\"line\">description: &quot;A collection of Hello World applications from helloworld.org.&quot;</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">indexing: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>"},{"title":"一文搞定 数据库索引","date":"2023-02-28T04:41:46.000Z","toc":true,"_content":"## 什么是索引\n数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。\n### 索引越多越好吗?\n可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。\n## 索引分类\n### 按用途分\n\n1. 普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。\n\n2. 唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。\n\n3. 主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。\n\n4. 组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。\n\n5. 全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。\n\n底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。\n### 按数据结构分\n\n索引分类从数据结构上分为：\n\n1. 线性索引：按照顺序存储数据，比如数组、链表等；\n\n2. 树形索引：按照树形结构存储数据，比如二叉树、B树等；\n\n3. 哈希索引：按照哈希函数存储数据，比如哈希表等；\n\n4. 全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。\n## 作用\n## 索引规则\n\n## 索引失效\n### 索引失效原因\n\n\n1. **索引被删除**：当索引被删除时，索引就会失效。\n\n2. 索引被修改：当索引被修改时，索引也会失效。\n\n3. 数据发生变化：当数据发生变化时，索引也会失效。\n\n4. 索引字段被**修改**：当索引字段被修改时，索引也会失效。\n\n5. 索引被**禁用**：当索引被禁用时，索引也会失效。\n\n\n### 避免索引失效\n\n1. 尽量减少索引的**更新操作**，因为更新操作会导致索引失效。\n\n2. **尽量使用唯一索引**，因为唯一索引可以避免重复记录，从而避免索引失效。\n\n3. 尽量使用**复合索引**，复合索引可以提高查询效率，也可以避免索引失效。\n\n4. 尽量使用**覆盖索引**，覆盖索引可以减少查询操作，从而避免索引失效。\n\n5. 尽量使用稳定的索引，稳定的索引可以**避免数据变动**，从而避免索引失效。","source":"_posts/index.md","raw":"---\ntitle: 一文搞定 数据库索引 \ndate: 2023-02-28 12:41:46\ntags: [数据库,索引]\ncategories: 技术\ntoc: true\n---\n## 什么是索引\n数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。\n### 索引越多越好吗?\n可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。\n## 索引分类\n### 按用途分\n\n1. 普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。\n\n2. 唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。\n\n3. 主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。\n\n4. 组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。\n\n5. 全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。\n\n底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。\n### 按数据结构分\n\n索引分类从数据结构上分为：\n\n1. 线性索引：按照顺序存储数据，比如数组、链表等；\n\n2. 树形索引：按照树形结构存储数据，比如二叉树、B树等；\n\n3. 哈希索引：按照哈希函数存储数据，比如哈希表等；\n\n4. 全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。\n## 作用\n## 索引规则\n\n## 索引失效\n### 索引失效原因\n\n\n1. **索引被删除**：当索引被删除时，索引就会失效。\n\n2. 索引被修改：当索引被修改时，索引也会失效。\n\n3. 数据发生变化：当数据发生变化时，索引也会失效。\n\n4. 索引字段被**修改**：当索引字段被修改时，索引也会失效。\n\n5. 索引被**禁用**：当索引被禁用时，索引也会失效。\n\n\n### 避免索引失效\n\n1. 尽量减少索引的**更新操作**，因为更新操作会导致索引失效。\n\n2. **尽量使用唯一索引**，因为唯一索引可以避免重复记录，从而避免索引失效。\n\n3. 尽量使用**复合索引**，复合索引可以提高查询效率，也可以避免索引失效。\n\n4. 尽量使用**覆盖索引**，覆盖索引可以减少查询操作，从而避免索引失效。\n\n5. 尽量使用稳定的索引，稳定的索引可以**避免数据变动**，从而避免索引失效。","slug":"index","published":1,"updated":"2023-02-28T06:14:04.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd061000hmdjd39p1cef9","content":"<h2 id=\"什么是索引\"><a href=\"#什么是索引\" class=\"headerlink\" title=\"什么是索引\"></a>什么是索引</h2><p>数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。</p>\n<h3 id=\"索引越多越好吗\"><a href=\"#索引越多越好吗\" class=\"headerlink\" title=\"索引越多越好吗?\"></a>索引越多越好吗?</h3><p>可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。</p>\n<h2 id=\"索引分类\"><a href=\"#索引分类\" class=\"headerlink\" title=\"索引分类\"></a>索引分类</h2><h3 id=\"按用途分\"><a href=\"#按用途分\" class=\"headerlink\" title=\"按用途分\"></a>按用途分</h3><ol>\n<li><p>普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。</p>\n</li>\n<li><p>唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。</p>\n</li>\n<li><p>主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。</p>\n</li>\n<li><p>组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。</p>\n</li>\n<li><p>全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。</p>\n</li>\n</ol>\n<p>底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。</p>\n<h3 id=\"按数据结构分\"><a href=\"#按数据结构分\" class=\"headerlink\" title=\"按数据结构分\"></a>按数据结构分</h3><p>索引分类从数据结构上分为：</p>\n<ol>\n<li><p>线性索引：按照顺序存储数据，比如数组、链表等；</p>\n</li>\n<li><p>树形索引：按照树形结构存储数据，比如二叉树、B树等；</p>\n</li>\n<li><p>哈希索引：按照哈希函数存储数据，比如哈希表等；</p>\n</li>\n<li><p>全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><h2 id=\"索引规则\"><a href=\"#索引规则\" class=\"headerlink\" title=\"索引规则\"></a>索引规则</h2></li>\n</ol>\n<h2 id=\"索引失效\"><a href=\"#索引失效\" class=\"headerlink\" title=\"索引失效\"></a>索引失效</h2><h3 id=\"索引失效原因\"><a href=\"#索引失效原因\" class=\"headerlink\" title=\"索引失效原因\"></a>索引失效原因</h3><ol>\n<li><p><strong>索引被删除</strong>：当索引被删除时，索引就会失效。</p>\n</li>\n<li><p>索引被修改：当索引被修改时，索引也会失效。</p>\n</li>\n<li><p>数据发生变化：当数据发生变化时，索引也会失效。</p>\n</li>\n<li><p>索引字段被<strong>修改</strong>：当索引字段被修改时，索引也会失效。</p>\n</li>\n<li><p>索引被<strong>禁用</strong>：当索引被禁用时，索引也会失效。</p>\n</li>\n</ol>\n<h3 id=\"避免索引失效\"><a href=\"#避免索引失效\" class=\"headerlink\" title=\"避免索引失效\"></a>避免索引失效</h3><ol>\n<li><p>尽量减少索引的<strong>更新操作</strong>，因为更新操作会导致索引失效。</p>\n</li>\n<li><p><strong>尽量使用唯一索引</strong>，因为唯一索引可以避免重复记录，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>复合索引</strong>，复合索引可以提高查询效率，也可以避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>覆盖索引</strong>，覆盖索引可以减少查询操作，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用稳定的索引，稳定的索引可以<strong>避免数据变动</strong>，从而避免索引失效。</p>\n</li>\n</ol>\n","site":{"data":{}},"length":995,"excerpt":"","more":"<h2 id=\"什么是索引\"><a href=\"#什么是索引\" class=\"headerlink\" title=\"什么是索引\"></a>什么是索引</h2><p>数据库索引是一种数据结构，用于加快对数据库表中数据的检索速度。它可以把数据库表中的一列或多列数据作为索引键，并在索引键上建立一个索引树，以加快对数据的检索速度。</p>\n<h3 id=\"索引越多越好吗\"><a href=\"#索引越多越好吗\" class=\"headerlink\" title=\"索引越多越好吗?\"></a>索引越多越好吗?</h3><p>可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。</p>\n<h2 id=\"索引分类\"><a href=\"#索引分类\" class=\"headerlink\" title=\"索引分类\"></a>索引分类</h2><h3 id=\"按用途分\"><a href=\"#按用途分\" class=\"headerlink\" title=\"按用途分\"></a>按用途分</h3><ol>\n<li><p>普通索引（Normal Index）：普通索引是最常用的索引类型，它是按照索引列的值来建立索引的，它可以加快查询的速度，提高查询效率。</p>\n</li>\n<li><p>唯一索引（Unique Index）：唯一索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，也就是说，在一个表中，索引列的值不能重复。</p>\n</li>\n<li><p>主键索引（Primary Key Index）：主键索引也是按照索引列的值来建立索引的，但是它的特点是索引列的值必须是唯一的，而且不能为空。</p>\n</li>\n<li><p>组合索引（Composite Index）：组合索引是指在一个表中，使用多个字段来建立索引，这样可以提高查询的效率。</p>\n</li>\n<li><p>全文索引（Full Text Index）：全文索引是指在一个表中，使用全文检索的方式来建立索引，这样可以提高查询的效率。</p>\n</li>\n</ol>\n<p>底层原理：MySQL 索引的底层原理是使用 B-Tree（B 树）来存储索引，B-Tree 是一种特殊的树结构，它可以提供快速的查找、插入和删除操作，从而提高查询的效率。</p>\n<h3 id=\"按数据结构分\"><a href=\"#按数据结构分\" class=\"headerlink\" title=\"按数据结构分\"></a>按数据结构分</h3><p>索引分类从数据结构上分为：</p>\n<ol>\n<li><p>线性索引：按照顺序存储数据，比如数组、链表等；</p>\n</li>\n<li><p>树形索引：按照树形结构存储数据，比如二叉树、B树等；</p>\n</li>\n<li><p>哈希索引：按照哈希函数存储数据，比如哈希表等；</p>\n</li>\n<li><p>全文索引：按照文本的全文检索原理存储数据，比如倒排索引等。</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><h2 id=\"索引规则\"><a href=\"#索引规则\" class=\"headerlink\" title=\"索引规则\"></a>索引规则</h2></li>\n</ol>\n<h2 id=\"索引失效\"><a href=\"#索引失效\" class=\"headerlink\" title=\"索引失效\"></a>索引失效</h2><h3 id=\"索引失效原因\"><a href=\"#索引失效原因\" class=\"headerlink\" title=\"索引失效原因\"></a>索引失效原因</h3><ol>\n<li><p><strong>索引被删除</strong>：当索引被删除时，索引就会失效。</p>\n</li>\n<li><p>索引被修改：当索引被修改时，索引也会失效。</p>\n</li>\n<li><p>数据发生变化：当数据发生变化时，索引也会失效。</p>\n</li>\n<li><p>索引字段被<strong>修改</strong>：当索引字段被修改时，索引也会失效。</p>\n</li>\n<li><p>索引被<strong>禁用</strong>：当索引被禁用时，索引也会失效。</p>\n</li>\n</ol>\n<h3 id=\"避免索引失效\"><a href=\"#避免索引失效\" class=\"headerlink\" title=\"避免索引失效\"></a>避免索引失效</h3><ol>\n<li><p>尽量减少索引的<strong>更新操作</strong>，因为更新操作会导致索引失效。</p>\n</li>\n<li><p><strong>尽量使用唯一索引</strong>，因为唯一索引可以避免重复记录，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>复合索引</strong>，复合索引可以提高查询效率，也可以避免索引失效。</p>\n</li>\n<li><p>尽量使用<strong>覆盖索引</strong>，覆盖索引可以减少查询操作，从而避免索引失效。</p>\n</li>\n<li><p>尽量使用稳定的索引，稳定的索引可以<strong>避免数据变动</strong>，从而避免索引失效。</p>\n</li>\n</ol>\n"},{"title":"java如何创建多线程?","date":"2023-03-14T08:35:40.000Z","toc":"ture","_content":"## 继承 Thread,重新 run\n\n```java\n    /**\n     * 继承 Thread 类\n     */\n    class MyThread extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n\n```\n## 实现 Runable+重写 run\n\n```java\n  /**\n     * 实现  Runnable 接口\n     */\n    class MyRunnable implements Runnable {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n```\n## 实现 Callable 接口重写 call 方法\n获取返回值\n```java\n    /**\n     * 实现 Callable 接口 获取返回值\n     */\n    class MyCallable implements Callable {\n        @Override\n        public Object call() throws Exception {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            return Thread.currentThread().getName();\n        }\n    }\n```\n\t\n## new Thread+lamda 表达式\n```java\n        /**\n         * 创建 Thread 对象 lambda 表达式\n         */\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            }\n        });\n\n```\n## 线程池\n\n```java\n   /**\n     * 基于线程池创建线程\n     */\n    class MyThreadFactory implements ThreadFactory {\n        @Override\n        public Thread newThread(Runnable r) {\n            return null;\n        }\n    }\n```","source":"_posts/java-thread.md","raw":"---\ntitle: java如何创建多线程?\ndate: 2023-03-14 16:35:40\ntags: 多线程\ncategories: 技术\ntoc: ture\n\n---\n## 继承 Thread,重新 run\n\n```java\n    /**\n     * 继承 Thread 类\n     */\n    class MyThread extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n\n```\n## 实现 Runable+重写 run\n\n```java\n  /**\n     * 实现  Runnable 接口\n     */\n    class MyRunnable implements Runnable {\n        @Override\n        public void run() {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n        }\n    }\n```\n## 实现 Callable 接口重写 call 方法\n获取返回值\n```java\n    /**\n     * 实现 Callable 接口 获取返回值\n     */\n    class MyCallable implements Callable {\n        @Override\n        public Object call() throws Exception {\n            System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            return Thread.currentThread().getName();\n        }\n    }\n```\n\t\n## new Thread+lamda 表达式\n```java\n        /**\n         * 创建 Thread 对象 lambda 表达式\n         */\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(\"线程名\" + Thread.currentThread().getName() + \",开始运行\");\n            }\n        });\n\n```\n## 线程池\n\n```java\n   /**\n     * 基于线程池创建线程\n     */\n    class MyThreadFactory implements ThreadFactory {\n        @Override\n        public Thread newThread(Runnable r) {\n            return null;\n        }\n    }\n```","slug":"java-thread","published":1,"updated":"2023-03-14T08:45:14.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd063000kmdjd52210mmb","content":"<h2 id=\"继承-Thread-重新-run\"><a href=\"#继承-Thread-重新-run\" class=\"headerlink\" title=\"继承 Thread,重新 run\"></a>继承 Thread,重新 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承 Thread 类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Runable-重写-run\"><a href=\"#实现-Runable-重写-run\" class=\"headerlink\" title=\"实现 Runable+重写 run\"></a>实现 Runable+重写 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 实现  Runnable 接口</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRunnable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Callable-接口重写-call-方法\"><a href=\"#实现-Callable-接口重写-call-方法\" class=\"headerlink\" title=\"实现 Callable 接口重写 call 方法\"></a>实现 Callable 接口重写 call 方法</h2><p>获取返回值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现 Callable 接口 获取返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyCallable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Thread.currentThread().getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"new-Thread-lamda-表达式\"><a href=\"#new-Thread-lamda-表达式\" class=\"headerlink\" title=\"new Thread+lamda 表达式\"></a>new Thread+lamda 表达式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建 Thread 对象 lambda 表达式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Thread thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 基于线程池创建线程</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThreadFactory</span> <span class=\"keyword\">implements</span> <span class=\"title\">ThreadFactory</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"meta\">@Override</span></span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> Thread <span class=\"title\">newThread</span><span class=\"params\">(Runnable r)</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1068,"excerpt":"","more":"<h2 id=\"继承-Thread-重新-run\"><a href=\"#继承-Thread-重新-run\" class=\"headerlink\" title=\"继承 Thread,重新 run\"></a>继承 Thread,重新 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承 Thread 类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Runable-重写-run\"><a href=\"#实现-Runable-重写-run\" class=\"headerlink\" title=\"实现 Runable+重写 run\"></a>实现 Runable+重写 run</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 实现  Runnable 接口</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRunnable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实现-Callable-接口重写-call-方法\"><a href=\"#实现-Callable-接口重写-call-方法\" class=\"headerlink\" title=\"实现 Callable 接口重写 call 方法\"></a>实现 Callable 接口重写 call 方法</h2><p>获取返回值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现 Callable 接口 获取返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyCallable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Thread.currentThread().getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"new-Thread-lamda-表达式\"><a href=\"#new-Thread-lamda-表达式\" class=\"headerlink\" title=\"new Thread+lamda 表达式\"></a>new Thread+lamda 表达式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建 Thread 对象 lambda 表达式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">Thread thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;线程名&quot;</span> + Thread.currentThread().getName() + <span class=\"string\">&quot;,开始运行&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 基于线程池创建线程</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThreadFactory</span> <span class=\"keyword\">implements</span> <span class=\"title\">ThreadFactory</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"meta\">@Override</span></span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> Thread <span class=\"title\">newThread</span><span class=\"params\">(Runnable r)</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>"},{"title":"如何知识变现","date":"2023-02-20T02:03:40.000Z","_content":"<!-- ## 如何知识变现 -->\n\n1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。\n\n2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。\n\n3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。\n\n4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。\n\n5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。","source":"_posts/liquidate.md","raw":"---\ntitle: 如何知识变现\ndate: 2023-02-20 10:03:40\ntags: 知识变现\ncategories: 学习\n---\n<!-- ## 如何知识变现 -->\n\n1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。\n\n2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。\n\n3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。\n\n4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。\n\n5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。","slug":"liquidate","published":1,"updated":"2023-02-20T02:04:53.435Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd064000omdjd3wn1c9o4","content":"<!-- ## 如何知识变现 -->\n\n<p>1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。</p>\n<p>2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。</p>\n<p>3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。</p>\n<p>4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。</p>\n<p>5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。</p>\n","site":{"data":{}},"length":231,"excerpt":"","more":"<!-- ## 如何知识变现 -->\n\n<p>1、利用社交媒体：利用社交媒体平台，如微博、微信、抖音等，发布有价值的内容，建立自己的知识品牌，吸引更多的粉丝，从而获得收益。</p>\n<p>2、发布视频：利用视频平台，如优酷、腾讯视频等，发布有价值的视频，从而获得收益。</p>\n<p>3、发布电子书：利用电子书平台，如亚马逊、当当等，发布有价值的电子书，从而获得收益。</p>\n<p>4、开设在线课程：利用在线课程平台，如慕课网、网易云课堂等，开设有价值的课程，从而获得收益。</p>\n<p>5、发布文章：利用文章发布平台，如简书、知乎等，发布有价值的文章，从而获得收益。</p>\n"},{"title":"postgresql 和mysql 对比","date":"2023-02-28T03:27:43.000Z","_content":"postgresql 和mysql 对比\n\n\n|  | PostgreSQL | MySQL |\n| :--- | :--- | :--- |\n| 数据类型 | 支持复杂的数据类型，如数组，多维数组，对象，XML | 支持常见的数据类型，如数字，字符串，日期等 |\n| 事务支持 | 支持ACID事务 | 支持ACID事务 |\n| 存储过程 | 支持存储过程 | 支持存储过程 |\n| 视图 | 支持视图 | 支持视图 |\n| 触发器 | 支持触发器 | 支持触发器 |\n| 索引 | 支持多种索引，如B树，哈希，GIST，GiST | 支持B树索引 |\n| 性能 | 高性能 | 中等性能 |\n| 安全性 | 支持完整的安全性功能，如访问控制，加密，身份验证等 | 支持完整的安全性功能，如访问控制，加密，身份验证等 |\n| 可移植性 | 支持多种操作系统，如Linux，Windows，Mac OS等 | 支持多种操作系统，如Linux，Windows，Mac OS等 |\n| 开源 | 开源 | 非开源 |","source":"_posts/psotgresvsmysql.md","raw":"---\ntitle: postgresql 和mysql 对比\ndate: 2023-02-28 11:27:43\ntags: 数据库\ncategories: 技术\n---\npostgresql 和mysql 对比\n\n\n|  | PostgreSQL | MySQL |\n| :--- | :--- | :--- |\n| 数据类型 | 支持复杂的数据类型，如数组，多维数组，对象，XML | 支持常见的数据类型，如数字，字符串，日期等 |\n| 事务支持 | 支持ACID事务 | 支持ACID事务 |\n| 存储过程 | 支持存储过程 | 支持存储过程 |\n| 视图 | 支持视图 | 支持视图 |\n| 触发器 | 支持触发器 | 支持触发器 |\n| 索引 | 支持多种索引，如B树，哈希，GIST，GiST | 支持B树索引 |\n| 性能 | 高性能 | 中等性能 |\n| 安全性 | 支持完整的安全性功能，如访问控制，加密，身份验证等 | 支持完整的安全性功能，如访问控制，加密，身份验证等 |\n| 可移植性 | 支持多种操作系统，如Linux，Windows，Mac OS等 | 支持多种操作系统，如Linux，Windows，Mac OS等 |\n| 开源 | 开源 | 非开源 |","slug":"psotgresvsmysql","published":1,"updated":"2023-03-08T07:53:52.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd066000rmdjdb1vq3mj1","content":"<p>postgresql 和mysql 对比</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">PostgreSQL</th>\n<th align=\"left\">MySQL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">数据类型</td>\n<td align=\"left\">支持复杂的数据类型，如数组，多维数组，对象，XML</td>\n<td align=\"left\">支持常见的数据类型，如数字，字符串，日期等</td>\n</tr>\n<tr>\n<td align=\"left\">事务支持</td>\n<td align=\"left\">支持ACID事务</td>\n<td align=\"left\">支持ACID事务</td>\n</tr>\n<tr>\n<td align=\"left\">存储过程</td>\n<td align=\"left\">支持存储过程</td>\n<td align=\"left\">支持存储过程</td>\n</tr>\n<tr>\n<td align=\"left\">视图</td>\n<td align=\"left\">支持视图</td>\n<td align=\"left\">支持视图</td>\n</tr>\n<tr>\n<td align=\"left\">触发器</td>\n<td align=\"left\">支持触发器</td>\n<td align=\"left\">支持触发器</td>\n</tr>\n<tr>\n<td align=\"left\">索引</td>\n<td align=\"left\">支持多种索引，如B树，哈希，GIST，GiST</td>\n<td align=\"left\">支持B树索引</td>\n</tr>\n<tr>\n<td align=\"left\">性能</td>\n<td align=\"left\">高性能</td>\n<td align=\"left\">中等性能</td>\n</tr>\n<tr>\n<td align=\"left\">安全性</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n</tr>\n<tr>\n<td align=\"left\">可移植性</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n</tr>\n<tr>\n<td align=\"left\">开源</td>\n<td align=\"left\">开源</td>\n<td align=\"left\">非开源</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"length":306,"excerpt":"","more":"<p>postgresql 和mysql 对比</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">PostgreSQL</th>\n<th align=\"left\">MySQL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">数据类型</td>\n<td align=\"left\">支持复杂的数据类型，如数组，多维数组，对象，XML</td>\n<td align=\"left\">支持常见的数据类型，如数字，字符串，日期等</td>\n</tr>\n<tr>\n<td align=\"left\">事务支持</td>\n<td align=\"left\">支持ACID事务</td>\n<td align=\"left\">支持ACID事务</td>\n</tr>\n<tr>\n<td align=\"left\">存储过程</td>\n<td align=\"left\">支持存储过程</td>\n<td align=\"left\">支持存储过程</td>\n</tr>\n<tr>\n<td align=\"left\">视图</td>\n<td align=\"left\">支持视图</td>\n<td align=\"left\">支持视图</td>\n</tr>\n<tr>\n<td align=\"left\">触发器</td>\n<td align=\"left\">支持触发器</td>\n<td align=\"left\">支持触发器</td>\n</tr>\n<tr>\n<td align=\"left\">索引</td>\n<td align=\"left\">支持多种索引，如B树，哈希，GIST，GiST</td>\n<td align=\"left\">支持B树索引</td>\n</tr>\n<tr>\n<td align=\"left\">性能</td>\n<td align=\"left\">高性能</td>\n<td align=\"left\">中等性能</td>\n</tr>\n<tr>\n<td align=\"left\">安全性</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n<td align=\"left\">支持完整的安全性功能，如访问控制，加密，身份验证等</td>\n</tr>\n<tr>\n<td align=\"left\">可移植性</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n<td align=\"left\">支持多种操作系统，如Linux，Windows，Mac OS等</td>\n</tr>\n<tr>\n<td align=\"left\">开源</td>\n<td align=\"left\">开源</td>\n<td align=\"left\">非开源</td>\n</tr>\n</tbody></table>\n"},{"title":"java 自旋锁 SpinLock","date":"2023-02-25T04:17:26.000Z","_content":"## 含义\n线程等待加锁时，**不会阻塞**，**不会进入等待状态**，**而是保持运行状态**。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。\n\n## 优势\n- 避免死锁\n自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；\n- 提高性能\n 减少上下文切换次数,提高效率.\n\n ## 缺点\n\n- 在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；\n\n- 不适合需要长时间等待的任务或线程；\n- 不适合大量线程等待的场景。\n\n## 适用场景\n- 等待时间比较短的任务中；\n- 线程数量不太多的应用中；\n- 当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。\n\n## java 实现\n\n```\npublic class SpinkLock {\n    \n    // 是否占用的标志\n    private AtomicBoolean occupied = new AtomicBoolean(false);\n\n    public void lock() {\n        // 使用自旋锁\n        while (occupied.getAndSet(true)) {\n        }\n    }\n\n    public void unlock() {\n        occupied.set(false);\n    }\n}\n```","source":"_posts/spinlock.md","raw":"---\ntitle:  java 自旋锁 SpinLock\ndate: 2023-02-25 12:17:26\ntags: [并发编程,多线程]\ncategories: 技术\n---\n## 含义\n线程等待加锁时，**不会阻塞**，**不会进入等待状态**，**而是保持运行状态**。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。\n\n## 优势\n- 避免死锁\n自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；\n- 提高性能\n 减少上下文切换次数,提高效率.\n\n ## 缺点\n\n- 在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；\n\n- 不适合需要长时间等待的任务或线程；\n- 不适合大量线程等待的场景。\n\n## 适用场景\n- 等待时间比较短的任务中；\n- 线程数量不太多的应用中；\n- 当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。\n\n## java 实现\n\n```\npublic class SpinkLock {\n    \n    // 是否占用的标志\n    private AtomicBoolean occupied = new AtomicBoolean(false);\n\n    public void lock() {\n        // 使用自旋锁\n        while (occupied.getAndSet(true)) {\n        }\n    }\n\n    public void unlock() {\n        occupied.set(false);\n    }\n}\n```","slug":"spinlock","published":1,"updated":"2023-02-26T09:23:16.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd067000wmdjdgtjigv1w","content":"<h2 id=\"含义\"><a href=\"#含义\" class=\"headerlink\" title=\"含义\"></a>含义</h2><p>线程等待加锁时，<strong>不会阻塞</strong>，<strong>不会进入等待状态</strong>，<strong>而是保持运行状态</strong>。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p>避免死锁<br>自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；</p>\n</li>\n<li><p>提高性能<br>减少上下文切换次数,提高效率.</p>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2></li>\n<li><p>在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；</p>\n</li>\n<li><p>不适合需要长时间等待的任务或线程；</p>\n</li>\n<li><p>不适合大量线程等待的场景。</p>\n</li>\n</ul>\n<h2 id=\"适用场景\"><a href=\"#适用场景\" class=\"headerlink\" title=\"适用场景\"></a>适用场景</h2><ul>\n<li>等待时间比较短的任务中；</li>\n<li>线程数量不太多的应用中；</li>\n<li>当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。</li>\n</ul>\n<h2 id=\"java-实现\"><a href=\"#java-实现\" class=\"headerlink\" title=\"java 实现\"></a>java 实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SpinkLock &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;&#x2F; 是否占用的标志</span><br><span class=\"line\">    private AtomicBoolean occupied &#x3D; new AtomicBoolean(false);</span><br><span class=\"line\"></span><br><span class=\"line\">    public void lock() &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 使用自旋锁</span><br><span class=\"line\">        while (occupied.getAndSet(true)) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void unlock() &#123;</span><br><span class=\"line\">        occupied.set(false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":540,"excerpt":"","more":"<h2 id=\"含义\"><a href=\"#含义\" class=\"headerlink\" title=\"含义\"></a>含义</h2><p>线程等待加锁时，<strong>不会阻塞</strong>，<strong>不会进入等待状态</strong>，<strong>而是保持运行状态</strong>。大致的思路是：让当前线程不停地的在循环体内执行，当循环的条件被其他线程改变时才能进入临界区。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p>避免死锁<br>自旋锁不会让线程阻塞或等待，也就不需要唤醒，所以可以避免产生死锁；</p>\n</li>\n<li><p>提高性能<br>减少上下文切换次数,提高效率.</p>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2></li>\n<li><p>在等待锁时进入循环会占用CPU，若等待的线程很多，对CPU的消耗会比较大；</p>\n</li>\n<li><p>不适合需要长时间等待的任务或线程；</p>\n</li>\n<li><p>不适合大量线程等待的场景。</p>\n</li>\n</ul>\n<h2 id=\"适用场景\"><a href=\"#适用场景\" class=\"headerlink\" title=\"适用场景\"></a>适用场景</h2><ul>\n<li>等待时间比较短的任务中；</li>\n<li>线程数量不太多的应用中；</li>\n<li>当等待时间长或线程数量很大时，可以使用其他锁（比如：可重入锁）。</li>\n</ul>\n<h2 id=\"java-实现\"><a href=\"#java-实现\" class=\"headerlink\" title=\"java 实现\"></a>java 实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SpinkLock &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;&#x2F; 是否占用的标志</span><br><span class=\"line\">    private AtomicBoolean occupied &#x3D; new AtomicBoolean(false);</span><br><span class=\"line\"></span><br><span class=\"line\">    public void lock() &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 使用自旋锁</span><br><span class=\"line\">        while (occupied.getAndSet(true)) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void unlock() &#123;</span><br><span class=\"line\">        occupied.set(false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"SpringBoot 集成 OpenAPI","date":"2023-03-07T02:17:38.000Z","toc":true,"_content":"## 1. 项目介绍\n本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。\n\n## 版本信息\n\n- jdk版本：openjdk19\n- springboot版本：3.0.4.RELEASE\n- springdoc版本：2.0.2\n\n## 简单步骤\n\n\n### 添加依赖\n    \n```xml\n<dependency>\n  <groupId>org.springdoc</groupId>\n  <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n  <version>2.0.2</version>\n</dependency>\n\n```\n\n\n\n### 编写controller\n\n```\n @Operation(summary = \"Get specific user object by it's id.\")\n    @GetMapping(\"/users/{id}\")\n    public User user(@Parameter(description = \"id of the user.\") @PathVariable(\"id\") long id) {\n\n        User user = new User();\n        user.setName(\"xxx\");\n        return user;\n    }\n```\n使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.\n### 访问地址:\n默认地址\n\n```\n# swagger-ui custom path\nspringdoc.swagger-ui.path=/swagger-ui.html\n\n```\n\n直接访问\n`http://localhost:8080/swagger-ui/index.html `效果如下:\n\n![image](https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png)\n","source":"_posts/springdoc.md","raw":"---\ntitle: SpringBoot 集成 OpenAPI\ndate: 2023-03-07 10:17:38\ntags: [openapi,swagger3]\ncategories: 技术\ntoc: true\n---\n## 1. 项目介绍\n本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。\n\n## 版本信息\n\n- jdk版本：openjdk19\n- springboot版本：3.0.4.RELEASE\n- springdoc版本：2.0.2\n\n## 简单步骤\n\n\n### 添加依赖\n    \n```xml\n<dependency>\n  <groupId>org.springdoc</groupId>\n  <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n  <version>2.0.2</version>\n</dependency>\n\n```\n\n\n\n### 编写controller\n\n```\n @Operation(summary = \"Get specific user object by it's id.\")\n    @GetMapping(\"/users/{id}\")\n    public User user(@Parameter(description = \"id of the user.\") @PathVariable(\"id\") long id) {\n\n        User user = new User();\n        user.setName(\"xxx\");\n        return user;\n    }\n```\n使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.\n### 访问地址:\n默认地址\n\n```\n# swagger-ui custom path\nspringdoc.swagger-ui.path=/swagger-ui.html\n\n```\n\n直接访问\n`http://localhost:8080/swagger-ui/index.html `效果如下:\n\n![image](https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png)\n","slug":"springdoc","published":1,"updated":"2023-03-07T02:22:31.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd069000zmdjdhr7dc61v","content":"<h2 id=\"1-项目介绍\"><a href=\"#1-项目介绍\" class=\"headerlink\" title=\"1. 项目介绍\"></a>1. 项目介绍</h2><p>本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。</p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><ul>\n<li>jdk版本：openjdk19</li>\n<li>springboot版本：3.0.4.RELEASE</li>\n<li>springdoc版本：2.0.2</li>\n</ul>\n<h2 id=\"简单步骤\"><a href=\"#简单步骤\" class=\"headerlink\" title=\"简单步骤\"></a>简单步骤</h2><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springdoc<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"编写controller\"><a href=\"#编写controller\" class=\"headerlink\" title=\"编写controller\"></a>编写controller</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Operation(summary &#x3D; &quot;Get specific user object by it&#39;s id.&quot;)</span><br><span class=\"line\">   @GetMapping(&quot;&#x2F;users&#x2F;&#123;id&#125;&quot;)</span><br><span class=\"line\">   public User user(@Parameter(description &#x3D; &quot;id of the user.&quot;) @PathVariable(&quot;id&quot;) long id) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       User user &#x3D; new User();</span><br><span class=\"line\">       user.setName(&quot;xxx&quot;);</span><br><span class=\"line\">       return user;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.</p>\n<h3 id=\"访问地址\"><a href=\"#访问地址\" class=\"headerlink\" title=\"访问地址:\"></a>访问地址:</h3><p>默认地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># swagger-ui custom path</span><br><span class=\"line\">springdoc.swagger-ui.path&#x3D;&#x2F;swagger-ui.html</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接访问<br><code>http://localhost:8080/swagger-ui/index.html </code>效果如下:</p>\n<p><img src=\"https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png\" alt=\"image\"></p>\n","site":{"data":{}},"length":860,"excerpt":"","more":"<h2 id=\"1-项目介绍\"><a href=\"#1-项目介绍\" class=\"headerlink\" title=\"1. 项目介绍\"></a>1. 项目介绍</h2><p>本项目是一个基于SpringBoot的项目，用于演示如何使用SpringBoot集成open-api，包括swagger3和springdoc。</p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><ul>\n<li>jdk版本：openjdk19</li>\n<li>springboot版本：3.0.4.RELEASE</li>\n<li>springdoc版本：2.0.2</li>\n</ul>\n<h2 id=\"简单步骤\"><a href=\"#简单步骤\" class=\"headerlink\" title=\"简单步骤\"></a>简单步骤</h2><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springdoc<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"编写controller\"><a href=\"#编写controller\" class=\"headerlink\" title=\"编写controller\"></a>编写controller</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Operation(summary &#x3D; &quot;Get specific user object by it&#39;s id.&quot;)</span><br><span class=\"line\">   @GetMapping(&quot;&#x2F;users&#x2F;&#123;id&#125;&quot;)</span><br><span class=\"line\">   public User user(@Parameter(description &#x3D; &quot;id of the user.&quot;) @PathVariable(&quot;id&quot;) long id) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       User user &#x3D; new User();</span><br><span class=\"line\">       user.setName(&quot;xxx&quot;);</span><br><span class=\"line\">       return user;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>使用 openapi 的好处就是不需要额外的额皮质,使用swagger3的时候会增加 config 这里不需要.</p>\n<h3 id=\"访问地址\"><a href=\"#访问地址\" class=\"headerlink\" title=\"访问地址:\"></a>访问地址:</h3><p>默认地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># swagger-ui custom path</span><br><span class=\"line\">springdoc.swagger-ui.path&#x3D;&#x2F;swagger-ui.html</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接访问<br><code>http://localhost:8080/swagger-ui/index.html </code>效果如下:</p>\n<p><img src=\"https://user-images.githubusercontent.com/9412449/223302078-7e443ea2-8bc0-49bb-ad23-a12046e3a290.png\" alt=\"image\"></p>\n"},{"title":"从难点中学习","date":"2023-02-18T06:28:37.000Z","_content":"## 先了解技术难点\n先分析难点,基本会从以下开始:\n\n有限的时间；\n复杂的环境；\n知识的盲区.\n解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。\n\n## 寻找解决方案\n可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。\n向他人请教,这个会涉及到另一个问题 **如何问问题?**\n## 如何问问题?\n1. 明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。\n\n2. 提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。\n\n3. 尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。\n\n4. 使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。\n\n5. 注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。\n\n## 实践\n实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。\n\n## 总结\n学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!","source":"_posts/studyformdiffrence.md","raw":"---\ntitle: 从难点中学习\ndate: 2023-02-18 14:28:37\ntags: study\ncategories: study\n---\n## 先了解技术难点\n先分析难点,基本会从以下开始:\n\n有限的时间；\n复杂的环境；\n知识的盲区.\n解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。\n\n## 寻找解决方案\n可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。\n向他人请教,这个会涉及到另一个问题 **如何问问题?**\n## 如何问问题?\n1. 明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。\n\n2. 提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。\n\n3. 尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。\n\n4. 使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。\n\n5. 注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。\n\n## 实践\n实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。\n\n## 总结\n学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!","slug":"studyformdiffrence","published":1,"updated":"2023-02-18T12:22:33.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06a0011mdjd0q9o13la","content":"<h2 id=\"先了解技术难点\"><a href=\"#先了解技术难点\" class=\"headerlink\" title=\"先了解技术难点\"></a>先了解技术难点</h2><p>先分析难点,基本会从以下开始:</p>\n<p>有限的时间；<br>复杂的环境；<br>知识的盲区.<br>解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。</p>\n<h2 id=\"寻找解决方案\"><a href=\"#寻找解决方案\" class=\"headerlink\" title=\"寻找解决方案\"></a>寻找解决方案</h2><p>可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。<br>向他人请教,这个会涉及到另一个问题 <strong>如何问问题?</strong></p>\n<h2 id=\"如何问问题\"><a href=\"#如何问问题\" class=\"headerlink\" title=\"如何问问题?\"></a>如何问问题?</h2><ol>\n<li><p>明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。</p>\n</li>\n<li><p>提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。</p>\n</li>\n<li><p>尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。</p>\n</li>\n<li><p>使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。</p>\n</li>\n<li><p>注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。</p>\n</li>\n</ol>\n<h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><p>实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!</p>\n","site":{"data":{}},"length":473,"excerpt":"","more":"<h2 id=\"先了解技术难点\"><a href=\"#先了解技术难点\" class=\"headerlink\" title=\"先了解技术难点\"></a>先了解技术难点</h2><p>先分析难点,基本会从以下开始:</p>\n<p>有限的时间；<br>复杂的环境；<br>知识的盲区.<br>解技术难点的关键是深入了解它的背景，把它拆解成一个个具体的问题，把它拆解成一个个可以解决的小问题。</p>\n<h2 id=\"寻找解决方案\"><a href=\"#寻找解决方案\" class=\"headerlink\" title=\"寻找解决方案\"></a>寻找解决方案</h2><p>可以通过搜索引擎、技术社区、技术文档等方式，寻找可以解决技术难点的解决方案。<br>向他人请教,这个会涉及到另一个问题 <strong>如何问问题?</strong></p>\n<h2 id=\"如何问问题\"><a href=\"#如何问问题\" class=\"headerlink\" title=\"如何问问题?\"></a>如何问问题?</h2><ol>\n<li><p>明确你要问的问题：先确定你要问的问题，确保你的问题清楚明确，不要模糊不清。</p>\n</li>\n<li><p>提出具体的问题：避免问题过于抽象，要把问题具体化，让对方能够清楚地理解你的问题。</p>\n</li>\n<li><p>尽量使用简短的问题：尽量使用简短的问题，避免太多的冗余信息，以免让对方感到困惑。</p>\n</li>\n<li><p>使用开放性问题：尽量使用开放性问题，这样可以让对方有更多的发挥空间，从而获得更多的信息。</p>\n</li>\n<li><p>注意问题的措辞：注意问题的措辞，避免使用过于激烈的语言，以免让对方感到压力。</p>\n</li>\n</ol>\n<h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><p>实践是学习的最佳方式，可以通过实践来加深对技术难点的理解，并且在实践中发现新的知识点。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>学习过程中，可以总结解决技术难点的方法，以便以后更好地解决类似的问题。最好能把解题思路和过程记录下来,分享给大家.势必会事半功倍!</p>\n"},{"title":"学习是在学什么","date":"2023-02-24T00:55:09.000Z","_content":"我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?\n\n## 知识改变命运\n有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?\n\n## 为了看清世界\n我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.\n最终都将是我们成为更好的自己.\n\n学习能让我们看清世界,认识世界,了解世界.\n学习能让我们认识自我,看清自我.\n学习是在学什么?\n## 为了解决问题\n其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.\n起码我们假死的时候,自己可以杀掉进程,重新打开软件.\n所以学习的最终目的就是解决问题,也就是产品上 解决bug.\n人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.\n过程最重要,一路上解决各种问题的过程,才是最珍贵的.\n","source":"_posts/studywhat.md","raw":"---\ntitle: 学习是在学什么\ndate: 2023-02-24 08:55:09\ntags: 学习\ncategories: study\n---\n我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?\n\n## 知识改变命运\n有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?\n\n## 为了看清世界\n我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.\n最终都将是我们成为更好的自己.\n\n学习能让我们看清世界,认识世界,了解世界.\n学习能让我们认识自我,看清自我.\n学习是在学什么?\n## 为了解决问题\n其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.\n起码我们假死的时候,自己可以杀掉进程,重新打开软件.\n所以学习的最终目的就是解决问题,也就是产品上 解决bug.\n人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.\n过程最重要,一路上解决各种问题的过程,才是最珍贵的.\n","slug":"studywhat","published":1,"updated":"2023-02-24T04:56:04.280Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06b0015mdjd2ftuf0v7","content":"<p>我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?</p>\n<h2 id=\"知识改变命运\"><a href=\"#知识改变命运\" class=\"headerlink\" title=\"知识改变命运\"></a>知识改变命运</h2><p>有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?</p>\n<h2 id=\"为了看清世界\"><a href=\"#为了看清世界\" class=\"headerlink\" title=\"为了看清世界\"></a>为了看清世界</h2><p>我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.<br>最终都将是我们成为更好的自己.</p>\n<p>学习能让我们看清世界,认识世界,了解世界.<br>学习能让我们认识自我,看清自我.<br>学习是在学什么?</p>\n<h2 id=\"为了解决问题\"><a href=\"#为了解决问题\" class=\"headerlink\" title=\"为了解决问题\"></a>为了解决问题</h2><p>其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.<br>起码我们假死的时候,自己可以杀掉进程,重新打开软件.<br>所以学习的最终目的就是解决问题,也就是产品上 解决bug.<br>人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.<br>过程最重要,一路上解决各种问题的过程,才是最珍贵的.</p>\n","site":{"data":{}},"length":475,"excerpt":"","more":"<p>我们不只是在求学过程中学习,从我们来到世上之后,从家庭,学校,社会上一直在主动或者被动接受各种知识,那么我们是为什么学习呢?</p>\n<h2 id=\"知识改变命运\"><a href=\"#知识改变命运\" class=\"headerlink\" title=\"知识改变命运\"></a>知识改变命运</h2><p>有人说我就是为了考大学,考了大学为了找好工作,工作学习是为了涨工资,等等等等,其实都对那么本质是为啥呢?都说高考是唯一一次公平的竞争,底层人民的孩子改变命运的唯一一次翻牌的机会了.  改变命运之后呢?</p>\n<h2 id=\"为了看清世界\"><a href=\"#为了看清世界\" class=\"headerlink\" title=\"为了看清世界\"></a>为了看清世界</h2><p>我们不只是在求学过程中学习,在我们来到世上之后,从家庭学校社会上一直再主动或者被动接受各种知识,有客观的自然规律,有人问的艺术细胞,还有人类智慧结晶.<br>最终都将是我们成为更好的自己.</p>\n<p>学习能让我们看清世界,认识世界,了解世界.<br>学习能让我们认识自我,看清自我.<br>学习是在学什么?</p>\n<h2 id=\"为了解决问题\"><a href=\"#为了解决问题\" class=\"headerlink\" title=\"为了解决问题\"></a>为了解决问题</h2><p>其实, 人生就像是操作系统一直在运作,唯独不同的是一旦关机后,会不会有上帝给你重启那就是另外一件事了.<br>起码我们假死的时候,自己可以杀掉进程,重新打开软件.<br>所以学习的最终目的就是解决问题,也就是产品上 解决bug.<br>人生来就是要俩解决各种问题的,并不是达到某种结果,结果都会死的.<br>过程最重要,一路上解决各种问题的过程,才是最珍贵的.</p>\n"},{"title":"我的规划","_content":"\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n","source":"_posts/target.md","raw":"---\ntitle: 我的规划\ntags: [hexo,性能测试]\ncategories: 工作\n# toc: true\n---\n\n我的规划\n\n---\n认知升级：不断学习去升级认知，做更好的自己。\n长期主义：做有长期收益的事情，比如写作与投资。\n积极分享：分享个人经验积极影响他人。\n\n","slug":"target","published":1,"date":"2023-02-16T15:20:50.706Z","updated":"2023-02-17T03:19:40.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06d0018mdjd0ygz48bx","content":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n","site":{"data":{}},"length":67,"excerpt":"","more":"<p>我的规划</p>\n<hr>\n<p>认知升级：不断学习去升级认知，做更好的自己。<br>长期主义：做有长期收益的事情，比如写作与投资。<br>积极分享：分享个人经验积极影响他人。</p>\n"},{"title":"创建1000w测试数据","date":"2023-02-21T09:25:38.000Z","_content":"假如需要创建1000w 测试数据的话,可以尝试使用存储过程.\n\n```\nCREATE TABLE `data` \n(\n  `id`         bigint(20) NOT NULL      AUTO_INCREMENT,\n  `datetime`   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,\n  `channel`    int(11)                  DEFAULT NULL,\n  `value`      float                    DEFAULT NULL,\n\n  PRIMARY KEY (`id`)\n);\n\n\nCREATE PROCEDURE generate_data(IN n int)\nBEGIN\n  DECLARE i INT DEFAULT 0;\n  WHILE i < n DO\n    INSERT INTO `data` (`datetime`,`value`,`channel`) VALUES (\n      FROM_UNIXTIME(UNIX_TIMESTAMP('2014-01-01 01:00:00')+FLOOR(RAND()*31536000)),\n      ROUND(RAND()*100,2),\n      1\n    );\n    SET i = i + 1;\n  END WHILE;\n\n  CALL generate_data(10000);\n \n```\n\n删除存储过程执行如下:\n```\nDROP PROCEDURE generate_data;\n```\n\n\n","source":"_posts/testdatas.md","raw":"---\ntitle: 创建1000w测试数据\ndate: 2023-02-21 17:25:38\ntags: 测试\ncategories: 技术\n---\n假如需要创建1000w 测试数据的话,可以尝试使用存储过程.\n\n```\nCREATE TABLE `data` \n(\n  `id`         bigint(20) NOT NULL      AUTO_INCREMENT,\n  `datetime`   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,\n  `channel`    int(11)                  DEFAULT NULL,\n  `value`      float                    DEFAULT NULL,\n\n  PRIMARY KEY (`id`)\n);\n\n\nCREATE PROCEDURE generate_data(IN n int)\nBEGIN\n  DECLARE i INT DEFAULT 0;\n  WHILE i < n DO\n    INSERT INTO `data` (`datetime`,`value`,`channel`) VALUES (\n      FROM_UNIXTIME(UNIX_TIMESTAMP('2014-01-01 01:00:00')+FLOOR(RAND()*31536000)),\n      ROUND(RAND()*100,2),\n      1\n    );\n    SET i = i + 1;\n  END WHILE;\n\n  CALL generate_data(10000);\n \n```\n\n删除存储过程执行如下:\n```\nDROP PROCEDURE generate_data;\n```\n\n\n","slug":"testdatas","published":1,"updated":"2023-02-21T09:28:48.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06e001cmdjdfrghbtyo","content":"<p>假如需要创建1000w 测试数据的话,可以尝试使用存储过程.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE &#96;data&#96; </span><br><span class=\"line\">(</span><br><span class=\"line\">  &#96;id&#96;         bigint(20) NOT NULL      AUTO_INCREMENT,</span><br><span class=\"line\">  &#96;datetime&#96;   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,</span><br><span class=\"line\">  &#96;channel&#96;    int(11)                  DEFAULT NULL,</span><br><span class=\"line\">  &#96;value&#96;      float                    DEFAULT NULL,</span><br><span class=\"line\"></span><br><span class=\"line\">  PRIMARY KEY (&#96;id&#96;)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">CREATE PROCEDURE generate_data(IN n int)</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">  DECLARE i INT DEFAULT 0;</span><br><span class=\"line\">  WHILE i &lt; n DO</span><br><span class=\"line\">    INSERT INTO &#96;data&#96; (&#96;datetime&#96;,&#96;value&#96;,&#96;channel&#96;) VALUES (</span><br><span class=\"line\">      FROM_UNIXTIME(UNIX_TIMESTAMP(&#39;2014-01-01 01:00:00&#39;)+FLOOR(RAND()*31536000)),</span><br><span class=\"line\">      ROUND(RAND()*100,2),</span><br><span class=\"line\">      1</span><br><span class=\"line\">    );</span><br><span class=\"line\">    SET i &#x3D; i + 1;</span><br><span class=\"line\">  END WHILE;</span><br><span class=\"line\"></span><br><span class=\"line\">  CALL generate_data(10000);</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>删除存储过程执行如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP PROCEDURE generate_data;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"length":642,"excerpt":"","more":"<p>假如需要创建1000w 测试数据的话,可以尝试使用存储过程.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE &#96;data&#96; </span><br><span class=\"line\">(</span><br><span class=\"line\">  &#96;id&#96;         bigint(20) NOT NULL      AUTO_INCREMENT,</span><br><span class=\"line\">  &#96;datetime&#96;   timestamp  NULL          DEFAULT CURRENT_TIMESTAMP,</span><br><span class=\"line\">  &#96;channel&#96;    int(11)                  DEFAULT NULL,</span><br><span class=\"line\">  &#96;value&#96;      float                    DEFAULT NULL,</span><br><span class=\"line\"></span><br><span class=\"line\">  PRIMARY KEY (&#96;id&#96;)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">CREATE PROCEDURE generate_data(IN n int)</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">  DECLARE i INT DEFAULT 0;</span><br><span class=\"line\">  WHILE i &lt; n DO</span><br><span class=\"line\">    INSERT INTO &#96;data&#96; (&#96;datetime&#96;,&#96;value&#96;,&#96;channel&#96;) VALUES (</span><br><span class=\"line\">      FROM_UNIXTIME(UNIX_TIMESTAMP(&#39;2014-01-01 01:00:00&#39;)+FLOOR(RAND()*31536000)),</span><br><span class=\"line\">      ROUND(RAND()*100,2),</span><br><span class=\"line\">      1</span><br><span class=\"line\">    );</span><br><span class=\"line\">    SET i &#x3D; i + 1;</span><br><span class=\"line\">  END WHILE;</span><br><span class=\"line\"></span><br><span class=\"line\">  CALL generate_data(10000);</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>删除存储过程执行如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP PROCEDURE generate_data;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"一些实用的 tips","date":"2023-02-28T02:55:36.000Z","_content":" 记录一些比较实用的 tips.\n ## Alfred\n mac 一定要用这个,好的工具都这里了.\n ## chatgpt \n 一些能那里直接用的答案.\n ## podcast\n 一些播客很有必要听一下.\n ","source":"_posts/tips.md","raw":"---\ntitle: 一些实用的 tips\ndate: 2023-02-28 10:55:36\ntags: tips\ncategories: tips\n---\n 记录一些比较实用的 tips.\n ## Alfred\n mac 一定要用这个,好的工具都这里了.\n ## chatgpt \n 一些能那里直接用的答案.\n ## podcast\n 一些播客很有必要听一下.\n ","slug":"tips","published":1,"updated":"2023-02-28T02:57:53.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06f001fmdjd1wreg0n9","content":"<p> 记录一些比较实用的 tips.</p>\n<h2 id=\"Alfred\"><a href=\"#Alfred\" class=\"headerlink\" title=\"Alfred\"></a>Alfred</h2><p> mac 一定要用这个,好的工具都这里了.</p>\n<h2 id=\"chatgpt\"><a href=\"#chatgpt\" class=\"headerlink\" title=\"chatgpt\"></a>chatgpt</h2><p> 一些能那里直接用的答案.</p>\n<h2 id=\"podcast\"><a href=\"#podcast\" class=\"headerlink\" title=\"podcast\"></a>podcast</h2><p> 一些播客很有必要听一下.</p>\n","site":{"data":{}},"length":77,"excerpt":"","more":"<p> 记录一些比较实用的 tips.</p>\n<h2 id=\"Alfred\"><a href=\"#Alfred\" class=\"headerlink\" title=\"Alfred\"></a>Alfred</h2><p> mac 一定要用这个,好的工具都这里了.</p>\n<h2 id=\"chatgpt\"><a href=\"#chatgpt\" class=\"headerlink\" title=\"chatgpt\"></a>chatgpt</h2><p> 一些能那里直接用的答案.</p>\n<h2 id=\"podcast\"><a href=\"#podcast\" class=\"headerlink\" title=\"podcast\"></a>podcast</h2><p> 一些播客很有必要听一下.</p>\n"},{"title":"两件小事","date":"2020-11-25T07:16:52.000Z","toc":true,"_content":"本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","source":"_posts/towthings.md","raw":"---\ntitle: 两件小事\ndate: 2020-11-25 15:16:52\ntags: [Grow up ,生活,100]\ntoc: true\n\n---\n本文围绕两件事\n> 被偏爱的总是有恃无恐\n\n第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。\n> 窗外不只风景，还有你和未来的视界\n\n第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。\n","slug":"towthings","published":1,"updated":"2023-02-16T15:20:50.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06h001jmdjd3ysof43c","content":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n","site":{"data":{}},"length":306,"excerpt":"","more":"<p>本文围绕两件事</p>\n<blockquote>\n<p>被偏爱的总是有恃无恐</p>\n</blockquote>\n<p>第一件是我拿可爱的女儿。宝宝开始喃喃自语，好像是在叫爸爸了，看着她一点点开始变大，心里很高兴，也很害怕，她慢一些长大吧。 于司令晚上也跟我投诉，“你家嘟嘟越来约不乖了”。我问咋了？她一脸委屈的跟我诉苦，”你家嘟嘟咬我咪咪可疼了，昨晚给我咬哭了“。哈哈哈。我说下次你揍她，就说我让的。</p>\n<blockquote>\n<p>窗外不只风景，还有你和未来的视界</p>\n</blockquote>\n<p>第二件事，跟于司令一起张罗搬家买点必须零碎，昨晚闹还闹得不欢而散，今晚一起出谋划策，畅所欲言，虽然不是给自己的房子置办，起码也是一起的小窝吧，于司令一直期望一个温馨的小家，此时北漂的我们来说，虽然有些苦难，但是只要我们在一起努力，终究会实现。感谢于司令的包容和鼓励。</p>\n"},{"title":"为什么禁用\"select * \"","date":"2023-02-22T05:54:33.000Z","_content":"SELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：\n\n不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。\n\n减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。\n\n查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。","source":"_posts/whynotstaet.md","raw":"---\ntitle: 为什么禁用\"select * \"\ndate: 2023-02-22 13:54:33\ntags: mysql\ncategories: 技术\n---\nSELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：\n\n不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。\n\n减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。\n\n查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。","slug":"whynotstaet","published":1,"updated":"2023-02-22T05:55:27.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfktd06i001nmdjd4xst9pge","content":"<p>SELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：</p>\n<p>不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。</p>\n<p>减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。</p>\n<p>查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。</p>\n","site":{"data":{}},"length":279,"excerpt":"","more":"<p>SELECT * 是一种 SQL 查询语句，表示从指定的表中选择所有列。虽然 SELECT * 可以返回表中的所有数据，但这种查询方法可能会导致一些问题：</p>\n<p>不必要的网络流量：如果一张表有很多列，而且你只需要其中的一部分，使用 SELECT * 会将所有列的数据都传输到客户端，增加了不必要的网络流量。</p>\n<p>减缓查询速度：如果查询的表中有很多列，而且你只需要其中的一部分，使用 SELECT * 可能会减缓查询的速度，因为数据库需要检索和传输多余的数据。</p>\n<p>查询结果不可预测：如果表的结构发生了变化，例如增加或删除了一些列，使用 SELECT * 会返回新的结构，导致你的代码需要重新调整来适应这些变化。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cle7th3oq000n92jj5rc8drly","category_id":"cle7th3ot000r92jjgoz1cqug","_id":"cle7th3oy001192jj9ntb2jgt"},{"post_id":"cle7th3q7002e92jjbad25wo3","category_id":"cle7th3q5002992jj1bln1t1c","_id":"cle7th3q9002j92jjbqyl9tqy"},{"post_id":"cle7th3q3002692jjcoyhb1sx","category_id":"cle7th3q5002992jj1bln1t1c","_id":"cle7th3qa002l92jj76lwd0t7"},{"post_id":"cle7th3q6002b92jjffru0tnp","category_id":"cle7th3q8002g92jj4mqp4woi","_id":"cle7th3qa002n92jj0zvmg70g"},{"post_id":"clfktd05t0006mdjd80157e82","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd05z000emdjd78zn76zv"},{"post_id":"clfktd05h0001mdjdhsvt1fdg","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd062000imdjdewllcktq"},{"post_id":"clfktd05v0007mdjdf69q3nub","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd063000lmdjdeudd5338"},{"post_id":"clfktd05x000bmdjdf3vcgh64","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd065000pmdjd30m92ghd"},{"post_id":"clfktd05j0002mdjd2nxoaua2","category_id":"clfktd05v0008mdjdhn0d7ax1","_id":"clfktd066000smdjd68pa9h4m"},{"post_id":"clfktd05y000dmdjd079ohy16","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd068000xmdjdf4ly27k0"},{"post_id":"clfktd061000hmdjd39p1cef9","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd0690010mdjd6it81mbd"},{"post_id":"clfktd05s0005mdjd15vn16cv","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06a0012mdjdf0ps3vcz"},{"post_id":"clfktd063000kmdjd52210mmb","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06c0016mdjd1w4a1cb2"},{"post_id":"clfktd066000rmdjdb1vq3mj1","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06d0019mdjd9mx0fqn2"},{"post_id":"clfktd067000wmdjdgtjigv1w","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06f001dmdjdgo4jfyh0"},{"post_id":"clfktd069000zmdjdhr7dc61v","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06g001gmdjdh5wn67q1"},{"post_id":"clfktd064000omdjd3wn1c9o4","category_id":"clfktd067000umdjd70ai1f60","_id":"clfktd06i001kmdjd6rjo0a29"},{"post_id":"clfktd06a0011mdjd0q9o13la","category_id":"clfktd05v0008mdjdhn0d7ax1","_id":"clfktd06j001omdjde0z09kl4"},{"post_id":"clfktd06b0015mdjd2ftuf0v7","category_id":"clfktd05v0008mdjdhn0d7ax1","_id":"clfktd06k001rmdjd2rnh1ikr"},{"post_id":"clfktd06d0018mdjd0ygz48bx","category_id":"cle7th3q5002992jj1bln1t1c","_id":"clfktd06k001tmdjd95iihh3n"},{"post_id":"clfktd06e001cmdjdfrghbtyo","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06l001wmdjdelsg5n4r"},{"post_id":"clfktd06i001nmdjd4xst9pge","category_id":"clfktd05l0003mdjdbugd3vsd","_id":"clfktd06l001ymdjd5z0ph0db"},{"post_id":"clfktd06f001fmdjd1wreg0n9","category_id":"clfktd06i001lmdjdbtgd6trs","_id":"clfktd06m0020mdjd9d35b9xr"}],"PostTag":[{"post_id":"cle7th3nm000292jjeha3ez08","tag_id":"cle7th3o1000592jj35nx86hw","_id":"cle7th3oj000d92jj9yq41nic"},{"post_id":"cle7th3o3000792jj662ndjo0","tag_id":"cle7th3oi000c92jjaopw98w9","_id":"cle7th3oo000i92jjbuhtao7y"},{"post_id":"cle7th3of000992jj0cj7cz4f","tag_id":"cle7th3o1000592jj35nx86hw","_id":"cle7th3oq000m92jjcyfkhtv0"},{"post_id":"cle7th3of000992jj0cj7cz4f","tag_id":"cle7th3om000g92jj2lhffxat","_id":"cle7th3or000o92jj6t1h36tw"},{"post_id":"cle7th3oi000b92jjahfsh26i","tag_id":"cle7th3op000k92jj6dvecvt0","_id":"cle7th3ov000v92jjc44i9obs"},{"post_id":"cle7th3oi000b92jjahfsh26i","tag_id":"cle7th3or000p92jj4whedqzn","_id":"cle7th3ow000x92jjha7sea9t"},{"post_id":"cle7th3oj000e92jj5um7byke","tag_id":"cle7th3ov000u92jjaca7676x","_id":"cle7th3p1001592jj39gpc0m2"},{"post_id":"cle7th3oj000e92jj5um7byke","tag_id":"cle7th3ox000z92jjhntkhuva","_id":"cle7th3p2001792jjfvdi71g1"},{"post_id":"cle7th3oj000e92jj5um7byke","tag_id":"cle7th3o1000592jj35nx86hw","_id":"cle7th3p3001a92jj25es1qlv"},{"post_id":"cle7th3p1001492jjai7dejma","tag_id":"cle7th3op000k92jj6dvecvt0","_id":"cle7th3p4001b92jjcybxhue7"},{"post_id":"cle7th3p1001692jj6ay6cskr","tag_id":"cle7th3op000k92jj6dvecvt0","_id":"cle7th3p4001d92jjf7xf8s6b"},{"post_id":"cle7th3op000l92jj8vs4ckxf","tag_id":"cle7th3p0001392jj99eqdb3v","_id":"cle7th3p4001e92jjh6r3agpr"},{"post_id":"cle7th3op000l92jj8vs4ckxf","tag_id":"cle7th3p2001892jjh50q5u32","_id":"cle7th3p5001g92jjcx63bkym"},{"post_id":"cle7th3oq000n92jj5rc8drly","tag_id":"cle7th3p4001c92jjdvnf254q","_id":"cle7th3p5001h92jj4j10bey6"},{"post_id":"cle7th3os000q92jj9fh835lh","tag_id":"cle7th3p5001f92jj2g0701am","_id":"cle7th3p6001j92jj1xuwhkkh"},{"post_id":"cle7th3ot000s92jjhpj16i7j","tag_id":"cle7th3p5001i92jjcvwa6o3t","_id":"cle7th3p7001l92jj65ww51s8"},{"post_id":"cle7th3ou000t92jjcut6fd9k","tag_id":"cle7th3p2001892jjh50q5u32","_id":"cle7th3p8001o92jj2ynp20q6"},{"post_id":"cle7th3ou000t92jjcut6fd9k","tag_id":"cle7th3p0001392jj99eqdb3v","_id":"cle7th3p8001p92jj7ueaann8"},{"post_id":"cle7th3ov000w92jj6wu0g145","tag_id":"cle7th3p8001n92jj957v09od","_id":"cle7th3pa001r92jjc1xyg6l0"},{"post_id":"cle7th3ow000y92jjhwrd69lm","tag_id":"cle7th3p8001q92jjfwdk7daf","_id":"cle7th3pb001u92jj0azr9fc8"},{"post_id":"cle7th3ow000y92jjhwrd69lm","tag_id":"cle7th3pa001s92jjfpz0e6o1","_id":"cle7th3pb001v92jj91z07gse"},{"post_id":"cle7th3oy001092jj3hrv760k","tag_id":"cle7th3pb001t92jj6iqthcr4","_id":"cle7th3pb001x92jj5ul2ekza"},{"post_id":"cle7th3oz001292jj7fkb9pfx","tag_id":"cle7th3pb001w92jjb6tob6nu","_id":"cle7th3pc001z92jj68b8514z"},{"post_id":"cle7th3p3001992jjddqmaghe","tag_id":"cle7th3pc001y92jjai4zb0y4","_id":"cle7th3pd002192jj9nrn7q8c"},{"post_id":"cle7th3p3001992jjddqmaghe","tag_id":"cle7th3pc002092jjf1na4sv7","_id":"cle7th3pd002292jj2dl28xcy"},{"post_id":"cle7th3q2002492jj5c1n107q","tag_id":"cle7th3p8001q92jjfwdk7daf","_id":"cle7th3q4002792jj8fk85gjd"},{"post_id":"cle7th3q2002492jj5c1n107q","tag_id":"cle7th3pa001s92jjfpz0e6o1","_id":"cle7th3q6002a92jj4089blv4"},{"post_id":"cle7th3q4002892jj21vbhe6p","tag_id":"cle7th3p8001q92jjfwdk7daf","_id":"cle7th3q7002d92jjhj11ap0d"},{"post_id":"cle7th3q4002892jj21vbhe6p","tag_id":"cle7th3pa001s92jjfpz0e6o1","_id":"cle7th3q8002f92jj4wj33pqc"},{"post_id":"cle7th3q1002392jjgoakht2z","tag_id":"cle7th3q3002592jjb6v2291x","_id":"cle7th3q9002i92jjcxkqct0d"},{"post_id":"cle7th3q3002692jjcoyhb1sx","tag_id":"cle7th3q7002c92jj0jb739lc","_id":"cle7th3qa002m92jjaila266p"},{"post_id":"cle7th3q3002692jjcoyhb1sx","tag_id":"cle7th3q9002h92jjhslm2xeh","_id":"cle7th3qa002o92jj4cehaaxe"},{"post_id":"cle7th3q6002b92jjffru0tnp","tag_id":"cle7th3q7002c92jj0jb739lc","_id":"cle7th3qb002r92jj70off2dn"},{"post_id":"cle7th3q6002b92jjffru0tnp","tag_id":"cle7th3q9002h92jjhslm2xeh","_id":"cle7th3qb002s92jjgupi7c64"},{"post_id":"cle7th3q7002e92jjbad25wo3","tag_id":"cle7th3q7002c92jj0jb739lc","_id":"cle7th3qc002t92jj8g739dfx"},{"post_id":"cle7th3q7002e92jjbad25wo3","tag_id":"cle7th3q9002h92jjhslm2xeh","_id":"cle7th3qc002u92jj5f5r5lmv"},{"post_id":"clfktd05t0006mdjd80157e82","tag_id":"cle7th3op000k92jj6dvecvt0","_id":"clfktd05w000amdjd0bniev06"},{"post_id":"clfktd05t0006mdjd80157e82","tag_id":"cle7th3or000p92jj4whedqzn","_id":"clfktd05y000cmdjd7iy8fooq"},{"post_id":"clfktd05h0001mdjdhsvt1fdg","tag_id":"clfktd05r0004mdjd8q5sdu48","_id":"clfktd062000jmdjdf7wnc4ey"},{"post_id":"clfktd05h0001mdjdhsvt1fdg","tag_id":"clfktd05w0009mdjd9lrh6ydy","_id":"clfktd063000mmdjdd5duc303"},{"post_id":"clfktd05y000dmdjd079ohy16","tag_id":"cle7th3q7002c92jj0jb739lc","_id":"clfktd065000qmdjd260q1674"},{"post_id":"clfktd05j0002mdjd2nxoaua2","tag_id":"clfktd05z000gmdjd2bdo275f","_id":"clfktd066000tmdjdcnkeg5b3"},{"post_id":"clfktd063000kmdjd52210mmb","tag_id":"clfktd05w0009mdjd9lrh6ydy","_id":"clfktd068000ymdjd1wduhand"},{"post_id":"clfktd05s0005mdjd15vn16cv","tag_id":"clfktd064000nmdjdc6ex5la4","_id":"clfktd06b0014mdjdgdt14l7h"},{"post_id":"clfktd05s0005mdjd15vn16cv","tag_id":"clfktd067000vmdjd8m1m9806","_id":"clfktd06c0017mdjdd0kzd87i"},{"post_id":"clfktd05v0007mdjdf69q3nub","tag_id":"clfktd067000vmdjd8m1m9806","_id":"clfktd06e001bmdjdcyry85m4"},{"post_id":"clfktd06d0018mdjd0ygz48bx","tag_id":"cle7th3q7002c92jj0jb739lc","_id":"clfktd06f001emdjde56h0ctg"},{"post_id":"clfktd06d0018mdjd0ygz48bx","tag_id":"cle7th3q9002h92jjhslm2xeh","_id":"clfktd06h001imdjdbljma4ci"},{"post_id":"clfktd05x000bmdjdf3vcgh64","tag_id":"clfktd06d001amdjdb7d3f56j","_id":"clfktd06i001mmdjd9kvfdhrf"},{"post_id":"clfktd06h001jmdjd3ysof43c","tag_id":"cle7th3ov000u92jjaca7676x","_id":"clfktd06k001qmdjd7cck7t27"},{"post_id":"clfktd06h001jmdjd3ysof43c","tag_id":"cle7th3ox000z92jjhntkhuva","_id":"clfktd06k001smdjd0rukf2cv"},{"post_id":"clfktd06h001jmdjd3ysof43c","tag_id":"cle7th3o1000592jj35nx86hw","_id":"clfktd06l001vmdjdcgo9e856"},{"post_id":"clfktd061000hmdjd39p1cef9","tag_id":"clfktd06g001hmdjdbpvl0imt","_id":"clfktd06l001xmdjdcef19en7"},{"post_id":"clfktd061000hmdjd39p1cef9","tag_id":"clfktd06k001pmdjdaadga3zr","_id":"clfktd06m001zmdjd5gs11h52"},{"post_id":"clfktd064000omdjd3wn1c9o4","tag_id":"clfktd06l001umdjde28j1nyq","_id":"clfktd06m0022mdjd5f9c5mk6"},{"post_id":"clfktd066000rmdjdb1vq3mj1","tag_id":"clfktd06g001hmdjdbpvl0imt","_id":"clfktd06n0024mdjd2vsy739j"},{"post_id":"clfktd067000wmdjdgtjigv1w","tag_id":"clfktd06m0023mdjd9o3x4vlw","_id":"clfktd06o0026mdjd41p50bg5"},{"post_id":"clfktd067000wmdjdgtjigv1w","tag_id":"clfktd05w0009mdjd9lrh6ydy","_id":"clfktd06o0027mdjd1gwn9evc"},{"post_id":"clfktd069000zmdjdhr7dc61v","tag_id":"clfktd06n0025mdjd4a8256ow","_id":"clfktd06p002amdjd7a5fci74"},{"post_id":"clfktd069000zmdjdhr7dc61v","tag_id":"clfktd06o0028mdjdas4n5cw8","_id":"clfktd06p002bmdjd80au1w0f"},{"post_id":"clfktd06a0011mdjd0q9o13la","tag_id":"clfktd06o0029mdjd49j40757","_id":"clfktd06p002dmdjdhe84efan"},{"post_id":"clfktd06b0015mdjd2ftuf0v7","tag_id":"clfktd06p002cmdjd33e5ehic","_id":"clfktd06q002fmdjd49t7137i"},{"post_id":"clfktd06e001cmdjdfrghbtyo","tag_id":"clfktd06p002emdjd0ljo8mns","_id":"clfktd06t002hmdjd3ajvf3qy"},{"post_id":"clfktd06f001fmdjd1wreg0n9","tag_id":"clfktd06q002gmdjd1cgm2gff","_id":"clfktd06w002jmdjdgvv2256y"},{"post_id":"clfktd06i001nmdjd4xst9pge","tag_id":"clfktd06w002imdjdhkwc3gzn","_id":"clfktd06x002kmdjdbginefkb"}],"Tag":[{"name":"100","_id":"cle7th3o1000592jj35nx86hw"},{"name":"diary","_id":"cle7th3oi000c92jjaopw98w9"},{"name":"吐槽","_id":"cle7th3om000g92jj2lhffxat"},{"name":"docker","_id":"cle7th3op000k92jj6dvecvt0"},{"name":"bug","_id":"cle7th3or000p92jj4whedqzn"},{"name":"Grow up","_id":"cle7th3ov000u92jjaca7676x"},{"name":"生活","_id":"cle7th3ox000z92jjhntkhuva"},{"name":"关灯吃面","_id":"cle7th3p0001392jj99eqdb3v"},{"name":"理财","_id":"cle7th3p2001892jjh50q5u32"},{"name":"idea","_id":"cle7th3p4001c92jjdvnf254q"},{"name":"java 锁","_id":"cle7th3p5001f92jj2g0701am"},{"name":"java","_id":"cle7th3p5001i92jjcvwa6o3t"},{"name":"juc","_id":"cle7th3p8001n92jj957v09od"},{"name":"挣钱","_id":"cle7th3p8001q92jjfwdk7daf"},{"name":"内容","_id":"cle7th3pa001s92jjfpz0e6o1"},{"name":"life","_id":"cle7th3pb001t92jj6iqthcr4"},{"name":"redis，缓存","_id":"cle7th3pb001w92jjb6tob6nu"},{"name":"springmvc","_id":"cle7th3pc001y92jjai4zb0y4"},{"name":"weblux","_id":"cle7th3pc002092jjf1na4sv7"},{"name":"疫情 xbb 人间清醒","_id":"cle7th3q3002592jjb6v2291x"},{"name":"hexo","_id":"cle7th3q7002c92jj0jb739lc"},{"name":"性能测试","_id":"cle7th3q9002h92jjhslm2xeh"},{"name":"锁","_id":"clfktd05r0004mdjd8q5sdu48"},{"name":"多线程","_id":"clfktd05w0009mdjd9lrh6ydy"},{"name":"焦虑","_id":"clfktd05z000gmdjd2bdo275f"},{"name":"cache","_id":"clfktd064000nmdjdc6ex5la4"},{"name":"缓存","_id":"clfktd067000vmdjd8m1m9806"},{"name":"springboot","_id":"clfktd06d001amdjdb7d3f56j"},{"name":"数据库","_id":"clfktd06g001hmdjdbpvl0imt"},{"name":"索引","_id":"clfktd06k001pmdjdaadga3zr"},{"name":"知识变现","_id":"clfktd06l001umdjde28j1nyq"},{"name":"并发编程","_id":"clfktd06m0023mdjd9o3x4vlw"},{"name":"openapi","_id":"clfktd06n0025mdjd4a8256ow"},{"name":"swagger3","_id":"clfktd06o0028mdjdas4n5cw8"},{"name":"study","_id":"clfktd06o0029mdjd49j40757"},{"name":"学习","_id":"clfktd06p002cmdjd33e5ehic"},{"name":"测试","_id":"clfktd06p002emdjd0ljo8mns"},{"name":"tips","_id":"clfktd06q002gmdjd1cgm2gff"},{"name":"mysql","_id":"clfktd06w002imdjdhkwc3gzn"}]}}